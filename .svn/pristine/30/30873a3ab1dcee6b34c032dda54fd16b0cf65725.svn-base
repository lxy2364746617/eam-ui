{"remainingRequest":"E:\\qrhpro\\cms-eam-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\qrhpro\\cms-eam-ui\\src\\layout\\components\\Sidebar\\SidebarItem.vue?vue&type=style&index=0&id=2d2bbdc2&lang=scss&scoped=true&","dependencies":[{"path":"E:\\qrhpro\\cms-eam-ui\\src\\layout\\components\\Sidebar\\SidebarItem.vue","mtime":1693981457364},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693791655299},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693791844037},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1693791775035},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693791815534},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693791616229},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1693791844037}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaXMtYWN0aXZlewogIC8vIC5zaWRlYmFyaXRlbWNvbnsKICAvLyAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoI2ZmZiwuMSkgIWltcG9ydGFudDsKICAvLyAgIGJvcmRlci1yYWRpdXM6IDZweDsKICAvLyAgIC8vIG1hcmdpbjogMCAxMHB4IDAgMTBweDsKICAvLyAgIGNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7CiAgLy8gfQp9Cg=="},{"version":3,"sources":["SidebarItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SidebarItem.vue","sourceRoot":"src/layout/components/Sidebar","sourcesContent":["<template>\r\n  <div v-if=\"!item.hidden\">\r\n    <template v-if=\"hasOneShowingChild(item.children,item) && (!onlyOneChild.children||onlyOneChild.noShowingChildren)&&!item.alwaysShow\">\r\n      <app-link v-if=\"onlyOneChild.meta\" :to=\"resolvePath(onlyOneChild.path, onlyOneChild.query)\">\r\n        <el-menu-item :index=\"resolvePath(onlyOneChild.path)\" :class=\"{'submenu-title-noDropdown':!isNest}\">\r\n          <item :icon=\"onlyOneChild.meta.icon||(item.meta&&item.meta.icon)\" :title=\"onlyOneChild.meta.title\" />\r\n        </el-menu-item>\r\n      </app-link>\r\n    </template>\r\n\r\n    <el-submenu v-else ref=\"subMenu\" :index=\"resolvePath(item.path)\" popper-append-to-body>\r\n      <template slot=\"title\">\r\n        <item v-if=\"item.meta\" :icon=\"item.meta && item.meta.icon\" :title=\"item.meta.title\" />\r\n      </template>\r\n      <sidebar-item\r\n        v-for=\"child in item.children\"\r\n        :key=\"child.path\"\r\n        :is-nest=\"true\"\r\n        :item=\"child\"\r\n        :base-path=\"resolvePath(child.path)\"\r\n        class=\"nest-menu\"\r\n      />\r\n    </el-submenu>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport path from 'path'\r\nimport { isExternal } from '@/utils/validate'\r\nimport Item from './Item'\r\nimport AppLink from './Link'\r\nimport FixiOSBug from './FixiOSBug'\r\n\r\nexport default {\r\n  name: 'SidebarItem',\r\n  components: { Item, AppLink },\r\n  mixins: [FixiOSBug],\r\n  props: {\r\n    // route object\r\n    item: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    isNest: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    basePath: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    this.onlyOneChild = null\r\n    return {}\r\n  },\r\n  methods: {\r\n    hasOneShowingChild(children = [], parent) {\r\n      if (!children) {\r\n        children = [];\r\n      }\r\n      const showingChildren = children.filter(item => {\r\n        if (item.hidden) {\r\n          return false\r\n        } else {\r\n          // Temp set(will be used if only has one showing child)\r\n          this.onlyOneChild = item\r\n          return true\r\n        }\r\n      })\r\n\r\n      // When there is only one child router, the child router is displayed by default\r\n      if (showingChildren.length === 1) {\r\n        return true\r\n      }\r\n\r\n      // Show parent if there are no child router to display\r\n      if (showingChildren.length === 0) {\r\n        this.onlyOneChild = { ... parent, path: '', noShowingChildren: true }\r\n        return true\r\n      }\r\n\r\n      return false\r\n    },\r\n    resolvePath(routePath, routeQuery) {\r\n      if (isExternal(routePath)) {\r\n        return routePath\r\n      }\r\n      if (isExternal(this.basePath)) {\r\n        return this.basePath\r\n      }\r\n      if (routeQuery) {\r\n        let query = JSON.parse(routeQuery);\r\n        return { path: path.resolve(this.basePath, routePath), query: query }\r\n      }\r\n      return path.resolve(this.basePath, routePath)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n  .is-active{\r\n    // .sidebaritemcon{\r\n    //   background-color: rgba(#fff,.1) !important;\r\n    //   border-radius: 6px;\r\n    //   // margin: 0 10px 0 10px;\r\n    //   color: #fff !important;\r\n    // }\r\n  }\r\n</style>"]}]}