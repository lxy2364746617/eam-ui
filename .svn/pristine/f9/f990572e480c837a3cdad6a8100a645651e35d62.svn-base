{"remainingRequest":"E:\\qrhpro\\cms-eam-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\qrhpro\\cms-eam-ui\\src\\views\\flowable\\task\\myProcess\\send\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\qrhpro\\cms-eam-ui\\src\\views\\flowable\\task\\myProcess\\send\\index.vue","mtime":1693791860319},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693791616229},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1693791596985},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693791616229},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1693791844037}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"index.vue","sourceRoot":"src/views/flowable/task/myProcess/send","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-card class=\"box-card\" >\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span class=\"el-icon-document\">发起任务</span>\r\n        <el-button style=\"float: right;\" size=\"mini\" type=\"danger\" @click=\"goBack\">关闭</el-button>\r\n      </div>\r\n      <el-tabs  tab-position=\"top\" v-model=\"activeName\"  @tab-click=\"handleClick\">\r\n        <!--表单信息-->\r\n        <el-tab-pane label=\"表单信息\" name=\"1\">\r\n            <!--初始化流程加载表单信息-->\r\n            <el-col :span=\"16\" :offset=\"4\">\r\n              <div class=\"test-form\">\r\n                <parser :key=\"new Date().getTime()\" :form-conf=\"formConf\" @submit=\"submitForm\" ref=\"parser\" @getData=\"getData\" />\r\n              </div>\r\n            </el-col>\r\n        </el-tab-pane>\r\n        <!--流程图-->\r\n        <el-tab-pane label=\"流程图\" name=\"2\">\r\n           <flow :flowData=\"flowData\"/>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n      <!--选择流程接收人-->\r\n      <el-dialog :title=\"taskTitle\" :visible.sync=\"taskOpen\" width=\"65%\" append-to-body>\r\n        <flow-user v-if=\"checkSendUser\" :checkType=\"checkType\"  @handleUserSelect=\"handleUserSelect\"/>\r\n        <flow-role v-if=\"checkSendRole\" @handleRoleSelect=\"handleRoleSelect\"/>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"taskOpen = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitTask\">提 交</el-button>\r\n        </span>\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Parser from '@/components/parser/Parser'\r\nimport {definitionStart, flowXmlAndNode} from \"@/api/flowable/definition\";\r\nimport flow from './flow'\r\nimport {flowFormData} from \"@/api/flowable/process\";\r\nimport {getNextFlowNodeByStart} from \"@/api/flowable/todo\";\r\nimport FlowUser from '@/components/flow/User'\r\nimport FlowRole from '@/components/flow/Role'\r\n\r\nexport default {\r\n  name: \"Record\",\r\n  components: {\r\n    Parser,\r\n    flow,\r\n    FlowUser,\r\n    FlowRole,\r\n  },\r\n  props: {},\r\n  data() {\r\n    return {\r\n      // 模型xml数据\r\n      flowData: {},\r\n      activeName: '1', // 切换tab标签\r\n      defaultProps: {\r\n        children: \"children\",\r\n        label: \"label\"\r\n      },\r\n      // 查询参数\r\n      queryParams: {\r\n        deptId: undefined\r\n      },\r\n      // 遮罩层\r\n      loading: true,\r\n      deployId: \"\",  // 流程定义编号\r\n      procDefId: \"\",  // 流程实例编号\r\n      formConf: {}, // 默认表单数据\r\n      variables: [], // 流程变量数据\r\n      taskTitle: null,\r\n      taskOpen: false,\r\n      checkSendUser: false, // 是否展示人员选择模块\r\n      checkSendRole: false,// 是否展示角色选择模块\r\n      checkType: '', // 选择类型\r\n      checkValues: null, // 选中任务接收人员数据\r\n      formData: {}, // 填写的表单数据,\r\n      multiInstanceVars: '' // 会签节点\r\n    };\r\n  },\r\n  created() {\r\n    this.deployId = this.$route.query && this.$route.query.deployId;\r\n    // 初始化表单\r\n    this.procDefId  = this.$route.query && this.$route.query.procDefId;\r\n    // this.getNextFlowNodeByStart(this.deployId);\r\n    this.getFlowFormData(this.deployId);\r\n  },\r\n  methods: {\r\n    handleClick(tab, event) {\r\n      if (tab.name === '2'){\r\n        flowXmlAndNode({deployId:this.deployId}).then(res => {\r\n          this.flowData = res.data;\r\n        })\r\n      }\r\n    },\r\n    /** 流程表单数据 */\r\n    getFlowFormData(deployId) {\r\n      const that = this\r\n      const params = {deployId: deployId}\r\n      flowFormData(params).then(res => {\r\n        // 流程过程中不存在初始化表单 直接读取的流程变量中存储的表单值\r\n          that.formConf = res.data;\r\n      }).catch(res => {\r\n        this.goBack();\r\n      })\r\n    },\r\n    /** 返回页面 */\r\n    goBack() {\r\n      // 关闭当前标签页并返回上个页面\r\n      const obj = { path: \"/task/process\", query: { t: Date.now()} };\r\n      this.$tab.closeOpenPage(obj);\r\n    },\r\n    /** 接收子组件传的值 */\r\n    getData(data) {\r\n      if (data) {\r\n        const variables = [];\r\n        data.fields.forEach(item => {\r\n          let variableData = {};\r\n          variableData.label = item.__config__.label\r\n          // 表单值为多个选项时\r\n          if (item.__config__.defaultValue instanceof Array) {\r\n            const array = [];\r\n            item.__config__.defaultValue.forEach(val => {\r\n              array.push(val)\r\n            })\r\n            variableData.val = array;\r\n          } else {\r\n            variableData.val = item.__config__.defaultValue\r\n          }\r\n          variables.push(variableData)\r\n        })\r\n        this.variables = variables;\r\n      }\r\n    },\r\n    /** 申请流程表单数据提交 */\r\n    submitForm(formData) {\r\n      // 根据当前任务或者流程设计配置的下一步节点 todo 暂时未涉及到考虑网关、表达式和多节点情况\r\n      getNextFlowNodeByStart({deploymentId: this.deployId,variables:formData.valData}).then(res => {\r\n        const data = res.data;\r\n        if (data) {\r\n          this.formData = formData;\r\n          if (data.dataType === 'dynamic') {\r\n            if (data.type === 'assignee') { // 指定人员\r\n              this.checkSendUser = true;\r\n              this.checkType = \"single\";\r\n            } else if (data.type === 'candidateUsers') {  // 候选人员(多个)\r\n              this.checkSendUser = true;\r\n              this.checkType = \"multiple\";\r\n            } else if (data.type === 'candidateGroups') { // 指定组(所属角色接收任务)\r\n              this.checkSendRole = true;\r\n            } else { // 会签\r\n              // 流程设计指定的 elementVariable 作为会签人员列表\r\n              this.multiInstanceVars = data.vars;\r\n              this.checkSendUser = true;\r\n              this.checkType = \"multiple\";\r\n            }\r\n            this.taskOpen = true;\r\n            this.taskTitle = \"选择任务接收\";\r\n          } else {\r\n            const variables = this.formData.valData;\r\n            const formData = this.formData.formData;\r\n            formData.disabled = true;\r\n            formData.formBtns = false;\r\n            if (this.procDefId) {\r\n              variables.variables = formData;\r\n              // 启动流程并将表单数据加入流程变量\r\n              definitionStart(this.procDefId, JSON.stringify(variables)).then(res => {\r\n                this.$modal.msgSuccess(res.msg);\r\n                this.goBack();\r\n              })\r\n            }\r\n          }\r\n        }\r\n      })\r\n    },\r\n    /** 提交流程 */\r\n    submitTask() {\r\n      if (!this.checkValues && this.checkSendUser){\r\n        this.$modal.msgError(\"请选择任务接收!\");\r\n        return;\r\n      }\r\n      if (!this.checkValues && this.checkSendRole){\r\n        this.$modal.msgError(\"请选择流程接收角色组!\");\r\n        return;\r\n      }\r\n      if (this.formData) {\r\n        const variables = this.formData.valData;\r\n        const formData = this.formData.formData;\r\n        // 表单是否禁用\r\n        formData.disabled = true;\r\n        // 是否显示按钮\r\n        formData.formBtns = false;\r\n        variables.variables = formData;\r\n        if (this.multiInstanceVars) {\r\n          this.$set(variables, this.multiInstanceVars, this.checkValues);\r\n        } else {\r\n          this.$set(variables, \"approval\", this.checkValues);\r\n        }\r\n        console.log(variables,\"流程发起提交表单数据\")\r\n        // 启动流程并将表单数据加入流程变量\r\n        definitionStart(this.procDefId, JSON.stringify(variables)).then(res => {\r\n          this.$modal.msgSuccess(res.msg);\r\n          this.goBack();\r\n        })\r\n      }\r\n    },\r\n    /** 根据当前任务获取流程设计配置的下一步节点 */\r\n    getNextFlowNodeByStart(deploymentId,variables) {\r\n      // 根据当前任务或者流程设计配置的下一步节点 todo 暂时未涉及到考虑网关、表达式和多节点情况\r\n      getNextFlowNodeByStart({deploymentId: deploymentId,variables:variables}).then(res => {\r\n        const data = res.data;\r\n        if (data) {\r\n          if (data.type === 'assignee') { // 指定人员\r\n            this.checkSendUser = true;\r\n            this.checkType = \"single\";\r\n          } else if (data.type === 'candidateUsers') {  // 候选人员(多个)\r\n            this.checkSendUser = true;\r\n            this.checkType = \"multiple\";\r\n          } else if (data.type === 'candidateGroups') { // 指定组(所属角色接收任务)\r\n            this.checkSendRole = true;\r\n          } else if (data.type === 'multiInstance') { // 会签?\r\n            // 流程设计指定的 elementVariable 作为会签人员列表\r\n            this.multiInstanceVars = data.vars;\r\n            this.checkSendUser = true;\r\n            this.checkType = \"multiple\";\r\n          }\r\n        }\r\n      })\r\n    },\r\n    // 用户信息选中数据\r\n    handleUserSelect(selection) {\r\n      if (selection) {\r\n        if (selection instanceof Array) {\r\n          const selectVal = selection.map(item => item.userId);\r\n          if (this.multiInstanceVars) {\r\n            this.checkValues = selectVal;\r\n          } else {\r\n            this.checkValues = selectVal.join(',');\r\n          }\r\n        } else {\r\n          this.checkValues = selection.userId;\r\n        }\r\n      }\r\n    },\r\n    // 角色信息选中数据\r\n    handleRoleSelect(selection) {\r\n      if (selection) {\r\n        if (selection instanceof Array) {\r\n          const selectVal = selection.map(item => item.roleId);\r\n          this.checkValues = selectVal.join(',')\r\n        } else {\r\n          this.checkValues = selection;\r\n        }\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.test-form {\r\n  margin: 15px auto;\r\n  width: 800px;\r\n  padding: 15px;\r\n}\r\n\r\n.clearfix:before,\r\n.clearfix:after {\r\n  display: table;\r\n  content: \"\";\r\n}\r\n.clearfix:after {\r\n  clear: both\r\n}\r\n\r\n.box-card {\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-tag + .el-tag {\r\n  margin-left: 10px;\r\n}\r\n\r\n.my-label {\r\n  background: #E1F3D8;\r\n}\r\n</style>\r\n"]}]}