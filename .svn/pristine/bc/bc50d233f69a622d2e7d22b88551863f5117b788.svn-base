{"remainingRequest":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\visual_code_work_space\\ruoyi-ui\\src\\components\\Process\\components\\nodePanel\\property\\signal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\visual_code_work_space\\ruoyi-ui\\src\\components\\Process\\components\\nodePanel\\property\\signal.vue","mtime":1693557459609},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgbWl4aW5QYW5lbCBmcm9tICcuLi8uLi8uLi9jb21tb24vbWl4aW5QYW5lbCcNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbWl4aW5zOiBbbWl4aW5QYW5lbF0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGRpYWxvZ1Zpc2libGU6IHRydWUsDQogICAgICBmb3JtRGF0YTogew0KICAgICAgICBzaWduYWw6IFtdDQogICAgICB9DQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIGZvcm1Db25maWcoKSB7DQogICAgLy8gICBjb25zdCBfdGhpcyA9IHRoaXMNCiAgICAgIHJldHVybiB7DQogICAgICAgIGlubGluZTogZmFsc2UsDQogICAgICAgIGl0ZW06IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICB4VHlwZTogJ3RhYnMnLA0KICAgICAgICAgICAgdGFiczogWw0KICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgbGFiZWw6ICfkv6Hlj7flrprkuYknLA0KICAgICAgICAgICAgICAgIG5hbWU6ICdzaWduYWwnLA0KICAgICAgICAgICAgICAgIGNvbHVtbjogWw0KICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ3Njb3BlJywNCiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3Njb3BlJywNCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDE4MCwNCiAgICAgICAgICAgICAgICAgICAgcnVsZXM6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36YCJ5oupJywgdHJpZ2dlcjogWydibHVyJywgJ2NoYW5nZSddIH1dLA0KICAgICAgICAgICAgICAgICAgICB4VHlwZTogJ3NlbGVjdCcsDQogICAgICAgICAgICAgICAgICAgIGRpYzogWw0KICAgICAgICAgICAgICAgICAgICAgIHsgbGFiZWw6ICflhajlsYAnLCB2YWx1ZTogJ3N0YXJ0JyB9LA0KICAgICAgICAgICAgICAgICAgICAgIHsgbGFiZWw6ICfmtYHnqIvlrp7kvosnLCB2YWx1ZTogJ2VuZCcgfQ0KICAgICAgICAgICAgICAgICAgICBdDQogICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ2lkJywNCiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2lkJywNCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDIwMCwNCiAgICAgICAgICAgICAgICAgICAgcnVsZXM6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWlJywgdHJpZ2dlcjogWydibHVyJywgJ2NoYW5nZSddIH1dLA0KICAgICAgICAgICAgICAgICAgICB4VHlwZTogJ2lucHV0Jw0KICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICflkI3np7AnLA0KICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbmFtZScsDQogICAgICAgICAgICAgICAgICAgIHhUeXBlOiAnaW5wdXQnLA0KICAgICAgICAgICAgICAgICAgICBydWxlczogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaUnLCB0cmlnZ2VyOiBbJ2JsdXInLCAnY2hhbmdlJ10gfV0NCiAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBdDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIF0NCiAgICAgICAgICB9DQogICAgICAgIF0NCiAgICAgIH0NCiAgICB9DQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgLy8gdGhpcy5mb3JtRGF0YS5zaWduYWwgPSB0aGlzLmVsZW1lbnQuYnVzaW5lc3NPYmplY3QuZXh0ZW5zaW9uRWxlbWVudHM/LnZhbHVlcy5tYXAoaXRlbSA9PiB7DQogICAgdGhpcy5mb3JtRGF0YS5zaWduYWwgPSB0aGlzLmVsZW1lbnQuYnVzaW5lc3NPYmplY3QuZXh0ZW5zaW9uRWxlbWVudHM/LnZhbHVlcw0KICAgICAgLmZpbHRlcihpdGVtID0+IGl0ZW0uJHR5cGUgPT09ICdicG1uOlNpZ25hbCcpDQogICAgICAubWFwKGl0ZW0gPT4gew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgIHNjb3BlOiBpdGVtLnNjb3BlLA0KICAgICAgICAgIGlkOiBpdGVtLmlkLA0KICAgICAgICAgIG5hbWU6IGl0ZW0ubmFtZQ0KICAgICAgICB9DQogICAgICB9KSA/PyBbXQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgdXBkYXRlRWxlbWVudCgpIHsNCiAgICAgIC8vIGlmICh0aGlzLmZvcm1EYXRhLnNpZ25hbD8ubGVuZ3RoKSB7DQogICAgICAvLyAgIGxldCBleHRlbnNpb25FbGVtZW50cyA9IHRoaXMuZWxlbWVudC5idXNpbmVzc09iamVjdC5nZXQoJ2V4dGVuc2lvbkVsZW1lbnRzJykNCiAgICAgIC8vICAgaWYgKCFleHRlbnNpb25FbGVtZW50cykgew0KICAgICAgLy8gICAgIGNvbnNvbGUubG9nKHRoaXMubW9kZWxlci5nZXQoJ21vZGRsZScpLCJ0aGlzLm1vZGVsZXIuZ2V0KCdtb2RkbGUnKSIpDQogICAgICAvLyAgICAgZXh0ZW5zaW9uRWxlbWVudHMgPSB0aGlzLm1vZGVsZXIuZ2V0KCdtb2RkbGUnKS5jcmVhdGUoJ2JwbW46U2lnbmFsJykNCiAgICAgIC8vICAgfQ0KICAgICAgLy8gICBleHRlbnNpb25FbGVtZW50cy52YWx1ZXMgPSBleHRlbnNpb25FbGVtZW50cy52YWx1ZXM/LmZpbHRlcihpdGVtID0+IGl0ZW0uJHR5cGUgIT09ICdicG1uOlNpZ25hbCcpID8/IFtdDQogICAgICAvLyAgIGNvbnNvbGUubG9nKGV4dGVuc2lvbkVsZW1lbnRzLCJleHRlbnNpb25FbGVtZW50cyIpDQogICAgICAvLyAgIGNvbnN0IGxlbmd0aCA9IGV4dGVuc2lvbkVsZW1lbnRzLmdldCgndmFsdWVzJykubGVuZ3RoDQogICAgICAvLyAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsNCiAgICAgIC8vICAgICAvLyDmuIXpmaTml6flgLwNCiAgICAgIC8vICAgICBleHRlbnNpb25FbGVtZW50cy5nZXQoJ3ZhbHVlcycpLnBvcCgpDQogICAgICAvLyAgIH0NCiAgICAgIC8vICAgdGhpcy51cGRhdGVQcm9wZXJ0aWVzKHsgZXh0ZW5zaW9uRWxlbWVudHM6IGV4dGVuc2lvbkVsZW1lbnRzIH0pDQogICAgICAvLyB9IGVsc2Ugew0KICAgICAgLy8gICBjb25zdCBleHRlbnNpb25FbGVtZW50cyA9IHRoaXMuZWxlbWVudC5idXNpbmVzc09iamVjdFtgZXh0ZW5zaW9uRWxlbWVudHNgXQ0KICAgICAgLy8gICBpZiAoZXh0ZW5zaW9uRWxlbWVudHMpIHsNCiAgICAgIC8vICAgICBleHRlbnNpb25FbGVtZW50cy52YWx1ZXMgPSBleHRlbnNpb25FbGVtZW50cy52YWx1ZXM/LmZpbHRlcihpdGVtID0+IGl0ZW0uJHR5cGUgIT09ICdmbG93YWJsZTpFeGVjdXRpb25MaXN0ZW5lcicpDQogICAgICAvLyAgIH0NCiAgICAgIC8vIH0NCiAgICAgIGlmICh0aGlzLmZvcm1EYXRhLnNpZ25hbD8ubGVuZ3RoKSB7DQogICAgICAgIGxldCBleHRlbnNpb25FbGVtZW50cyA9IHRoaXMuZWxlbWVudC5idXNpbmVzc09iamVjdC5nZXQoJ2V4dGVuc2lvbkVsZW1lbnRzJykNCiAgICAgICAgaWYgKCFleHRlbnNpb25FbGVtZW50cykgew0KICAgICAgICAgIGV4dGVuc2lvbkVsZW1lbnRzID0gdGhpcy5tb2RlbGVyLmdldCgnbW9kZGxlJykuY3JlYXRlKCdicG1uOkV4dGVuc2lvbkVsZW1lbnRzJykNCiAgICAgICAgfQ0KICAgICAgICAvLyDmuIXpmaTml6flgLwNCiAgICAgICAgZXh0ZW5zaW9uRWxlbWVudHMudmFsdWVzID0gZXh0ZW5zaW9uRWxlbWVudHMudmFsdWVzPy5maWx0ZXIoaXRlbSA9PiBpdGVtLiR0eXBlICE9PSAnYnBtbjpTaWduYWwnKSA/PyBbXQ0KICAgICAgICB0aGlzLmZvcm1EYXRhLnNpZ25hbC5mb3JFYWNoKGl0ZW0gPT4gew0KICAgICAgICAgIGNvbnN0IHNpZ25hbCA9IHRoaXMubW9kZWxlci5nZXQoJ21vZGRsZScpLmNyZWF0ZSgnYnBtbjpTaWduYWwnKQ0KICAgICAgICAgIHNpZ25hbFsnc2NvcGUnXSA9IGl0ZW0uc2NvcGUNCiAgICAgICAgICBzaWduYWxbJ2lkJ10gPSBpdGVtLmlkDQogICAgICAgICAgc2lnbmFsWyduYW1lJ10gPSBpdGVtLm5hbWUNCiAgICAgICAgICBleHRlbnNpb25FbGVtZW50cy5nZXQoJ3ZhbHVlcycpLnB1c2goc2lnbmFsKQ0KICAgICAgICB9KQ0KICAgICAgICB0aGlzLnVwZGF0ZVByb3BlcnRpZXMoeyBleHRlbnNpb25FbGVtZW50czogZXh0ZW5zaW9uRWxlbWVudHMgfSkNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIGNvbnN0IGV4dGVuc2lvbkVsZW1lbnRzID0gdGhpcy5lbGVtZW50LmJ1c2luZXNzT2JqZWN0W2BleHRlbnNpb25FbGVtZW50c2BdDQogICAgICAgIGlmIChleHRlbnNpb25FbGVtZW50cykgew0KICAgICAgICAgIGV4dGVuc2lvbkVsZW1lbnRzLnZhbHVlcyA9IGV4dGVuc2lvbkVsZW1lbnRzLnZhbHVlcz8uZmlsdGVyKGl0ZW0gPT4gaXRlbS4kdHlwZSAhPT0gJ2JwbW46U2lnbmFsJykgPz8gW10NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0sDQogICAgY2xvc2VEaWFsb2coKSB7DQogICAgICB0aGlzLiRyZWZzLnhGb3JtLnZhbGlkYXRlKCkudGhlbigoKSA9PiB7DQogICAgICAgIHRoaXMudXBkYXRlRWxlbWVudCgpDQogICAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IGZhbHNlDQogICAgICB9KS5jYXRjaChlID0+IGNvbnNvbGUuZXJyb3IoZSkpDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["signal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAofile":"signal.vue","sourceRoot":"src/components/Process/components/nodePanel/property","sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog\r\n      title=\"信号定义\"\r\n      :visible.sync=\"dialogVisible\"\r\n      width=\"700px\"\r\n      :close-on-click-modal=\"false\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n      @closed=\"$emit('close')\"\r\n    >\r\n      <x-form ref=\"xForm\" v-model=\"formData\" :config=\"formConfig\" />\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" size=\"medium\" @click=\"closeDialog\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mixinPanel from '../../../common/mixinPanel'\r\nexport default {\r\n  mixins: [mixinPanel],\r\n  data() {\r\n    return {\r\n      dialogVisible: true,\r\n      formData: {\r\n        signal: []\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    formConfig() {\r\n    //   const _this = this\r\n      return {\r\n        inline: false,\r\n        item: [\r\n          {\r\n            xType: 'tabs',\r\n            tabs: [\r\n              {\r\n                label: '信号定义',\r\n                name: 'signal',\r\n                column: [\r\n                  {\r\n                    label: 'scope',\r\n                    name: 'scope',\r\n                    width: 180,\r\n                    rules: [{ required: true, message: '请选择', trigger: ['blur', 'change'] }],\r\n                    xType: 'select',\r\n                    dic: [\r\n                      { label: '全局', value: 'start' },\r\n                      { label: '流程实例', value: 'end' }\r\n                    ]\r\n                  },\r\n                  {\r\n                    label: 'id',\r\n                    name: 'id',\r\n                    width: 200,\r\n                    rules: [{ required: true, message: '请输入', trigger: ['blur', 'change'] }],\r\n                    xType: 'input'\r\n                  },\r\n                  {\r\n                    label: '名称',\r\n                    name: 'name',\r\n                    xType: 'input',\r\n                    rules: [{ required: true, message: '请输入', trigger: ['blur', 'change'] }]\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // this.formData.signal = this.element.businessObject.extensionElements?.values.map(item => {\r\n    this.formData.signal = this.element.businessObject.extensionElements?.values\r\n      .filter(item => item.$type === 'bpmn:Signal')\r\n      .map(item => {\r\n        return {\r\n          scope: item.scope,\r\n          id: item.id,\r\n          name: item.name\r\n        }\r\n      }) ?? []\r\n  },\r\n  methods: {\r\n    updateElement() {\r\n      // if (this.formData.signal?.length) {\r\n      //   let extensionElements = this.element.businessObject.get('extensionElements')\r\n      //   if (!extensionElements) {\r\n      //     console.log(this.modeler.get('moddle'),\"this.modeler.get('moddle')\")\r\n      //     extensionElements = this.modeler.get('moddle').create('bpmn:Signal')\r\n      //   }\r\n      //   extensionElements.values = extensionElements.values?.filter(item => item.$type !== 'bpmn:Signal') ?? []\r\n      //   console.log(extensionElements,\"extensionElements\")\r\n      //   const length = extensionElements.get('values').length\r\n      //   for (let i = 0; i < length; i++) {\r\n      //     // 清除旧值\r\n      //     extensionElements.get('values').pop()\r\n      //   }\r\n      //   this.updateProperties({ extensionElements: extensionElements })\r\n      // } else {\r\n      //   const extensionElements = this.element.businessObject[`extensionElements`]\r\n      //   if (extensionElements) {\r\n      //     extensionElements.values = extensionElements.values?.filter(item => item.$type !== 'flowable:ExecutionListener')\r\n      //   }\r\n      // }\r\n      if (this.formData.signal?.length) {\r\n        let extensionElements = this.element.businessObject.get('extensionElements')\r\n        if (!extensionElements) {\r\n          extensionElements = this.modeler.get('moddle').create('bpmn:ExtensionElements')\r\n        }\r\n        // 清除旧值\r\n        extensionElements.values = extensionElements.values?.filter(item => item.$type !== 'bpmn:Signal') ?? []\r\n        this.formData.signal.forEach(item => {\r\n          const signal = this.modeler.get('moddle').create('bpmn:Signal')\r\n          signal['scope'] = item.scope\r\n          signal['id'] = item.id\r\n          signal['name'] = item.name\r\n          extensionElements.get('values').push(signal)\r\n        })\r\n        this.updateProperties({ extensionElements: extensionElements })\r\n      } else {\r\n        const extensionElements = this.element.businessObject[`extensionElements`]\r\n        if (extensionElements) {\r\n          extensionElements.values = extensionElements.values?.filter(item => item.$type !== 'bpmn:Signal') ?? []\r\n        }\r\n      }\r\n    },\r\n    closeDialog() {\r\n      this.$refs.xForm.validate().then(() => {\r\n        this.updateElement()\r\n        this.dialogVisible = false\r\n      }).catch(e => console.error(e))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.flow-containers  .el-badge__content.is-fixed {\r\n    top: 18px;\r\n}\r\n</style>\r\n"]}]}