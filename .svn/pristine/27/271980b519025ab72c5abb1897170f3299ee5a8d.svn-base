{"remainingRequest":"E:\\visual_code_work_space\\cms-eam-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\visual_code_work_space\\cms-eam-ui\\src\\components\\Process\\components\\nodePanel\\task.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\visual_code_work_space\\cms-eam-ui\\src\\components\\Process\\components\\nodePanel\\task.vue","mtime":1693557459616},{"path":"E:\\visual_code_work_space\\cms-eam-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\cms-eam-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\visual_code_work_space\\cms-eam-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\cms-eam-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"task.vue","sourceRoot":"src/components/Process/components/nodePanel","sourcesContent":["<template>\r\n  <div>\r\n    <x-form ref=\"xForm\" v-model=\"formData\" :config=\"formConfig\">\r\n      <template #executionListener>\r\n        <el-badge :value=\"executionListenerLength\">\r\n          <el-button size=\"small\" @click=\"dialogName = 'executionListenerDialog'\">编辑</el-button>\r\n        </el-badge>\r\n      </template>\r\n      <template #taskListener>\r\n        <el-badge :value=\"taskListenerLength\">\r\n          <el-button size=\"small\" @click=\"dialogName = 'taskListenerDialog'\">编辑</el-button>\r\n        </el-badge>\r\n      </template>\r\n      <template #multiInstance>\r\n        <el-badge :is-dot=\"hasMultiInstance\">\r\n          <el-button size=\"small\" @click=\"dialogName = 'multiInstanceDialog'\">编辑</el-button>\r\n        </el-badge>\r\n      </template>\r\n      <template #checkSingleUser>\r\n          <el-input placeholder=\"请选择人员\" class=\"input-with-select\" v-model=\"checkValues\">\r\n              <template slot=\"append\">\r\n                <!--指定用户-->\r\n                <el-button style=\"padding-left: 7px\" icon=\"el-icon-user\" @click=\"singleUserCheck\"/>\r\n                <el-divider direction=\"vertical\"></el-divider>\r\n                <!--选择表达式-->\r\n                <el-button style=\"padding-right: 7px\" icon=\"el-icon-postcard\" @click=\"singleExpCheck('assignee')\"/>\r\n              </template>\r\n          </el-input>\r\n      </template>\r\n      <template #checkMultipleUser>\r\n          <el-input placeholder=\"请选择候选用户\" class=\"input-with-select\" v-model=\"checkValues\">\r\n            <template slot=\"append\">\r\n              <!--候选用户-->\r\n              <el-button style=\"padding-left: 7px\" icon=\"el-icon-user\" @click=\"multipleUserCheck\"/>\r\n              <el-divider direction=\"vertical\"></el-divider>\r\n              <!--选择表达式-->\r\n              <el-button style=\"padding-right: 7px\" icon=\"el-icon-postcard\" @click=\"singleExpCheck('candidateUsers')\"/>\r\n            </template>\r\n          </el-input>\r\n      </template>\r\n      <template #checkRole>\r\n        <el-input placeholder=\"请选择候选角色\" class=\"input-with-select\" v-model=\"checkValues\">\r\n          <template slot=\"append\">\r\n          <!--候选角色-->\r\n            <el-button style=\"padding-left: 7px\" icon=\"el-icon-user\" @click=\"multipleRoleCheck\"/>\r\n            <el-divider direction=\"vertical\"></el-divider>\r\n              <!--选择表达式-->\r\n            <el-button style=\"padding-right: 7px\" icon=\"el-icon-postcard\" @click=\"singleExpCheck('candidateGroups')\"/>\r\n          </template>\r\n        </el-input>\r\n      </template>\r\n    </x-form>\r\n    <executionListenerDialog\r\n      v-if=\"dialogName === 'executionListenerDialog'\"\r\n      :element=\"element\"\r\n      :modeler=\"modeler\"\r\n      @close=\"finishExecutionListener\"\r\n    />\r\n    <taskListenerDialog\r\n      v-if=\"dialogName === 'taskListenerDialog'\"\r\n      :element=\"element\"\r\n      :modeler=\"modeler\"\r\n      @close=\"finishTaskListener\"\r\n    />\r\n    <multiInstanceDialog\r\n      v-if=\"dialogName === 'multiInstanceDialog'\"\r\n      :element=\"element\"\r\n      :modeler=\"modeler\"\r\n      @close=\"finishMultiInstance\"\r\n    />\r\n    <!--选择人员-->\r\n    <el-dialog\r\n      title=\"选择人员\"\r\n      :visible.sync=\"userVisible\"\r\n      width=\"60%\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n    >\r\n    <flow-user :checkType=\"checkType\" :selectValues=\"selectValues\" @handleUserSelect=\"handleUserSelect\"></flow-user>\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"userVisible = false\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"checkUserComplete\">确 定</el-button>\r\n    </span>\r\n    </el-dialog>\r\n    <!--选择表达式-->\r\n    <el-dialog\r\n      title=\"选择表达式\"\r\n      :visible.sync=\"expVisible\"\r\n      width=\"60%\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n    >\r\n      <flow-exp :selectValues=\"selectValues\" @handleSingleExpSelect=\"handleSingleExpSelect\"></flow-exp>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"expVisible = false\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"checkExpComplete\">确 定</el-button>\r\n    </span>\r\n    </el-dialog>\r\n    <!--选择角色-->\r\n    <el-dialog\r\n      title=\"选择候选角色\"\r\n      :visible.sync=\"roleVisible\"\r\n      width=\"60%\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n    >\r\n      <flow-role :checkType=\"checkType\" :selectValues=\"selectValues\" @handleRoleSelect=\"handleRoleSelect\"></flow-role>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"roleVisible = false\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"checkRoleComplete\">确 定</el-button>\r\n    </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mixinPanel from '../../common/mixinPanel'\r\nimport executionListenerDialog from './property/executionListener'\r\nimport taskListenerDialog from './property/taskListener'\r\nimport multiInstanceDialog from './property/multiInstance'\r\nimport { commonParse, userTaskParse } from '../../common/parseElement'\r\nimport {StrUtil} from '@/utils/StrUtil'\r\nimport FlowUser from '@/components/flow/User'\r\nimport FlowRole from '@/components/flow/Role'\r\nimport FlowExp from '@/components/flow/Expression'\r\nimport { listAllForm } from '@/api/flowable/form'\r\n\r\nexport default {\r\n  components: {\r\n    executionListenerDialog,\r\n    taskListenerDialog,\r\n    multiInstanceDialog,\r\n    FlowUser,\r\n    FlowRole,\r\n    FlowExp,\r\n  },\r\n  mixins: [mixinPanel],\r\n  props: {\r\n    users: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    groups: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    exps: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      userTypeOption: [\r\n        { label: '指定人员', value: 'assignee' },\r\n        { label: '候选人员', value: 'candidateUsers' },\r\n        { label: '候选角色', value: 'candidateGroups' }\r\n      ],\r\n      dialogName: '',\r\n      executionListenerLength: 0,\r\n      taskListenerLength: 0,\r\n      hasMultiInstance: false,\r\n      userVisible: false,\r\n      roleVisible: false,\r\n      expVisible: false,\r\n      formData: {},\r\n      assignee: null,\r\n      candidateUsers: null,\r\n      candidateGroups: null,\r\n      // 选类型\r\n      checkType: 'single',\r\n      // 选中的值\r\n      checkValues: null,\r\n      // 数据回显\r\n      selectValues: null,\r\n      // 用户列表\r\n      userList: this.users,\r\n      // 角色列表\r\n      groupList: this.groups,\r\n      // 表达式列表\r\n      expList: this.exps,\r\n      // 表达式类型\r\n      expType: null,\r\n      // 表单列表\r\n      formList: [],\r\n    }\r\n  },\r\n  computed: {\r\n    formConfig() {\r\n      const _this = this\r\n      return {\r\n        inline: false,\r\n        item: [\r\n          {\r\n            xType: 'input',\r\n            name: 'id',\r\n            label: '节点 id',\r\n            rules: [{ required: true, message: 'Id 不能为空' }]\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'name',\r\n            label: '节点名称',\r\n            rules: [{ required: true, message: '节点名称不能为空' }]\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'documentation',\r\n            label: '节点描述'\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'executionListener',\r\n            label: '执行监听器'\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'taskListener',\r\n            label: '任务监听器',\r\n            show: !!_this.showConfig.taskListener\r\n          },\r\n          {\r\n            xType: 'select',\r\n            name: 'userType',\r\n            label: '用户类型',\r\n            // clearable: true,\r\n            dic: _this.userTypeOption,\r\n            // rules: [{ required: true, message: '用户类型不能为空' }],\r\n            show: !!_this.showConfig.userType\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'checkSingleUser',\r\n            label: '指定人员',\r\n            // rules: [{ required: true, message: '指定人员不能为空' }],\r\n            show: !!_this.showConfig.assignee && _this.formData.userType === 'assignee'\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'checkMultipleUser',\r\n            label: '候选人员',\r\n            // rules: [{ required: true, message: '候选人员不能为空' }],\r\n            show: !!_this.showConfig.candidateUsers && _this.formData.userType === 'candidateUsers'\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'checkRole',\r\n            label: '候选角色',\r\n            // rules: [{ required: true, message: '候选角色不能为空' }],\r\n            show: !!_this.showConfig.candidateGroups && _this.formData.userType === 'candidateGroups'\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'multiInstance',\r\n            label: '多实例'\r\n          },\r\n          {\r\n            xType: 'switch',\r\n            name: 'async',\r\n            label: '异步',\r\n            activeText: '是',\r\n            inactiveText: '否',\r\n            show: !!_this.showConfig.async\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'priority',\r\n            label: '优先级',\r\n            show: !!_this.showConfig.priority\r\n          },\r\n          // {\r\n          //   xType: 'input',\r\n          //   name: 'formKey',\r\n          //   label: '表单标识key',\r\n          //   show: !!_this.showConfig.formKey\r\n          // },\r\n          {\r\n            xType: 'select',\r\n            name: 'formKey',\r\n            label: '表单标识key',\r\n            clearable: true,\r\n            dic: { data: _this.formList, label: 'formName', value: 'formId' },\r\n            show: !!_this.showConfig.formKey\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'skipExpression',\r\n            label: '跳过表达式',\r\n            show: !!_this.showConfig.skipExpression\r\n          },\r\n          {\r\n            xType: 'switch',\r\n            name: 'isForCompensation',\r\n            label: '是否为补偿',\r\n            activeText: '是',\r\n            inactiveText: '否',\r\n            show: !!_this.showConfig.isForCompensation\r\n          },\r\n          {\r\n            xType: 'switch',\r\n            name: 'triggerable',\r\n            label: '服务任务可触发',\r\n            activeText: '是',\r\n            inactiveText: '否',\r\n            show: !!_this.showConfig.triggerable\r\n          },\r\n          {\r\n            xType: 'switch',\r\n            name: 'autoStoreVariables',\r\n            label: '自动存储变量',\r\n            activeText: '是',\r\n            inactiveText: '否',\r\n            show: !!_this.showConfig.autoStoreVariables\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'ruleVariablesInput',\r\n            label: '输入变量',\r\n            show: !!_this.showConfig.ruleVariablesInput\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'rules',\r\n            label: '规则',\r\n            show: !!_this.showConfig.rules\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'resultVariable',\r\n            label: '结果变量',\r\n            show: !!_this.showConfig.resultVariable\r\n          },\r\n          {\r\n            xType: 'switch',\r\n            name: 'exclude',\r\n            label: '排除',\r\n            activeText: '是',\r\n            inactiveText: '否',\r\n            show: !!_this.showConfig.exclude\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'class',\r\n            label: '类',\r\n            show: !!_this.showConfig.class\r\n          },\r\n          {\r\n            xType: 'datePicker',\r\n            type: 'datetime',\r\n            valueFormat: 'yyyy-MM-ddTHH:mm:ss',\r\n            name: 'dueDate',\r\n            label: '到期时间',\r\n            show: !!_this.showConfig.dueDate\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    'formData.userType': function(val, oldVal) {\r\n      if (StrUtil.isNotBlank(oldVal)) {\r\n          delete this.element.businessObject.$attrs[`flowable:${oldVal}`]\r\n          delete this.formData[oldVal]\r\n          // 清除已选人员数据\r\n          this.checkValues = '';\r\n          this.selectValues = null;\r\n          // 删除xml中已选择数据类型节点\r\n          delete this.element.businessObject.$attrs[`flowable:dataType`]\r\n      }\r\n      // 写入userType节点信息到xml\r\n      this.updateProperties({'flowable:userType': val})\r\n    },\r\n    'formData.async': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:async': val})\r\n      }\r\n    },\r\n    'formData.dueDate': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:dueDate': val})\r\n      }\r\n    },\r\n    'formData.formKey': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:formKey': val})\r\n      } else {\r\n        // 删除xml中已选择表单信息\r\n        delete this.element.businessObject[`formKey`]\r\n      }\r\n    },\r\n    'formData.priority': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:priority': val})\r\n      }\r\n    },\r\n    'formData.skipExpression': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:skipExpression': val})\r\n      } else {\r\n        delete this.element.businessObject.$attrs[`flowable:skipExpression`]\r\n      }\r\n    },\r\n    'formData.isForCompensation': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'isForCompensation': val})\r\n      }\r\n    },\r\n    'formData.triggerable': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:triggerable': val})\r\n      }\r\n    },\r\n    'formData.class': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:class': val})\r\n      }\r\n    },\r\n    'formData.autoStoreVariables': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:autoStoreVariables': val})\r\n      }\r\n    },\r\n    'formData.exclude': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:exclude': val})\r\n      }\r\n    },\r\n    'formData.ruleVariablesInput': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:ruleVariablesInput': val})\r\n      }\r\n    },\r\n    'formData.rules': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:rules': val})\r\n      }\r\n    },\r\n    'formData.resultVariable': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:resultVariable': val})\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    let cache = commonParse(this.element)\r\n    cache = userTaskParse(cache)\r\n    this.formData = cache\r\n    this.computedExecutionListenerLength()\r\n    this.computedTaskListenerLength()\r\n    this.computedHasMultiInstance()\r\n    // 人员信息回显\r\n    this.checkValuesEcho();\r\n    // 加载表单列表\r\n    this.getListForm();\r\n  },\r\n  methods: {\r\n    computedExecutionListenerLength() {\r\n      this.executionListenerLength = this.element.businessObject.extensionElements?.values\r\n        ?.filter(item => item.$type === 'flowable:ExecutionListener').length ?? 0\r\n    },\r\n    computedTaskListenerLength() {\r\n      this.taskListenerLength = this.element.businessObject.extensionElements?.values\r\n        ?.filter(item => item.$type === 'flowable:TaskListener').length ?? 0\r\n    },\r\n    computedHasMultiInstance() {\r\n      if (this.element.businessObject.loopCharacteristics) {\r\n        this.hasMultiInstance = true\r\n      } else {\r\n        this.hasMultiInstance = false\r\n      }\r\n    },\r\n    // 获取表单信息\r\n    getListForm(){\r\n      listAllForm().then(res =>{\r\n        res.data.forEach(item =>{\r\n          item.formId = item.formId.toString();\r\n        })\r\n        this.formList = res.data;\r\n      })\r\n    },\r\n    // 设计器右侧表单数据回显\r\n    checkValuesEcho(){\r\n      const that = this;\r\n      const attrs = that.element.businessObject.$attrs;\r\n      const businessObject = that.element.businessObject;\r\n      console.log(that.element.businessObject,\"this.element.businessObject\")\r\n      // 指定用户\r\n      if (attrs.hasOwnProperty(\"flowable:assignee\")) {\r\n        const val = attrs[\"flowable:assignee\"];\r\n        // 查找是否动态指定人员(选中流程表达式)\r\n        if (attrs[\"flowable:dataType\"] === \"dynamic\") {\r\n          this.checkValues = that.expList.find(item => item.expression == val).name;\r\n          this.selectValues = that.expList.find(item => item.expression == val).id;\r\n        } else {\r\n          this.checkValues = that.userList.find(item => item.userId == val).nickName;\r\n          this.selectValues = that.userList.find(item => item.userId == val).userId;\r\n        }\r\n        // 候选用户\r\n      } else if (attrs.hasOwnProperty(\"flowable:candidateUsers\")) {\r\n        const val = attrs[\"flowable:candidateUsers\"];\r\n        if (attrs[\"flowable:dataType\"] === \"dynamic\") {\r\n          this.checkValues = that.expList.find(item => item.expression == val).name;\r\n          this.selectValues = that.expList.find(item => item.expression == val).id;\r\n        } else {\r\n          const newArr = that.userList.filter(i => val.split(',').includes(i.userId))\r\n          this.checkValues =  newArr.map(item => item.nickName).join(',');\r\n          this.selectValues = newArr.map(item => item.userId).join(',');\r\n        }\r\n      } else if (businessObject.hasOwnProperty(\"candidateGroups\") || attrs.hasOwnProperty(\"flowable:candidateGroups\") ) {\r\n        // 候选角色信息\r\n        const val = businessObject[\"candidateGroups\"] || attrs[\"flowable:candidateGroups\"];\r\n        if (attrs[\"flowable:dataType\"] === \"dynamic\") {\r\n          this.checkValues = that.expList.find(item => item.expression == val).name;\r\n          this.selectValues = that.expList.find(item => item.expression == val).id;\r\n        } else {\r\n          const newArr = that.groupList.filter(i => val.split(',').includes(i.roleId))\r\n          this.checkValues =  newArr.map(item => item.roleName).join(',');\r\n          this.selectValues = newArr.map(item => item.roleId).join(',');\r\n        }\r\n      }\r\n    },\r\n    finishExecutionListener() {\r\n      if (this.dialogName === 'executionListenerDialog') {\r\n        this.computedExecutionListenerLength()\r\n      }\r\n      this.dialogName = ''\r\n    },\r\n    finishTaskListener() {\r\n      if (this.dialogName === 'taskListenerDialog') {\r\n        this.computedTaskListenerLength()\r\n      }\r\n      this.dialogName = ''\r\n    },\r\n    finishMultiInstance() {\r\n      if (this.dialogName === 'multiInstanceDialog') {\r\n        this.computedHasMultiInstance()\r\n      }\r\n      this.dialogName = ''\r\n    },\r\n    /*单选人员*/\r\n    singleUserCheck(){\r\n      this.userVisible = true;\r\n      this.checkType = \"single\";\r\n    },\r\n    /*多选人员*/\r\n    multipleUserCheck(){\r\n      this.userVisible = true;\r\n      this.checkType = \"multiple\";\r\n    },\r\n    /*单选角色*/\r\n    singleRoleCheck(){\r\n      this.roleVisible = true;\r\n      this.checkType = \"single\";\r\n    },\r\n    /*多选角色*/\r\n    multipleRoleCheck(){\r\n      this.roleVisible = true;\r\n      this.checkType = \"multiple\";\r\n    },\r\n    /*单选表达式*/\r\n    singleExpCheck(expType){\r\n      this.expVisible = true;\r\n      this.expType = expType;\r\n    },\r\n    // 选中表达式\r\n    handleSingleExpSelect(selection) {\r\n      this.deleteFlowAttar();\r\n      this.updateProperties({'flowable:dataType': 'dynamic'})\r\n      if (\"assignee\" === this.expType) {\r\n        this.updateProperties({'flowable:assignee': selection.expression});\r\n      } else if (\"candidateUsers\" === this.expType) {\r\n        this.updateProperties({'flowable:candidateUsers': selection.expression});\r\n      } else if (\"candidateGroups\" === this.expType) {\r\n        this.updateProperties({'flowable:candidateGroups': selection.expression});\r\n      }\r\n      this.checkValues = selection.name;\r\n      this.expType = null;\r\n    },\r\n    // 用户选中数据\r\n    handleUserSelect(selection) {\r\n      const that = this;\r\n      if (selection) {\r\n        that.deleteFlowAttar();\r\n        that.updateProperties({'flowable:dataType': 'fixed'})\r\n        if (selection instanceof Array) {\r\n          const userIds = selection.map(item => item.userId);\r\n          const nickName = selection.map(item => item.nickName);\r\n          that.updateProperties({'flowable:candidateUsers': userIds.join(',')})\r\n          that.checkValues = nickName.join(',');\r\n        } else {\r\n          that.updateProperties({'flowable:assignee': selection.userId})\r\n          that.checkValues = selection.nickName;\r\n        }\r\n      }\r\n    },\r\n    // 角色选中数据\r\n    handleRoleSelect(selection, name) {\r\n      const that = this;\r\n      if (selection && name) {\r\n        that.deleteFlowAttar();\r\n        that.updateProperties({'flowable:dataType': 'fixed'})\r\n        that.updateProperties({'flowable:candidateGroups': selection});\r\n        that.checkValues = name;\r\n      }\r\n    },\r\n    /*用户选中赋值*/\r\n    checkUserComplete(){\r\n      this.userVisible = false;\r\n      this.checkType = \"\";\r\n    },\r\n    /*候选角色选中赋值*/\r\n    checkRoleComplete(){\r\n      this.roleVisible = false;\r\n      this.checkType = \"\";\r\n      },\r\n    /*表达式选中赋值*/\r\n    checkExpComplete(){\r\n      this.expVisible = false;\r\n    },\r\n    // 删除节点\r\n    deleteFlowAttar(){\r\n      delete this.element.businessObject.$attrs[`flowable:dataType`]\r\n      delete this.element.businessObject.$attrs[`flowable:assignee`]\r\n      delete this.element.businessObject.$attrs[`flowable:candidateUsers`]\r\n      delete this.element.businessObject.$attrs[`flowable:candidateGroups`]\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style></style>\r\n"]}]}