{"remainingRequest":"E:\\qrhpro\\cms-eam-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\qrhpro\\cms-eam-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\qrhpro\\cms-eam-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\qrhpro\\cms-eam-ui\\src\\components\\Process\\components\\nodePanel\\task.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\qrhpro\\cms-eam-ui\\src\\components\\Process\\components\\nodePanel\\task.vue","mtime":1693791859080},{"path":"E:\\qrhpro\\cms-eam-ui\\babel.config.js","mtime":1693791556521},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693791616229},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1693791596985},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693791616229},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1693791844037}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJFOi9xcmhwcm8vY21zLWVhbS11aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQuanMiKS5kZWZhdWx0OwpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIik7CnZhciBfbWl4aW5QYW5lbCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi4vLi4vY29tbW9uL21peGluUGFuZWwiKSk7CnZhciBfZXhlY3V0aW9uTGlzdGVuZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vcHJvcGVydHkvZXhlY3V0aW9uTGlzdGVuZXIiKSk7CnZhciBfdGFza0xpc3RlbmVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL3Byb3BlcnR5L3Rhc2tMaXN0ZW5lciIpKTsKdmFyIF9tdWx0aUluc3RhbmNlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL3Byb3BlcnR5L211bHRpSW5zdGFuY2UiKSk7CnZhciBfcGFyc2VFbGVtZW50ID0gcmVxdWlyZSgiLi4vLi4vY29tbW9uL3BhcnNlRWxlbWVudCIpOwp2YXIgX1N0clV0aWwgPSByZXF1aXJlKCJAL3V0aWxzL1N0clV0aWwiKTsKdmFyIF9Vc2VyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJAL2NvbXBvbmVudHMvZmxvdy9Vc2VyIikpOwp2YXIgX1JvbGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkAvY29tcG9uZW50cy9mbG93L1JvbGUiKSk7CnZhciBfRXhwcmVzc2lvbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiQC9jb21wb25lbnRzL2Zsb3cvRXhwcmVzc2lvbiIpKTsKdmFyIF9mb3JtID0gcmVxdWlyZSgiQC9hcGkvZmxvd2FibGUvZm9ybSIpOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgX2RlZmF1bHQgPSB7CiAgY29tcG9uZW50czogewogICAgZXhlY3V0aW9uTGlzdGVuZXJEaWFsb2c6IF9leGVjdXRpb25MaXN0ZW5lci5kZWZhdWx0LAogICAgdGFza0xpc3RlbmVyRGlhbG9nOiBfdGFza0xpc3RlbmVyLmRlZmF1bHQsCiAgICBtdWx0aUluc3RhbmNlRGlhbG9nOiBfbXVsdGlJbnN0YW5jZS5kZWZhdWx0LAogICAgRmxvd1VzZXI6IF9Vc2VyLmRlZmF1bHQsCiAgICBGbG93Um9sZTogX1JvbGUuZGVmYXVsdCwKICAgIEZsb3dFeHA6IF9FeHByZXNzaW9uLmRlZmF1bHQKICB9LAogIG1peGluczogW19taXhpblBhbmVsLmRlZmF1bHRdLAogIHByb3BzOiB7CiAgICB1c2VyczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBncm91cHM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgZXhwczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyVHlwZU9wdGlvbjogW3sKICAgICAgICBsYWJlbDogJ+aMh+WumuS6uuWRmCcsCiAgICAgICAgdmFsdWU6ICdhc3NpZ25lZScKICAgICAgfSwgewogICAgICAgIGxhYmVsOiAn5YCZ6YCJ5Lq65ZGYJywKICAgICAgICB2YWx1ZTogJ2NhbmRpZGF0ZVVzZXJzJwogICAgICB9LCB7CiAgICAgICAgbGFiZWw6ICflgJnpgInop5LoibInLAogICAgICAgIHZhbHVlOiAnY2FuZGlkYXRlR3JvdXBzJwogICAgICB9XSwKICAgICAgZGlhbG9nTmFtZTogJycsCiAgICAgIGV4ZWN1dGlvbkxpc3RlbmVyTGVuZ3RoOiAwLAogICAgICB0YXNrTGlzdGVuZXJMZW5ndGg6IDAsCiAgICAgIGhhc011bHRpSW5zdGFuY2U6IGZhbHNlLAogICAgICB1c2VyVmlzaWJsZTogZmFsc2UsCiAgICAgIHJvbGVWaXNpYmxlOiBmYWxzZSwKICAgICAgZXhwVmlzaWJsZTogZmFsc2UsCiAgICAgIGZvcm1EYXRhOiB7fSwKICAgICAgYXNzaWduZWU6IG51bGwsCiAgICAgIGNhbmRpZGF0ZVVzZXJzOiBudWxsLAogICAgICBjYW5kaWRhdGVHcm91cHM6IG51bGwsCiAgICAgIC8vIOmAieexu+WeiwogICAgICBjaGVja1R5cGU6ICdzaW5nbGUnLAogICAgICAvLyDpgInkuK3nmoTlgLwKICAgICAgY2hlY2tWYWx1ZXM6IG51bGwsCiAgICAgIC8vIOaVsOaNruWbnuaYvgogICAgICBzZWxlY3RWYWx1ZXM6IG51bGwsCiAgICAgIC8vIOeUqOaIt+WIl+ihqAogICAgICB1c2VyTGlzdDogdGhpcy51c2VycywKICAgICAgLy8g6KeS6Imy5YiX6KGoCiAgICAgIGdyb3VwTGlzdDogdGhpcy5ncm91cHMsCiAgICAgIC8vIOihqOi+vuW8j+WIl+ihqAogICAgICBleHBMaXN0OiB0aGlzLmV4cHMsCiAgICAgIC8vIOihqOi+vuW8j+exu+WeiwogICAgICBleHBUeXBlOiBudWxsLAogICAgICAvLyDooajljZXliJfooagKICAgICAgZm9ybUxpc3Q6IFtdCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGZvcm1Db25maWc6IGZ1bmN0aW9uIGZvcm1Db25maWcoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIHJldHVybiB7CiAgICAgICAgaW5saW5lOiBmYWxzZSwKICAgICAgICBpdGVtOiBbewogICAgICAgICAgeFR5cGU6ICdpbnB1dCcsCiAgICAgICAgICBuYW1lOiAnaWQnLAogICAgICAgICAgbGFiZWw6ICfoioLngrkgaWQnLAogICAgICAgICAgcnVsZXM6IFt7CiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgICBtZXNzYWdlOiAnSWQg5LiN6IO95Li656m6JwogICAgICAgICAgfV0KICAgICAgICB9LCB7CiAgICAgICAgICB4VHlwZTogJ2lucHV0JywKICAgICAgICAgIG5hbWU6ICduYW1lJywKICAgICAgICAgIGxhYmVsOiAn6IqC54K55ZCN56ewJywKICAgICAgICAgIHJ1bGVzOiBbewogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgICAgbWVzc2FnZTogJ+iKgueCueWQjeensOS4jeiDveS4uuepuicKICAgICAgICAgIH1dCiAgICAgICAgfSwgewogICAgICAgICAgeFR5cGU6ICdpbnB1dCcsCiAgICAgICAgICBuYW1lOiAnZG9jdW1lbnRhdGlvbicsCiAgICAgICAgICBsYWJlbDogJ+iKgueCueaPj+i/sCcKICAgICAgICB9LCB7CiAgICAgICAgICB4VHlwZTogJ3Nsb3QnLAogICAgICAgICAgbmFtZTogJ2V4ZWN1dGlvbkxpc3RlbmVyJywKICAgICAgICAgIGxhYmVsOiAn5omn6KGM55uR5ZCs5ZmoJwogICAgICAgIH0sIHsKICAgICAgICAgIHhUeXBlOiAnc2xvdCcsCiAgICAgICAgICBuYW1lOiAndGFza0xpc3RlbmVyJywKICAgICAgICAgIGxhYmVsOiAn5Lu75Yqh55uR5ZCs5ZmoJywKICAgICAgICAgIHNob3c6ICEhX3RoaXMuc2hvd0NvbmZpZy50YXNrTGlzdGVuZXIKICAgICAgICB9LCB7CiAgICAgICAgICB4VHlwZTogJ3NlbGVjdCcsCiAgICAgICAgICBuYW1lOiAndXNlclR5cGUnLAogICAgICAgICAgbGFiZWw6ICfnlKjmiLfnsbvlnosnLAogICAgICAgICAgLy8gY2xlYXJhYmxlOiB0cnVlLAogICAgICAgICAgZGljOiBfdGhpcy51c2VyVHlwZU9wdGlvbiwKICAgICAgICAgIC8vIHJ1bGVzOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+eUqOaIt+exu+Wei+S4jeiDveS4uuepuicgfV0sCiAgICAgICAgICBzaG93OiAhIV90aGlzLnNob3dDb25maWcudXNlclR5cGUKICAgICAgICB9LCB7CiAgICAgICAgICB4VHlwZTogJ3Nsb3QnLAogICAgICAgICAgbmFtZTogJ2NoZWNrU2luZ2xlVXNlcicsCiAgICAgICAgICBsYWJlbDogJ+aMh+WumuS6uuWRmCcsCiAgICAgICAgICAvLyBydWxlczogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfmjIflrprkurrlkZjkuI3og73kuLrnqbonIH1dLAogICAgICAgICAgc2hvdzogISFfdGhpcy5zaG93Q29uZmlnLmFzc2lnbmVlICYmIF90aGlzLmZvcm1EYXRhLnVzZXJUeXBlID09PSAnYXNzaWduZWUnCiAgICAgICAgfSwgewogICAgICAgICAgeFR5cGU6ICdzbG90JywKICAgICAgICAgIG5hbWU6ICdjaGVja011bHRpcGxlVXNlcicsCiAgICAgICAgICBsYWJlbDogJ+WAmemAieS6uuWRmCcsCiAgICAgICAgICAvLyBydWxlczogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICflgJnpgInkurrlkZjkuI3og73kuLrnqbonIH1dLAogICAgICAgICAgc2hvdzogISFfdGhpcy5zaG93Q29uZmlnLmNhbmRpZGF0ZVVzZXJzICYmIF90aGlzLmZvcm1EYXRhLnVzZXJUeXBlID09PSAnY2FuZGlkYXRlVXNlcnMnCiAgICAgICAgfSwgewogICAgICAgICAgeFR5cGU6ICdzbG90JywKICAgICAgICAgIG5hbWU6ICdjaGVja1JvbGUnLAogICAgICAgICAgbGFiZWw6ICflgJnpgInop5LoibInLAogICAgICAgICAgLy8gcnVsZXM6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn5YCZ6YCJ6KeS6Imy5LiN6IO95Li656m6JyB9XSwKICAgICAgICAgIHNob3c6ICEhX3RoaXMuc2hvd0NvbmZpZy5jYW5kaWRhdGVHcm91cHMgJiYgX3RoaXMuZm9ybURhdGEudXNlclR5cGUgPT09ICdjYW5kaWRhdGVHcm91cHMnCiAgICAgICAgfSwgewogICAgICAgICAgeFR5cGU6ICdzbG90JywKICAgICAgICAgIG5hbWU6ICdtdWx0aUluc3RhbmNlJywKICAgICAgICAgIGxhYmVsOiAn5aSa5a6e5L6LJwogICAgICAgIH0sIHsKICAgICAgICAgIHhUeXBlOiAnc3dpdGNoJywKICAgICAgICAgIG5hbWU6ICdhc3luYycsCiAgICAgICAgICBsYWJlbDogJ+W8guatpScsCiAgICAgICAgICBhY3RpdmVUZXh0OiAn5pivJywKICAgICAgICAgIGluYWN0aXZlVGV4dDogJ+WQpicsCiAgICAgICAgICBzaG93OiAhIV90aGlzLnNob3dDb25maWcuYXN5bmMKICAgICAgICB9LCB7CiAgICAgICAgICB4VHlwZTogJ2lucHV0JywKICAgICAgICAgIG5hbWU6ICdwcmlvcml0eScsCiAgICAgICAgICBsYWJlbDogJ+S8mOWFiOe6pycsCiAgICAgICAgICBzaG93OiAhIV90aGlzLnNob3dDb25maWcucHJpb3JpdHkKICAgICAgICB9LAogICAgICAgIC8vIHsKICAgICAgICAvLyAgIHhUeXBlOiAnaW5wdXQnLAogICAgICAgIC8vICAgbmFtZTogJ2Zvcm1LZXknLAogICAgICAgIC8vICAgbGFiZWw6ICfooajljZXmoIfor4ZrZXknLAogICAgICAgIC8vICAgc2hvdzogISFfdGhpcy5zaG93Q29uZmlnLmZvcm1LZXkKICAgICAgICAvLyB9LAogICAgICAgIHsKICAgICAgICAgIHhUeXBlOiAnc2VsZWN0JywKICAgICAgICAgIG5hbWU6ICdmb3JtS2V5JywKICAgICAgICAgIGxhYmVsOiAn6KGo5Y2V5qCH6K+Ga2V5JywKICAgICAgICAgIGNsZWFyYWJsZTogdHJ1ZSwKICAgICAgICAgIGRpYzogewogICAgICAgICAgICBkYXRhOiBfdGhpcy5mb3JtTGlzdCwKICAgICAgICAgICAgbGFiZWw6ICdmb3JtTmFtZScsCiAgICAgICAgICAgIHZhbHVlOiAnZm9ybUlkJwogICAgICAgICAgfSwKICAgICAgICAgIHNob3c6ICEhX3RoaXMuc2hvd0NvbmZpZy5mb3JtS2V5CiAgICAgICAgfSwgewogICAgICAgICAgeFR5cGU6ICdpbnB1dCcsCiAgICAgICAgICBuYW1lOiAnc2tpcEV4cHJlc3Npb24nLAogICAgICAgICAgbGFiZWw6ICfot7Pov4fooajovr7lvI8nLAogICAgICAgICAgc2hvdzogISFfdGhpcy5zaG93Q29uZmlnLnNraXBFeHByZXNzaW9uCiAgICAgICAgfSwgewogICAgICAgICAgeFR5cGU6ICdzd2l0Y2gnLAogICAgICAgICAgbmFtZTogJ2lzRm9yQ29tcGVuc2F0aW9uJywKICAgICAgICAgIGxhYmVsOiAn5piv5ZCm5Li66KGl5YG/JywKICAgICAgICAgIGFjdGl2ZVRleHQ6ICfmmK8nLAogICAgICAgICAgaW5hY3RpdmVUZXh0OiAn5ZCmJywKICAgICAgICAgIHNob3c6ICEhX3RoaXMuc2hvd0NvbmZpZy5pc0ZvckNvbXBlbnNhdGlvbgogICAgICAgIH0sIHsKICAgICAgICAgIHhUeXBlOiAnc3dpdGNoJywKICAgICAgICAgIG5hbWU6ICd0cmlnZ2VyYWJsZScsCiAgICAgICAgICBsYWJlbDogJ+acjeWKoeS7u+WKoeWPr+inpuWPkScsCiAgICAgICAgICBhY3RpdmVUZXh0OiAn5pivJywKICAgICAgICAgIGluYWN0aXZlVGV4dDogJ+WQpicsCiAgICAgICAgICBzaG93OiAhIV90aGlzLnNob3dDb25maWcudHJpZ2dlcmFibGUKICAgICAgICB9LCB7CiAgICAgICAgICB4VHlwZTogJ3N3aXRjaCcsCiAgICAgICAgICBuYW1lOiAnYXV0b1N0b3JlVmFyaWFibGVzJywKICAgICAgICAgIGxhYmVsOiAn6Ieq5Yqo5a2Y5YKo5Y+Y6YePJywKICAgICAgICAgIGFjdGl2ZVRleHQ6ICfmmK8nLAogICAgICAgICAgaW5hY3RpdmVUZXh0OiAn5ZCmJywKICAgICAgICAgIHNob3c6ICEhX3RoaXMuc2hvd0NvbmZpZy5hdXRvU3RvcmVWYXJpYWJsZXMKICAgICAgICB9LCB7CiAgICAgICAgICB4VHlwZTogJ2lucHV0JywKICAgICAgICAgIG5hbWU6ICdydWxlVmFyaWFibGVzSW5wdXQnLAogICAgICAgICAgbGFiZWw6ICfovpPlhaXlj5jph48nLAogICAgICAgICAgc2hvdzogISFfdGhpcy5zaG93Q29uZmlnLnJ1bGVWYXJpYWJsZXNJbnB1dAogICAgICAgIH0sIHsKICAgICAgICAgIHhUeXBlOiAnaW5wdXQnLAogICAgICAgICAgbmFtZTogJ3J1bGVzJywKICAgICAgICAgIGxhYmVsOiAn6KeE5YiZJywKICAgICAgICAgIHNob3c6ICEhX3RoaXMuc2hvd0NvbmZpZy5ydWxlcwogICAgICAgIH0sIHsKICAgICAgICAgIHhUeXBlOiAnaW5wdXQnLAogICAgICAgICAgbmFtZTogJ3Jlc3VsdFZhcmlhYmxlJywKICAgICAgICAgIGxhYmVsOiAn57uT5p6c5Y+Y6YePJywKICAgICAgICAgIHNob3c6ICEhX3RoaXMuc2hvd0NvbmZpZy5yZXN1bHRWYXJpYWJsZQogICAgICAgIH0sIHsKICAgICAgICAgIHhUeXBlOiAnc3dpdGNoJywKICAgICAgICAgIG5hbWU6ICdleGNsdWRlJywKICAgICAgICAgIGxhYmVsOiAn5o6S6ZmkJywKICAgICAgICAgIGFjdGl2ZVRleHQ6ICfmmK8nLAogICAgICAgICAgaW5hY3RpdmVUZXh0OiAn5ZCmJywKICAgICAgICAgIHNob3c6ICEhX3RoaXMuc2hvd0NvbmZpZy5leGNsdWRlCiAgICAgICAgfSwgewogICAgICAgICAgeFR5cGU6ICdpbnB1dCcsCiAgICAgICAgICBuYW1lOiAnY2xhc3MnLAogICAgICAgICAgbGFiZWw6ICfnsbsnLAogICAgICAgICAgc2hvdzogISFfdGhpcy5zaG93Q29uZmlnLmNsYXNzCiAgICAgICAgfSwgewogICAgICAgICAgeFR5cGU6ICdkYXRlUGlja2VyJywKICAgICAgICAgIHR5cGU6ICdkYXRldGltZScsCiAgICAgICAgICB2YWx1ZUZvcm1hdDogJ3l5eXktTU0tZGRUSEg6bW06c3MnLAogICAgICAgICAgbmFtZTogJ2R1ZURhdGUnLAogICAgICAgICAgbGFiZWw6ICfliLDmnJ/ml7bpl7QnLAogICAgICAgICAgc2hvdzogISFfdGhpcy5zaG93Q29uZmlnLmR1ZURhdGUKICAgICAgICB9XQogICAgICB9OwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgICdmb3JtRGF0YS51c2VyVHlwZSc6IGZ1bmN0aW9uIGZvcm1EYXRhVXNlclR5cGUodmFsLCBvbGRWYWwpIHsKICAgICAgaWYgKF9TdHJVdGlsLlN0clV0aWwuaXNOb3RCbGFuayhvbGRWYWwpKSB7CiAgICAgICAgZGVsZXRlIHRoaXMuZWxlbWVudC5idXNpbmVzc09iamVjdC4kYXR0cnNbImZsb3dhYmxlOiIuY29uY2F0KG9sZFZhbCldOwogICAgICAgIGRlbGV0ZSB0aGlzLmZvcm1EYXRhW29sZFZhbF07CiAgICAgICAgLy8g5riF6Zmk5bey6YCJ5Lq65ZGY5pWw5o2uCiAgICAgICAgdGhpcy5jaGVja1ZhbHVlcyA9ICcnOwogICAgICAgIHRoaXMuc2VsZWN0VmFsdWVzID0gbnVsbDsKICAgICAgICAvLyDliKDpmaR4bWzkuK3lt7LpgInmi6nmlbDmja7nsbvlnovoioLngrkKICAgICAgICBkZWxldGUgdGhpcy5lbGVtZW50LmJ1c2luZXNzT2JqZWN0LiRhdHRyc1siZmxvd2FibGU6ZGF0YVR5cGUiXTsKICAgICAgfQogICAgICAvLyDlhpnlhaV1c2VyVHlwZeiKgueCueS/oeaBr+WIsHhtbAogICAgICB0aGlzLnVwZGF0ZVByb3BlcnRpZXMoewogICAgICAgICdmbG93YWJsZTp1c2VyVHlwZSc6IHZhbAogICAgICB9KTsKICAgIH0sCiAgICAnZm9ybURhdGEuYXN5bmMnOiBmdW5jdGlvbiBmb3JtRGF0YUFzeW5jKHZhbCkgewogICAgICBpZiAoX1N0clV0aWwuU3RyVXRpbC5pc05vdEJsYW5rKHZhbCkpIHsKICAgICAgICB0aGlzLnVwZGF0ZVByb3BlcnRpZXMoewogICAgICAgICAgJ2Zsb3dhYmxlOmFzeW5jJzogdmFsCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICAnZm9ybURhdGEuZHVlRGF0ZSc6IGZ1bmN0aW9uIGZvcm1EYXRhRHVlRGF0ZSh2YWwpIHsKICAgICAgaWYgKF9TdHJVdGlsLlN0clV0aWwuaXNOb3RCbGFuayh2YWwpKSB7CiAgICAgICAgdGhpcy51cGRhdGVQcm9wZXJ0aWVzKHsKICAgICAgICAgICdmbG93YWJsZTpkdWVEYXRlJzogdmFsCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICAnZm9ybURhdGEuZm9ybUtleSc6IGZ1bmN0aW9uIGZvcm1EYXRhRm9ybUtleSh2YWwpIHsKICAgICAgaWYgKF9TdHJVdGlsLlN0clV0aWwuaXNOb3RCbGFuayh2YWwpKSB7CiAgICAgICAgdGhpcy51cGRhdGVQcm9wZXJ0aWVzKHsKICAgICAgICAgICdmbG93YWJsZTpmb3JtS2V5JzogdmFsCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8g5Yig6ZmkeG1s5Lit5bey6YCJ5oup6KGo5Y2V5L+h5oGvCiAgICAgICAgZGVsZXRlIHRoaXMuZWxlbWVudC5idXNpbmVzc09iamVjdFsiZm9ybUtleSJdOwogICAgICB9CiAgICB9LAogICAgJ2Zvcm1EYXRhLnByaW9yaXR5JzogZnVuY3Rpb24gZm9ybURhdGFQcmlvcml0eSh2YWwpIHsKICAgICAgaWYgKF9TdHJVdGlsLlN0clV0aWwuaXNOb3RCbGFuayh2YWwpKSB7CiAgICAgICAgdGhpcy51cGRhdGVQcm9wZXJ0aWVzKHsKICAgICAgICAgICdmbG93YWJsZTpwcmlvcml0eSc6IHZhbAogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgJ2Zvcm1EYXRhLnNraXBFeHByZXNzaW9uJzogZnVuY3Rpb24gZm9ybURhdGFTa2lwRXhwcmVzc2lvbih2YWwpIHsKICAgICAgaWYgKF9TdHJVdGlsLlN0clV0aWwuaXNOb3RCbGFuayh2YWwpKSB7CiAgICAgICAgdGhpcy51cGRhdGVQcm9wZXJ0aWVzKHsKICAgICAgICAgICdmbG93YWJsZTpza2lwRXhwcmVzc2lvbic6IHZhbAogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIGRlbGV0ZSB0aGlzLmVsZW1lbnQuYnVzaW5lc3NPYmplY3QuJGF0dHJzWyJmbG93YWJsZTpza2lwRXhwcmVzc2lvbiJdOwogICAgICB9CiAgICB9LAogICAgJ2Zvcm1EYXRhLmlzRm9yQ29tcGVuc2F0aW9uJzogZnVuY3Rpb24gZm9ybURhdGFJc0ZvckNvbXBlbnNhdGlvbih2YWwpIHsKICAgICAgaWYgKF9TdHJVdGlsLlN0clV0aWwuaXNOb3RCbGFuayh2YWwpKSB7CiAgICAgICAgdGhpcy51cGRhdGVQcm9wZXJ0aWVzKHsKICAgICAgICAgICdpc0ZvckNvbXBlbnNhdGlvbic6IHZhbAogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgJ2Zvcm1EYXRhLnRyaWdnZXJhYmxlJzogZnVuY3Rpb24gZm9ybURhdGFUcmlnZ2VyYWJsZSh2YWwpIHsKICAgICAgaWYgKF9TdHJVdGlsLlN0clV0aWwuaXNOb3RCbGFuayh2YWwpKSB7CiAgICAgICAgdGhpcy51cGRhdGVQcm9wZXJ0aWVzKHsKICAgICAgICAgICdmbG93YWJsZTp0cmlnZ2VyYWJsZSc6IHZhbAogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgJ2Zvcm1EYXRhLmNsYXNzJzogZnVuY3Rpb24gZm9ybURhdGFDbGFzcyh2YWwpIHsKICAgICAgaWYgKF9TdHJVdGlsLlN0clV0aWwuaXNOb3RCbGFuayh2YWwpKSB7CiAgICAgICAgdGhpcy51cGRhdGVQcm9wZXJ0aWVzKHsKICAgICAgICAgICdmbG93YWJsZTpjbGFzcyc6IHZhbAogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgJ2Zvcm1EYXRhLmF1dG9TdG9yZVZhcmlhYmxlcyc6IGZ1bmN0aW9uIGZvcm1EYXRhQXV0b1N0b3JlVmFyaWFibGVzKHZhbCkgewogICAgICBpZiAoX1N0clV0aWwuU3RyVXRpbC5pc05vdEJsYW5rKHZhbCkpIHsKICAgICAgICB0aGlzLnVwZGF0ZVByb3BlcnRpZXMoewogICAgICAgICAgJ2Zsb3dhYmxlOmF1dG9TdG9yZVZhcmlhYmxlcyc6IHZhbAogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgJ2Zvcm1EYXRhLmV4Y2x1ZGUnOiBmdW5jdGlvbiBmb3JtRGF0YUV4Y2x1ZGUodmFsKSB7CiAgICAgIGlmIChfU3RyVXRpbC5TdHJVdGlsLmlzTm90QmxhbmsodmFsKSkgewogICAgICAgIHRoaXMudXBkYXRlUHJvcGVydGllcyh7CiAgICAgICAgICAnZmxvd2FibGU6ZXhjbHVkZSc6IHZhbAogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgJ2Zvcm1EYXRhLnJ1bGVWYXJpYWJsZXNJbnB1dCc6IGZ1bmN0aW9uIGZvcm1EYXRhUnVsZVZhcmlhYmxlc0lucHV0KHZhbCkgewogICAgICBpZiAoX1N0clV0aWwuU3RyVXRpbC5pc05vdEJsYW5rKHZhbCkpIHsKICAgICAgICB0aGlzLnVwZGF0ZVByb3BlcnRpZXMoewogICAgICAgICAgJ2Zsb3dhYmxlOnJ1bGVWYXJpYWJsZXNJbnB1dCc6IHZhbAogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgJ2Zvcm1EYXRhLnJ1bGVzJzogZnVuY3Rpb24gZm9ybURhdGFSdWxlcyh2YWwpIHsKICAgICAgaWYgKF9TdHJVdGlsLlN0clV0aWwuaXNOb3RCbGFuayh2YWwpKSB7CiAgICAgICAgdGhpcy51cGRhdGVQcm9wZXJ0aWVzKHsKICAgICAgICAgICdmbG93YWJsZTpydWxlcyc6IHZhbAogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgJ2Zvcm1EYXRhLnJlc3VsdFZhcmlhYmxlJzogZnVuY3Rpb24gZm9ybURhdGFSZXN1bHRWYXJpYWJsZSh2YWwpIHsKICAgICAgaWYgKF9TdHJVdGlsLlN0clV0aWwuaXNOb3RCbGFuayh2YWwpKSB7CiAgICAgICAgdGhpcy51cGRhdGVQcm9wZXJ0aWVzKHsKICAgICAgICAgICdmbG93YWJsZTpyZXN1bHRWYXJpYWJsZSc6IHZhbAogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIGNhY2hlID0gKDAsIF9wYXJzZUVsZW1lbnQuY29tbW9uUGFyc2UpKHRoaXMuZWxlbWVudCk7CiAgICBjYWNoZSA9ICgwLCBfcGFyc2VFbGVtZW50LnVzZXJUYXNrUGFyc2UpKGNhY2hlKTsKICAgIHRoaXMuZm9ybURhdGEgPSBjYWNoZTsKICAgIHRoaXMuY29tcHV0ZWRFeGVjdXRpb25MaXN0ZW5lckxlbmd0aCgpOwogICAgdGhpcy5jb21wdXRlZFRhc2tMaXN0ZW5lckxlbmd0aCgpOwogICAgdGhpcy5jb21wdXRlZEhhc011bHRpSW5zdGFuY2UoKTsKICAgIC8vIOS6uuWRmOS/oeaBr+WbnuaYvgogICAgdGhpcy5jaGVja1ZhbHVlc0VjaG8oKTsKICAgIC8vIOWKoOi9veihqOWNleWIl+ihqAogICAgdGhpcy5nZXRMaXN0Rm9ybSgpOwogIH0sCiAgbWV0aG9kczogewogICAgY29tcHV0ZWRFeGVjdXRpb25MaXN0ZW5lckxlbmd0aDogZnVuY3Rpb24gY29tcHV0ZWRFeGVjdXRpb25MaXN0ZW5lckxlbmd0aCgpIHsKICAgICAgdmFyIF90aGlzJGVsZW1lbnQkYnVzaW5lcywgX3RoaXMkZWxlbWVudCRidXNpbmVzMjsKICAgICAgdGhpcy5leGVjdXRpb25MaXN0ZW5lckxlbmd0aCA9IChfdGhpcyRlbGVtZW50JGJ1c2luZXMgPSAoX3RoaXMkZWxlbWVudCRidXNpbmVzMiA9IHRoaXMuZWxlbWVudC5idXNpbmVzc09iamVjdC5leHRlbnNpb25FbGVtZW50cykgPT09IG51bGwgfHwgX3RoaXMkZWxlbWVudCRidXNpbmVzMiA9PT0gdm9pZCAwIHx8IChfdGhpcyRlbGVtZW50JGJ1c2luZXMyID0gX3RoaXMkZWxlbWVudCRidXNpbmVzMi52YWx1ZXMpID09PSBudWxsIHx8IF90aGlzJGVsZW1lbnQkYnVzaW5lczIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGVsZW1lbnQkYnVzaW5lczIuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0uJHR5cGUgPT09ICdmbG93YWJsZTpFeGVjdXRpb25MaXN0ZW5lcic7CiAgICAgIH0pLmxlbmd0aCkgIT09IG51bGwgJiYgX3RoaXMkZWxlbWVudCRidXNpbmVzICE9PSB2b2lkIDAgPyBfdGhpcyRlbGVtZW50JGJ1c2luZXMgOiAwOwogICAgfSwKICAgIGNvbXB1dGVkVGFza0xpc3RlbmVyTGVuZ3RoOiBmdW5jdGlvbiBjb21wdXRlZFRhc2tMaXN0ZW5lckxlbmd0aCgpIHsKICAgICAgdmFyIF90aGlzJGVsZW1lbnQkYnVzaW5lczMsIF90aGlzJGVsZW1lbnQkYnVzaW5lczQ7CiAgICAgIHRoaXMudGFza0xpc3RlbmVyTGVuZ3RoID0gKF90aGlzJGVsZW1lbnQkYnVzaW5lczMgPSAoX3RoaXMkZWxlbWVudCRidXNpbmVzNCA9IHRoaXMuZWxlbWVudC5idXNpbmVzc09iamVjdC5leHRlbnNpb25FbGVtZW50cykgPT09IG51bGwgfHwgX3RoaXMkZWxlbWVudCRidXNpbmVzNCA9PT0gdm9pZCAwIHx8IChfdGhpcyRlbGVtZW50JGJ1c2luZXM0ID0gX3RoaXMkZWxlbWVudCRidXNpbmVzNC52YWx1ZXMpID09PSBudWxsIHx8IF90aGlzJGVsZW1lbnQkYnVzaW5lczQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGVsZW1lbnQkYnVzaW5lczQuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0uJHR5cGUgPT09ICdmbG93YWJsZTpUYXNrTGlzdGVuZXInOwogICAgICB9KS5sZW5ndGgpICE9PSBudWxsICYmIF90aGlzJGVsZW1lbnQkYnVzaW5lczMgIT09IHZvaWQgMCA/IF90aGlzJGVsZW1lbnQkYnVzaW5lczMgOiAwOwogICAgfSwKICAgIGNvbXB1dGVkSGFzTXVsdGlJbnN0YW5jZTogZnVuY3Rpb24gY29tcHV0ZWRIYXNNdWx0aUluc3RhbmNlKCkgewogICAgICBpZiAodGhpcy5lbGVtZW50LmJ1c2luZXNzT2JqZWN0Lmxvb3BDaGFyYWN0ZXJpc3RpY3MpIHsKICAgICAgICB0aGlzLmhhc011bHRpSW5zdGFuY2UgPSB0cnVlOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuaGFzTXVsdGlJbnN0YW5jZSA9IGZhbHNlOwogICAgICB9CiAgICB9LAogICAgLy8g6I635Y+W6KGo5Y2V5L+h5oGvCiAgICBnZXRMaXN0Rm9ybTogZnVuY3Rpb24gZ2V0TGlzdEZvcm0oKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwogICAgICAoMCwgX2Zvcm0ubGlzdEFsbEZvcm0pKCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgcmVzLmRhdGEuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgaXRlbS5mb3JtSWQgPSBpdGVtLmZvcm1JZC50b1N0cmluZygpOwogICAgICAgIH0pOwogICAgICAgIF90aGlzMi5mb3JtTGlzdCA9IHJlcy5kYXRhOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDorr7orqHlmajlj7PkvqfooajljZXmlbDmja7lm57mmL4KICAgIGNoZWNrVmFsdWVzRWNobzogZnVuY3Rpb24gY2hlY2tWYWx1ZXNFY2hvKCkgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIHZhciBhdHRycyA9IHRoYXQuZWxlbWVudC5idXNpbmVzc09iamVjdC4kYXR0cnM7CiAgICAgIHZhciBidXNpbmVzc09iamVjdCA9IHRoYXQuZWxlbWVudC5idXNpbmVzc09iamVjdDsKICAgICAgY29uc29sZS5sb2codGhhdC5lbGVtZW50LmJ1c2luZXNzT2JqZWN0LCAidGhpcy5lbGVtZW50LmJ1c2luZXNzT2JqZWN0Iik7CiAgICAgIC8vIOaMh+WumueUqOaItwogICAgICBpZiAoYXR0cnMuaGFzT3duUHJvcGVydHkoImZsb3dhYmxlOmFzc2lnbmVlIikpIHsKICAgICAgICB2YXIgdmFsID0gYXR0cnNbImZsb3dhYmxlOmFzc2lnbmVlIl07CiAgICAgICAgLy8g5p+l5om+5piv5ZCm5Yqo5oCB5oyH5a6a5Lq65ZGYKOmAieS4rea1geeoi+ihqOi+vuW8jykKICAgICAgICBpZiAoYXR0cnNbImZsb3dhYmxlOmRhdGFUeXBlIl0gPT09ICJkeW5hbWljIikgewogICAgICAgICAgdGhpcy5jaGVja1ZhbHVlcyA9IHRoYXQuZXhwTGlzdC5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgIHJldHVybiBpdGVtLmV4cHJlc3Npb24gPT0gdmFsOwogICAgICAgICAgfSkubmFtZTsKICAgICAgICAgIHRoaXMuc2VsZWN0VmFsdWVzID0gdGhhdC5leHBMaXN0LmZpbmQoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgcmV0dXJuIGl0ZW0uZXhwcmVzc2lvbiA9PSB2YWw7CiAgICAgICAgICB9KS5pZDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5jaGVja1ZhbHVlcyA9IHRoYXQudXNlckxpc3QuZmluZChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICByZXR1cm4gaXRlbS51c2VySWQgPT0gdmFsOwogICAgICAgICAgfSkubmlja05hbWU7CiAgICAgICAgICB0aGlzLnNlbGVjdFZhbHVlcyA9IHRoYXQudXNlckxpc3QuZmluZChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICByZXR1cm4gaXRlbS51c2VySWQgPT0gdmFsOwogICAgICAgICAgfSkudXNlcklkOwogICAgICAgIH0KICAgICAgICAvLyDlgJnpgInnlKjmiLcKICAgICAgfSBlbHNlIGlmIChhdHRycy5oYXNPd25Qcm9wZXJ0eSgiZmxvd2FibGU6Y2FuZGlkYXRlVXNlcnMiKSkgewogICAgICAgIHZhciBfdmFsID0gYXR0cnNbImZsb3dhYmxlOmNhbmRpZGF0ZVVzZXJzIl07CiAgICAgICAgaWYgKGF0dHJzWyJmbG93YWJsZTpkYXRhVHlwZSJdID09PSAiZHluYW1pYyIpIHsKICAgICAgICAgIHRoaXMuY2hlY2tWYWx1ZXMgPSB0aGF0LmV4cExpc3QuZmluZChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICByZXR1cm4gaXRlbS5leHByZXNzaW9uID09IF92YWw7CiAgICAgICAgICB9KS5uYW1lOwogICAgICAgICAgdGhpcy5zZWxlY3RWYWx1ZXMgPSB0aGF0LmV4cExpc3QuZmluZChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICByZXR1cm4gaXRlbS5leHByZXNzaW9uID09IF92YWw7CiAgICAgICAgICB9KS5pZDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdmFyIG5ld0FyciA9IHRoYXQudXNlckxpc3QuZmlsdGVyKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgICAgIHJldHVybiBfdmFsLnNwbGl0KCcsJykuaW5jbHVkZXMoaS51c2VySWQpOwogICAgICAgICAgfSk7CiAgICAgICAgICB0aGlzLmNoZWNrVmFsdWVzID0gbmV3QXJyLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICByZXR1cm4gaXRlbS5uaWNrTmFtZTsKICAgICAgICAgIH0pLmpvaW4oJywnKTsKICAgICAgICAgIHRoaXMuc2VsZWN0VmFsdWVzID0gbmV3QXJyLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICByZXR1cm4gaXRlbS51c2VySWQ7CiAgICAgICAgICB9KS5qb2luKCcsJyk7CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgKGJ1c2luZXNzT2JqZWN0Lmhhc093blByb3BlcnR5KCJjYW5kaWRhdGVHcm91cHMiKSB8fCBhdHRycy5oYXNPd25Qcm9wZXJ0eSgiZmxvd2FibGU6Y2FuZGlkYXRlR3JvdXBzIikpIHsKICAgICAgICAvLyDlgJnpgInop5LoibLkv6Hmga8KICAgICAgICB2YXIgX3ZhbDIgPSBidXNpbmVzc09iamVjdFsiY2FuZGlkYXRlR3JvdXBzIl0gfHwgYXR0cnNbImZsb3dhYmxlOmNhbmRpZGF0ZUdyb3VwcyJdOwogICAgICAgIGlmIChhdHRyc1siZmxvd2FibGU6ZGF0YVR5cGUiXSA9PT0gImR5bmFtaWMiKSB7CiAgICAgICAgICB0aGlzLmNoZWNrVmFsdWVzID0gdGhhdC5leHBMaXN0LmZpbmQoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgcmV0dXJuIGl0ZW0uZXhwcmVzc2lvbiA9PSBfdmFsMjsKICAgICAgICAgIH0pLm5hbWU7CiAgICAgICAgICB0aGlzLnNlbGVjdFZhbHVlcyA9IHRoYXQuZXhwTGlzdC5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgIHJldHVybiBpdGVtLmV4cHJlc3Npb24gPT0gX3ZhbDI7CiAgICAgICAgICB9KS5pZDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdmFyIF9uZXdBcnIgPSB0aGF0Lmdyb3VwTGlzdC5maWx0ZXIoZnVuY3Rpb24gKGkpIHsKICAgICAgICAgICAgcmV0dXJuIF92YWwyLnNwbGl0KCcsJykuaW5jbHVkZXMoaS5yb2xlSWQpOwogICAgICAgICAgfSk7CiAgICAgICAgICB0aGlzLmNoZWNrVmFsdWVzID0gX25ld0Fyci5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgcmV0dXJuIGl0ZW0ucm9sZU5hbWU7CiAgICAgICAgICB9KS5qb2luKCcsJyk7CiAgICAgICAgICB0aGlzLnNlbGVjdFZhbHVlcyA9IF9uZXdBcnIubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgIHJldHVybiBpdGVtLnJvbGVJZDsKICAgICAgICAgIH0pLmpvaW4oJywnKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBmaW5pc2hFeGVjdXRpb25MaXN0ZW5lcjogZnVuY3Rpb24gZmluaXNoRXhlY3V0aW9uTGlzdGVuZXIoKSB7CiAgICAgIGlmICh0aGlzLmRpYWxvZ05hbWUgPT09ICdleGVjdXRpb25MaXN0ZW5lckRpYWxvZycpIHsKICAgICAgICB0aGlzLmNvbXB1dGVkRXhlY3V0aW9uTGlzdGVuZXJMZW5ndGgoKTsKICAgICAgfQogICAgICB0aGlzLmRpYWxvZ05hbWUgPSAnJzsKICAgIH0sCiAgICBmaW5pc2hUYXNrTGlzdGVuZXI6IGZ1bmN0aW9uIGZpbmlzaFRhc2tMaXN0ZW5lcigpIHsKICAgICAgaWYgKHRoaXMuZGlhbG9nTmFtZSA9PT0gJ3Rhc2tMaXN0ZW5lckRpYWxvZycpIHsKICAgICAgICB0aGlzLmNvbXB1dGVkVGFza0xpc3RlbmVyTGVuZ3RoKCk7CiAgICAgIH0KICAgICAgdGhpcy5kaWFsb2dOYW1lID0gJyc7CiAgICB9LAogICAgZmluaXNoTXVsdGlJbnN0YW5jZTogZnVuY3Rpb24gZmluaXNoTXVsdGlJbnN0YW5jZSgpIHsKICAgICAgaWYgKHRoaXMuZGlhbG9nTmFtZSA9PT0gJ211bHRpSW5zdGFuY2VEaWFsb2cnKSB7CiAgICAgICAgdGhpcy5jb21wdXRlZEhhc011bHRpSW5zdGFuY2UoKTsKICAgICAgfQogICAgICB0aGlzLmRpYWxvZ05hbWUgPSAnJzsKICAgIH0sCiAgICAvKuWNlemAieS6uuWRmCovc2luZ2xlVXNlckNoZWNrOiBmdW5jdGlvbiBzaW5nbGVVc2VyQ2hlY2soKSB7CiAgICAgIHRoaXMudXNlclZpc2libGUgPSB0cnVlOwogICAgICB0aGlzLmNoZWNrVHlwZSA9ICJzaW5nbGUiOwogICAgfSwKICAgIC8q5aSa6YCJ5Lq65ZGYKi9tdWx0aXBsZVVzZXJDaGVjazogZnVuY3Rpb24gbXVsdGlwbGVVc2VyQ2hlY2soKSB7CiAgICAgIHRoaXMudXNlclZpc2libGUgPSB0cnVlOwogICAgICB0aGlzLmNoZWNrVHlwZSA9ICJtdWx0aXBsZSI7CiAgICB9LAogICAgLyrljZXpgInop5LoibIqL3NpbmdsZVJvbGVDaGVjazogZnVuY3Rpb24gc2luZ2xlUm9sZUNoZWNrKCkgewogICAgICB0aGlzLnJvbGVWaXNpYmxlID0gdHJ1ZTsKICAgICAgdGhpcy5jaGVja1R5cGUgPSAic2luZ2xlIjsKICAgIH0sCiAgICAvKuWkmumAieinkuiJsiovbXVsdGlwbGVSb2xlQ2hlY2s6IGZ1bmN0aW9uIG11bHRpcGxlUm9sZUNoZWNrKCkgewogICAgICB0aGlzLnJvbGVWaXNpYmxlID0gdHJ1ZTsKICAgICAgdGhpcy5jaGVja1R5cGUgPSAibXVsdGlwbGUiOwogICAgfSwKICAgIC8q5Y2V6YCJ6KGo6L6+5byPKi9zaW5nbGVFeHBDaGVjazogZnVuY3Rpb24gc2luZ2xlRXhwQ2hlY2soZXhwVHlwZSkgewogICAgICB0aGlzLmV4cFZpc2libGUgPSB0cnVlOwogICAgICB0aGlzLmV4cFR5cGUgPSBleHBUeXBlOwogICAgfSwKICAgIC8vIOmAieS4reihqOi+vuW8jwogICAgaGFuZGxlU2luZ2xlRXhwU2VsZWN0OiBmdW5jdGlvbiBoYW5kbGVTaW5nbGVFeHBTZWxlY3Qoc2VsZWN0aW9uKSB7CiAgICAgIHRoaXMuZGVsZXRlRmxvd0F0dGFyKCk7CiAgICAgIHRoaXMudXBkYXRlUHJvcGVydGllcyh7CiAgICAgICAgJ2Zsb3dhYmxlOmRhdGFUeXBlJzogJ2R5bmFtaWMnCiAgICAgIH0pOwogICAgICBpZiAoImFzc2lnbmVlIiA9PT0gdGhpcy5leHBUeXBlKSB7CiAgICAgICAgdGhpcy51cGRhdGVQcm9wZXJ0aWVzKHsKICAgICAgICAgICdmbG93YWJsZTphc3NpZ25lZSc6IHNlbGVjdGlvbi5leHByZXNzaW9uCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSBpZiAoImNhbmRpZGF0ZVVzZXJzIiA9PT0gdGhpcy5leHBUeXBlKSB7CiAgICAgICAgdGhpcy51cGRhdGVQcm9wZXJ0aWVzKHsKICAgICAgICAgICdmbG93YWJsZTpjYW5kaWRhdGVVc2Vycyc6IHNlbGVjdGlvbi5leHByZXNzaW9uCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSBpZiAoImNhbmRpZGF0ZUdyb3VwcyIgPT09IHRoaXMuZXhwVHlwZSkgewogICAgICAgIHRoaXMudXBkYXRlUHJvcGVydGllcyh7CiAgICAgICAgICAnZmxvd2FibGU6Y2FuZGlkYXRlR3JvdXBzJzogc2VsZWN0aW9uLmV4cHJlc3Npb24KICAgICAgICB9KTsKICAgICAgfQogICAgICB0aGlzLmNoZWNrVmFsdWVzID0gc2VsZWN0aW9uLm5hbWU7CiAgICAgIHRoaXMuZXhwVHlwZSA9IG51bGw7CiAgICB9LAogICAgLy8g55So5oi36YCJ5Lit5pWw5o2uCiAgICBoYW5kbGVVc2VyU2VsZWN0OiBmdW5jdGlvbiBoYW5kbGVVc2VyU2VsZWN0KHNlbGVjdGlvbikgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIGlmIChzZWxlY3Rpb24pIHsKICAgICAgICB0aGF0LmRlbGV0ZUZsb3dBdHRhcigpOwogICAgICAgIHRoYXQudXBkYXRlUHJvcGVydGllcyh7CiAgICAgICAgICAnZmxvd2FibGU6ZGF0YVR5cGUnOiAnZml4ZWQnCiAgICAgICAgfSk7CiAgICAgICAgaWYgKHNlbGVjdGlvbiBpbnN0YW5jZW9mIEFycmF5KSB7CiAgICAgICAgICB2YXIgdXNlcklkcyA9IHNlbGVjdGlvbi5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgcmV0dXJuIGl0ZW0udXNlcklkOwogICAgICAgICAgfSk7CiAgICAgICAgICB2YXIgbmlja05hbWUgPSBzZWxlY3Rpb24ubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgIHJldHVybiBpdGVtLm5pY2tOYW1lOwogICAgICAgICAgfSk7CiAgICAgICAgICB0aGF0LnVwZGF0ZVByb3BlcnRpZXMoewogICAgICAgICAgICAnZmxvd2FibGU6Y2FuZGlkYXRlVXNlcnMnOiB1c2VySWRzLmpvaW4oJywnKQogICAgICAgICAgfSk7CiAgICAgICAgICB0aGF0LmNoZWNrVmFsdWVzID0gbmlja05hbWUuam9pbignLCcpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGF0LnVwZGF0ZVByb3BlcnRpZXMoewogICAgICAgICAgICAnZmxvd2FibGU6YXNzaWduZWUnOiBzZWxlY3Rpb24udXNlcklkCiAgICAgICAgICB9KTsKICAgICAgICAgIHRoYXQuY2hlY2tWYWx1ZXMgPSBzZWxlY3Rpb24ubmlja05hbWU7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgLy8g6KeS6Imy6YCJ5Lit5pWw5o2uCiAgICBoYW5kbGVSb2xlU2VsZWN0OiBmdW5jdGlvbiBoYW5kbGVSb2xlU2VsZWN0KHNlbGVjdGlvbiwgbmFtZSkgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIGlmIChzZWxlY3Rpb24gJiYgbmFtZSkgewogICAgICAgIHRoYXQuZGVsZXRlRmxvd0F0dGFyKCk7CiAgICAgICAgdGhhdC51cGRhdGVQcm9wZXJ0aWVzKHsKICAgICAgICAgICdmbG93YWJsZTpkYXRhVHlwZSc6ICdmaXhlZCcKICAgICAgICB9KTsKICAgICAgICB0aGF0LnVwZGF0ZVByb3BlcnRpZXMoewogICAgICAgICAgJ2Zsb3dhYmxlOmNhbmRpZGF0ZUdyb3Vwcyc6IHNlbGVjdGlvbgogICAgICAgIH0pOwogICAgICAgIHRoYXQuY2hlY2tWYWx1ZXMgPSBuYW1lOwogICAgICB9CiAgICB9LAogICAgLyrnlKjmiLfpgInkuK3otYvlgLwqL2NoZWNrVXNlckNvbXBsZXRlOiBmdW5jdGlvbiBjaGVja1VzZXJDb21wbGV0ZSgpIHsKICAgICAgdGhpcy51c2VyVmlzaWJsZSA9IGZhbHNlOwogICAgICB0aGlzLmNoZWNrVHlwZSA9ICIiOwogICAgfSwKICAgIC8q5YCZ6YCJ6KeS6Imy6YCJ5Lit6LWL5YC8Ki9jaGVja1JvbGVDb21wbGV0ZTogZnVuY3Rpb24gY2hlY2tSb2xlQ29tcGxldGUoKSB7CiAgICAgIHRoaXMucm9sZVZpc2libGUgPSBmYWxzZTsKICAgICAgdGhpcy5jaGVja1R5cGUgPSAiIjsKICAgIH0sCiAgICAvKuihqOi+vuW8j+mAieS4rei1i+WAvCovY2hlY2tFeHBDb21wbGV0ZTogZnVuY3Rpb24gY2hlY2tFeHBDb21wbGV0ZSgpIHsKICAgICAgdGhpcy5leHBWaXNpYmxlID0gZmFsc2U7CiAgICB9LAogICAgLy8g5Yig6Zmk6IqC54K5CiAgICBkZWxldGVGbG93QXR0YXI6IGZ1bmN0aW9uIGRlbGV0ZUZsb3dBdHRhcigpIHsKICAgICAgZGVsZXRlIHRoaXMuZWxlbWVudC5idXNpbmVzc09iamVjdC4kYXR0cnNbImZsb3dhYmxlOmRhdGFUeXBlIl07CiAgICAgIGRlbGV0ZSB0aGlzLmVsZW1lbnQuYnVzaW5lc3NPYmplY3QuJGF0dHJzWyJmbG93YWJsZTphc3NpZ25lZSJdOwogICAgICBkZWxldGUgdGhpcy5lbGVtZW50LmJ1c2luZXNzT2JqZWN0LiRhdHRyc1siZmxvd2FibGU6Y2FuZGlkYXRlVXNlcnMiXTsKICAgICAgZGVsZXRlIHRoaXMuZWxlbWVudC5idXNpbmVzc09iamVjdC4kYXR0cnNbImZsb3dhYmxlOmNhbmRpZGF0ZUdyb3VwcyJdOwogICAgfQogIH0KfTsKZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7"},{"version":3,"names":["_mixinPanel","_interopRequireDefault","require","_executionListener","_taskListener","_multiInstance","_parseElement","_StrUtil","_User","_Role","_Expression","_form","components","executionListenerDialog","taskListenerDialog","multiInstanceDialog","FlowUser","FlowRole","FlowExp","mixins","mixinPanel","props","users","type","Array","required","groups","exps","data","userTypeOption","label","value","dialogName","executionListenerLength","taskListenerLength","hasMultiInstance","userVisible","roleVisible","expVisible","formData","assignee","candidateUsers","candidateGroups","checkType","checkValues","selectValues","userList","groupList","expList","expType","formList","computed","formConfig","_this","inline","item","xType","name","rules","message","show","showConfig","taskListener","dic","userType","activeText","inactiveText","async","priority","clearable","formKey","skipExpression","isForCompensation","triggerable","autoStoreVariables","ruleVariablesInput","resultVariable","exclude","class","valueFormat","dueDate","watch","formDataUserType","val","oldVal","StrUtil","isNotBlank","element","businessObject","$attrs","concat","updateProperties","formDataAsync","formDataDueDate","formDataFormKey","formDataPriority","formDataSkipExpression","formDataIsForCompensation","formDataTriggerable","formDataClass","formDataAutoStoreVariables","formDataExclude","formDataRuleVariablesInput","formDataRules","formDataResultVariable","created","cache","commonParse","userTaskParse","computedExecutionListenerLength","computedTaskListenerLength","computedHasMultiInstance","checkValuesEcho","getListForm","methods","_this$element$busines","_this$element$busines2","extensionElements","values","filter","$type","length","_this$element$busines3","_this$element$busines4","loopCharacteristics","_this2","listAllForm","then","res","forEach","formId","toString","that","attrs","console","log","hasOwnProperty","find","expression","id","userId","nickName","newArr","i","split","includes","map","join","roleId","roleName","finishExecutionListener","finishTaskListener","finishMultiInstance","singleUserCheck","multipleUserCheck","singleRoleCheck","multipleRoleCheck","singleExpCheck","handleSingleExpSelect","selection","deleteFlowAttar","handleUserSelect","userIds","handleRoleSelect","checkUserComplete","checkRoleComplete","checkExpComplete","exports","default","_default"],"sources":["src/components/Process/components/nodePanel/task.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <x-form ref=\"xForm\" v-model=\"formData\" :config=\"formConfig\">\r\n      <template #executionListener>\r\n        <el-badge :value=\"executionListenerLength\">\r\n          <el-button size=\"small\" @click=\"dialogName = 'executionListenerDialog'\">编辑</el-button>\r\n        </el-badge>\r\n      </template>\r\n      <template #taskListener>\r\n        <el-badge :value=\"taskListenerLength\">\r\n          <el-button size=\"small\" @click=\"dialogName = 'taskListenerDialog'\">编辑</el-button>\r\n        </el-badge>\r\n      </template>\r\n      <template #multiInstance>\r\n        <el-badge :is-dot=\"hasMultiInstance\">\r\n          <el-button size=\"small\" @click=\"dialogName = 'multiInstanceDialog'\">编辑</el-button>\r\n        </el-badge>\r\n      </template>\r\n      <template #checkSingleUser>\r\n          <el-input placeholder=\"请选择人员\" class=\"input-with-select\" v-model=\"checkValues\">\r\n              <template slot=\"append\">\r\n                <!--指定用户-->\r\n                <el-button style=\"padding-left: 7px\" icon=\"el-icon-user\" @click=\"singleUserCheck\"/>\r\n                <el-divider direction=\"vertical\"></el-divider>\r\n                <!--选择表达式-->\r\n                <el-button style=\"padding-right: 7px\" icon=\"el-icon-postcard\" @click=\"singleExpCheck('assignee')\"/>\r\n              </template>\r\n          </el-input>\r\n      </template>\r\n      <template #checkMultipleUser>\r\n          <el-input placeholder=\"请选择候选用户\" class=\"input-with-select\" v-model=\"checkValues\">\r\n            <template slot=\"append\">\r\n              <!--候选用户-->\r\n              <el-button style=\"padding-left: 7px\" icon=\"el-icon-user\" @click=\"multipleUserCheck\"/>\r\n              <el-divider direction=\"vertical\"></el-divider>\r\n              <!--选择表达式-->\r\n              <el-button style=\"padding-right: 7px\" icon=\"el-icon-postcard\" @click=\"singleExpCheck('candidateUsers')\"/>\r\n            </template>\r\n          </el-input>\r\n      </template>\r\n      <template #checkRole>\r\n        <el-input placeholder=\"请选择候选角色\" class=\"input-with-select\" v-model=\"checkValues\">\r\n          <template slot=\"append\">\r\n          <!--候选角色-->\r\n            <el-button style=\"padding-left: 7px\" icon=\"el-icon-user\" @click=\"multipleRoleCheck\"/>\r\n            <el-divider direction=\"vertical\"></el-divider>\r\n              <!--选择表达式-->\r\n            <el-button style=\"padding-right: 7px\" icon=\"el-icon-postcard\" @click=\"singleExpCheck('candidateGroups')\"/>\r\n          </template>\r\n        </el-input>\r\n      </template>\r\n    </x-form>\r\n    <executionListenerDialog\r\n      v-if=\"dialogName === 'executionListenerDialog'\"\r\n      :element=\"element\"\r\n      :modeler=\"modeler\"\r\n      @close=\"finishExecutionListener\"\r\n    />\r\n    <taskListenerDialog\r\n      v-if=\"dialogName === 'taskListenerDialog'\"\r\n      :element=\"element\"\r\n      :modeler=\"modeler\"\r\n      @close=\"finishTaskListener\"\r\n    />\r\n    <multiInstanceDialog\r\n      v-if=\"dialogName === 'multiInstanceDialog'\"\r\n      :element=\"element\"\r\n      :modeler=\"modeler\"\r\n      @close=\"finishMultiInstance\"\r\n    />\r\n    <!--选择人员-->\r\n    <el-dialog\r\n      title=\"选择人员\"\r\n      :visible.sync=\"userVisible\"\r\n      width=\"60%\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n    >\r\n    <flow-user :checkType=\"checkType\" :selectValues=\"selectValues\" @handleUserSelect=\"handleUserSelect\"></flow-user>\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"userVisible = false\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"checkUserComplete\">确 定</el-button>\r\n    </span>\r\n    </el-dialog>\r\n    <!--选择表达式-->\r\n    <el-dialog\r\n      title=\"选择表达式\"\r\n      :visible.sync=\"expVisible\"\r\n      width=\"60%\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n    >\r\n      <flow-exp :selectValues=\"selectValues\" @handleSingleExpSelect=\"handleSingleExpSelect\"></flow-exp>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"expVisible = false\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"checkExpComplete\">确 定</el-button>\r\n    </span>\r\n    </el-dialog>\r\n    <!--选择角色-->\r\n    <el-dialog\r\n      title=\"选择候选角色\"\r\n      :visible.sync=\"roleVisible\"\r\n      width=\"60%\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n    >\r\n      <flow-role :checkType=\"checkType\" :selectValues=\"selectValues\" @handleRoleSelect=\"handleRoleSelect\"></flow-role>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"roleVisible = false\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"checkRoleComplete\">确 定</el-button>\r\n    </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mixinPanel from '../../common/mixinPanel'\r\nimport executionListenerDialog from './property/executionListener'\r\nimport taskListenerDialog from './property/taskListener'\r\nimport multiInstanceDialog from './property/multiInstance'\r\nimport { commonParse, userTaskParse } from '../../common/parseElement'\r\nimport {StrUtil} from '@/utils/StrUtil'\r\nimport FlowUser from '@/components/flow/User'\r\nimport FlowRole from '@/components/flow/Role'\r\nimport FlowExp from '@/components/flow/Expression'\r\nimport { listAllForm } from '@/api/flowable/form'\r\n\r\nexport default {\r\n  components: {\r\n    executionListenerDialog,\r\n    taskListenerDialog,\r\n    multiInstanceDialog,\r\n    FlowUser,\r\n    FlowRole,\r\n    FlowExp,\r\n  },\r\n  mixins: [mixinPanel],\r\n  props: {\r\n    users: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    groups: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    exps: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      userTypeOption: [\r\n        { label: '指定人员', value: 'assignee' },\r\n        { label: '候选人员', value: 'candidateUsers' },\r\n        { label: '候选角色', value: 'candidateGroups' }\r\n      ],\r\n      dialogName: '',\r\n      executionListenerLength: 0,\r\n      taskListenerLength: 0,\r\n      hasMultiInstance: false,\r\n      userVisible: false,\r\n      roleVisible: false,\r\n      expVisible: false,\r\n      formData: {},\r\n      assignee: null,\r\n      candidateUsers: null,\r\n      candidateGroups: null,\r\n      // 选类型\r\n      checkType: 'single',\r\n      // 选中的值\r\n      checkValues: null,\r\n      // 数据回显\r\n      selectValues: null,\r\n      // 用户列表\r\n      userList: this.users,\r\n      // 角色列表\r\n      groupList: this.groups,\r\n      // 表达式列表\r\n      expList: this.exps,\r\n      // 表达式类型\r\n      expType: null,\r\n      // 表单列表\r\n      formList: [],\r\n    }\r\n  },\r\n  computed: {\r\n    formConfig() {\r\n      const _this = this\r\n      return {\r\n        inline: false,\r\n        item: [\r\n          {\r\n            xType: 'input',\r\n            name: 'id',\r\n            label: '节点 id',\r\n            rules: [{ required: true, message: 'Id 不能为空' }]\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'name',\r\n            label: '节点名称',\r\n            rules: [{ required: true, message: '节点名称不能为空' }]\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'documentation',\r\n            label: '节点描述'\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'executionListener',\r\n            label: '执行监听器'\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'taskListener',\r\n            label: '任务监听器',\r\n            show: !!_this.showConfig.taskListener\r\n          },\r\n          {\r\n            xType: 'select',\r\n            name: 'userType',\r\n            label: '用户类型',\r\n            // clearable: true,\r\n            dic: _this.userTypeOption,\r\n            // rules: [{ required: true, message: '用户类型不能为空' }],\r\n            show: !!_this.showConfig.userType\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'checkSingleUser',\r\n            label: '指定人员',\r\n            // rules: [{ required: true, message: '指定人员不能为空' }],\r\n            show: !!_this.showConfig.assignee && _this.formData.userType === 'assignee'\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'checkMultipleUser',\r\n            label: '候选人员',\r\n            // rules: [{ required: true, message: '候选人员不能为空' }],\r\n            show: !!_this.showConfig.candidateUsers && _this.formData.userType === 'candidateUsers'\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'checkRole',\r\n            label: '候选角色',\r\n            // rules: [{ required: true, message: '候选角色不能为空' }],\r\n            show: !!_this.showConfig.candidateGroups && _this.formData.userType === 'candidateGroups'\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'multiInstance',\r\n            label: '多实例'\r\n          },\r\n          {\r\n            xType: 'switch',\r\n            name: 'async',\r\n            label: '异步',\r\n            activeText: '是',\r\n            inactiveText: '否',\r\n            show: !!_this.showConfig.async\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'priority',\r\n            label: '优先级',\r\n            show: !!_this.showConfig.priority\r\n          },\r\n          // {\r\n          //   xType: 'input',\r\n          //   name: 'formKey',\r\n          //   label: '表单标识key',\r\n          //   show: !!_this.showConfig.formKey\r\n          // },\r\n          {\r\n            xType: 'select',\r\n            name: 'formKey',\r\n            label: '表单标识key',\r\n            clearable: true,\r\n            dic: { data: _this.formList, label: 'formName', value: 'formId' },\r\n            show: !!_this.showConfig.formKey\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'skipExpression',\r\n            label: '跳过表达式',\r\n            show: !!_this.showConfig.skipExpression\r\n          },\r\n          {\r\n            xType: 'switch',\r\n            name: 'isForCompensation',\r\n            label: '是否为补偿',\r\n            activeText: '是',\r\n            inactiveText: '否',\r\n            show: !!_this.showConfig.isForCompensation\r\n          },\r\n          {\r\n            xType: 'switch',\r\n            name: 'triggerable',\r\n            label: '服务任务可触发',\r\n            activeText: '是',\r\n            inactiveText: '否',\r\n            show: !!_this.showConfig.triggerable\r\n          },\r\n          {\r\n            xType: 'switch',\r\n            name: 'autoStoreVariables',\r\n            label: '自动存储变量',\r\n            activeText: '是',\r\n            inactiveText: '否',\r\n            show: !!_this.showConfig.autoStoreVariables\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'ruleVariablesInput',\r\n            label: '输入变量',\r\n            show: !!_this.showConfig.ruleVariablesInput\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'rules',\r\n            label: '规则',\r\n            show: !!_this.showConfig.rules\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'resultVariable',\r\n            label: '结果变量',\r\n            show: !!_this.showConfig.resultVariable\r\n          },\r\n          {\r\n            xType: 'switch',\r\n            name: 'exclude',\r\n            label: '排除',\r\n            activeText: '是',\r\n            inactiveText: '否',\r\n            show: !!_this.showConfig.exclude\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'class',\r\n            label: '类',\r\n            show: !!_this.showConfig.class\r\n          },\r\n          {\r\n            xType: 'datePicker',\r\n            type: 'datetime',\r\n            valueFormat: 'yyyy-MM-ddTHH:mm:ss',\r\n            name: 'dueDate',\r\n            label: '到期时间',\r\n            show: !!_this.showConfig.dueDate\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    'formData.userType': function(val, oldVal) {\r\n      if (StrUtil.isNotBlank(oldVal)) {\r\n          delete this.element.businessObject.$attrs[`flowable:${oldVal}`]\r\n          delete this.formData[oldVal]\r\n          // 清除已选人员数据\r\n          this.checkValues = '';\r\n          this.selectValues = null;\r\n          // 删除xml中已选择数据类型节点\r\n          delete this.element.businessObject.$attrs[`flowable:dataType`]\r\n      }\r\n      // 写入userType节点信息到xml\r\n      this.updateProperties({'flowable:userType': val})\r\n    },\r\n    'formData.async': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:async': val})\r\n      }\r\n    },\r\n    'formData.dueDate': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:dueDate': val})\r\n      }\r\n    },\r\n    'formData.formKey': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:formKey': val})\r\n      } else {\r\n        // 删除xml中已选择表单信息\r\n        delete this.element.businessObject[`formKey`]\r\n      }\r\n    },\r\n    'formData.priority': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:priority': val})\r\n      }\r\n    },\r\n    'formData.skipExpression': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:skipExpression': val})\r\n      } else {\r\n        delete this.element.businessObject.$attrs[`flowable:skipExpression`]\r\n      }\r\n    },\r\n    'formData.isForCompensation': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'isForCompensation': val})\r\n      }\r\n    },\r\n    'formData.triggerable': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:triggerable': val})\r\n      }\r\n    },\r\n    'formData.class': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:class': val})\r\n      }\r\n    },\r\n    'formData.autoStoreVariables': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:autoStoreVariables': val})\r\n      }\r\n    },\r\n    'formData.exclude': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:exclude': val})\r\n      }\r\n    },\r\n    'formData.ruleVariablesInput': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:ruleVariablesInput': val})\r\n      }\r\n    },\r\n    'formData.rules': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:rules': val})\r\n      }\r\n    },\r\n    'formData.resultVariable': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:resultVariable': val})\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    let cache = commonParse(this.element)\r\n    cache = userTaskParse(cache)\r\n    this.formData = cache\r\n    this.computedExecutionListenerLength()\r\n    this.computedTaskListenerLength()\r\n    this.computedHasMultiInstance()\r\n    // 人员信息回显\r\n    this.checkValuesEcho();\r\n    // 加载表单列表\r\n    this.getListForm();\r\n  },\r\n  methods: {\r\n    computedExecutionListenerLength() {\r\n      this.executionListenerLength = this.element.businessObject.extensionElements?.values\r\n        ?.filter(item => item.$type === 'flowable:ExecutionListener').length ?? 0\r\n    },\r\n    computedTaskListenerLength() {\r\n      this.taskListenerLength = this.element.businessObject.extensionElements?.values\r\n        ?.filter(item => item.$type === 'flowable:TaskListener').length ?? 0\r\n    },\r\n    computedHasMultiInstance() {\r\n      if (this.element.businessObject.loopCharacteristics) {\r\n        this.hasMultiInstance = true\r\n      } else {\r\n        this.hasMultiInstance = false\r\n      }\r\n    },\r\n    // 获取表单信息\r\n    getListForm(){\r\n      listAllForm().then(res =>{\r\n        res.data.forEach(item =>{\r\n          item.formId = item.formId.toString();\r\n        })\r\n        this.formList = res.data;\r\n      })\r\n    },\r\n    // 设计器右侧表单数据回显\r\n    checkValuesEcho(){\r\n      const that = this;\r\n      const attrs = that.element.businessObject.$attrs;\r\n      const businessObject = that.element.businessObject;\r\n      console.log(that.element.businessObject,\"this.element.businessObject\")\r\n      // 指定用户\r\n      if (attrs.hasOwnProperty(\"flowable:assignee\")) {\r\n        const val = attrs[\"flowable:assignee\"];\r\n        // 查找是否动态指定人员(选中流程表达式)\r\n        if (attrs[\"flowable:dataType\"] === \"dynamic\") {\r\n          this.checkValues = that.expList.find(item => item.expression == val).name;\r\n          this.selectValues = that.expList.find(item => item.expression == val).id;\r\n        } else {\r\n          this.checkValues = that.userList.find(item => item.userId == val).nickName;\r\n          this.selectValues = that.userList.find(item => item.userId == val).userId;\r\n        }\r\n        // 候选用户\r\n      } else if (attrs.hasOwnProperty(\"flowable:candidateUsers\")) {\r\n        const val = attrs[\"flowable:candidateUsers\"];\r\n        if (attrs[\"flowable:dataType\"] === \"dynamic\") {\r\n          this.checkValues = that.expList.find(item => item.expression == val).name;\r\n          this.selectValues = that.expList.find(item => item.expression == val).id;\r\n        } else {\r\n          const newArr = that.userList.filter(i => val.split(',').includes(i.userId))\r\n          this.checkValues =  newArr.map(item => item.nickName).join(',');\r\n          this.selectValues = newArr.map(item => item.userId).join(',');\r\n        }\r\n      } else if (businessObject.hasOwnProperty(\"candidateGroups\") || attrs.hasOwnProperty(\"flowable:candidateGroups\") ) {\r\n        // 候选角色信息\r\n        const val = businessObject[\"candidateGroups\"] || attrs[\"flowable:candidateGroups\"];\r\n        if (attrs[\"flowable:dataType\"] === \"dynamic\") {\r\n          this.checkValues = that.expList.find(item => item.expression == val).name;\r\n          this.selectValues = that.expList.find(item => item.expression == val).id;\r\n        } else {\r\n          const newArr = that.groupList.filter(i => val.split(',').includes(i.roleId))\r\n          this.checkValues =  newArr.map(item => item.roleName).join(',');\r\n          this.selectValues = newArr.map(item => item.roleId).join(',');\r\n        }\r\n      }\r\n    },\r\n    finishExecutionListener() {\r\n      if (this.dialogName === 'executionListenerDialog') {\r\n        this.computedExecutionListenerLength()\r\n      }\r\n      this.dialogName = ''\r\n    },\r\n    finishTaskListener() {\r\n      if (this.dialogName === 'taskListenerDialog') {\r\n        this.computedTaskListenerLength()\r\n      }\r\n      this.dialogName = ''\r\n    },\r\n    finishMultiInstance() {\r\n      if (this.dialogName === 'multiInstanceDialog') {\r\n        this.computedHasMultiInstance()\r\n      }\r\n      this.dialogName = ''\r\n    },\r\n    /*单选人员*/\r\n    singleUserCheck(){\r\n      this.userVisible = true;\r\n      this.checkType = \"single\";\r\n    },\r\n    /*多选人员*/\r\n    multipleUserCheck(){\r\n      this.userVisible = true;\r\n      this.checkType = \"multiple\";\r\n    },\r\n    /*单选角色*/\r\n    singleRoleCheck(){\r\n      this.roleVisible = true;\r\n      this.checkType = \"single\";\r\n    },\r\n    /*多选角色*/\r\n    multipleRoleCheck(){\r\n      this.roleVisible = true;\r\n      this.checkType = \"multiple\";\r\n    },\r\n    /*单选表达式*/\r\n    singleExpCheck(expType){\r\n      this.expVisible = true;\r\n      this.expType = expType;\r\n    },\r\n    // 选中表达式\r\n    handleSingleExpSelect(selection) {\r\n      this.deleteFlowAttar();\r\n      this.updateProperties({'flowable:dataType': 'dynamic'})\r\n      if (\"assignee\" === this.expType) {\r\n        this.updateProperties({'flowable:assignee': selection.expression});\r\n      } else if (\"candidateUsers\" === this.expType) {\r\n        this.updateProperties({'flowable:candidateUsers': selection.expression});\r\n      } else if (\"candidateGroups\" === this.expType) {\r\n        this.updateProperties({'flowable:candidateGroups': selection.expression});\r\n      }\r\n      this.checkValues = selection.name;\r\n      this.expType = null;\r\n    },\r\n    // 用户选中数据\r\n    handleUserSelect(selection) {\r\n      const that = this;\r\n      if (selection) {\r\n        that.deleteFlowAttar();\r\n        that.updateProperties({'flowable:dataType': 'fixed'})\r\n        if (selection instanceof Array) {\r\n          const userIds = selection.map(item => item.userId);\r\n          const nickName = selection.map(item => item.nickName);\r\n          that.updateProperties({'flowable:candidateUsers': userIds.join(',')})\r\n          that.checkValues = nickName.join(',');\r\n        } else {\r\n          that.updateProperties({'flowable:assignee': selection.userId})\r\n          that.checkValues = selection.nickName;\r\n        }\r\n      }\r\n    },\r\n    // 角色选中数据\r\n    handleRoleSelect(selection, name) {\r\n      const that = this;\r\n      if (selection && name) {\r\n        that.deleteFlowAttar();\r\n        that.updateProperties({'flowable:dataType': 'fixed'})\r\n        that.updateProperties({'flowable:candidateGroups': selection});\r\n        that.checkValues = name;\r\n      }\r\n    },\r\n    /*用户选中赋值*/\r\n    checkUserComplete(){\r\n      this.userVisible = false;\r\n      this.checkType = \"\";\r\n    },\r\n    /*候选角色选中赋值*/\r\n    checkRoleComplete(){\r\n      this.roleVisible = false;\r\n      this.checkType = \"\";\r\n      },\r\n    /*表达式选中赋值*/\r\n    checkExpComplete(){\r\n      this.expVisible = false;\r\n    },\r\n    // 删除节点\r\n    deleteFlowAttar(){\r\n      delete this.element.businessObject.$attrs[`flowable:dataType`]\r\n      delete this.element.businessObject.$attrs[`flowable:assignee`]\r\n      delete this.element.businessObject.$attrs[`flowable:candidateUsers`]\r\n      delete this.element.businessObject.$attrs[`flowable:candidateGroups`]\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"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"}]}