{"remainingRequest":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\visual_code_work_space\\ruoyi-ui\\src\\views\\flowable\\task\\record\\index.vue?vue&type=style&index=0&id=1769b531&lang=scss&scoped=true&","dependencies":[{"path":"E:\\visual_code_work_space\\ruoyi-ui\\src\\views\\flowable\\task\\record\\index.vue","mtime":1693557459676},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi50ZXN0LWZvcm0gew0KICBtYXJnaW46IDE1cHggYXV0bzsNCiAgd2lkdGg6IDgwMHB4Ow0KICBwYWRkaW5nOiAxNXB4Ow0KfQ0KDQouY2xlYXJmaXg6YmVmb3JlLA0KLmNsZWFyZml4OmFmdGVyIHsNCiAgZGlzcGxheTogdGFibGU7DQogIGNvbnRlbnQ6ICIiOw0KfQ0KLmNsZWFyZml4OmFmdGVyIHsNCiAgY2xlYXI6IGJvdGgNCn0NCg0KLmJveC1jYXJkIHsNCiAgd2lkdGg6IDEwMCU7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQp9DQoNCi5lbC10YWcgKyAuZWwtdGFnIHsNCiAgbWFyZ2luLWxlZnQ6IDEwcHg7DQp9DQoNCi5teS1sYWJlbCB7DQogIGJhY2tncm91bmQ6ICNFMUYzRDg7DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappingsmkBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/flowable/task/record","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-card class=\"box-card\" >\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span class=\"el-icon-document\">基础信息</span>\r\n          <el-button style=\"float: right;\" type=\"primary\" @click=\"goBack\">关闭</el-button>\r\n        </div>\r\n\r\n      <!--流程处理表单模块-->\r\n      <el-col :span=\"16\" :offset=\"6\" v-if=\"variableOpen\">\r\n          <div>\r\n            <parser :key=\"new Date().getTime()\" :form-conf=\"variablesData\" />\r\n          </div>\r\n          <div style=\"margin-left:10%;margin-bottom: 20px;font-size: 14px;\" v-if=\"finished === 'true'\">\r\n            <el-button  icon=\"el-icon-edit-outline\" type=\"success\" size=\"mini\" @click=\"handleComplete\">审批</el-button>\r\n<!--                <el-button  icon=\"el-icon-edit-outline\" type=\"primary\" size=\"mini\" @click=\"handleDelegate\">委派</el-button>-->\r\n<!--                <el-button  icon=\"el-icon-edit-outline\" type=\"primary\" size=\"mini\" @click=\"handleAssign\">转办</el-button>-->\r\n<!--                <el-button  icon=\"el-icon-edit-outline\" type=\"primary\" size=\"mini\" @click=\"handleDelegate\">签收</el-button>-->\r\n            <el-button  icon=\"el-icon-refresh-left\" type=\"warning\" size=\"mini\" @click=\"handleReturn\">退回</el-button>\r\n            <el-button  icon=\"el-icon-circle-close\" type=\"danger\" size=\"mini\" @click=\"handleReject\">驳回</el-button>\r\n          </div>\r\n     </el-col>\r\n\r\n      <!--初始化流程加载表单信息-->\r\n      <el-col :span=\"16\" :offset=\"4\" v-if=\"formConfOpen\">\r\n        <div class=\"test-form\">\r\n          <parser :key=\"new Date().getTime()\"  :form-conf=\"formConf\" @submit=\"submitForm\" ref=\"parser\" @getData=\"getData\" />\r\n        </div>\r\n      </el-col>\r\n    </el-card>\r\n\r\n    <!--流程流转记录-->\r\n    <el-card class=\"box-card\" v-if=\"flowRecordList\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span class=\"el-icon-notebook-1\">审批记录</span>\r\n          </div>\r\n          <el-col :span=\"16\" :offset=\"4\" >\r\n            <div class=\"block\">\r\n              <el-timeline>\r\n                <el-timeline-item\r\n                  v-for=\"(item,index ) in flowRecordList\"\r\n                  :key=\"index\"\r\n                  :icon=\"setIcon(item.finishTime)\"\r\n                  :color=\"setColor(item.finishTime)\"\r\n                >\r\n                  <p style=\"font-weight: 700\">{{item.taskName}}</p>\r\n                  <el-card :body-style=\"{ padding: '10px' }\">\r\n                    <el-descriptions class=\"margin-top\" :column=\"1\" size=\"small\" border>\r\n                      <el-descriptions-item v-if=\"item.assigneeName\" label-class-name=\"my-label\">\r\n                        <template slot=\"label\"><i class=\"el-icon-user\"></i>办理人</template>\r\n                        {{item.assigneeName}}\r\n                        <el-tag type=\"info\" size=\"mini\">{{item.deptName}}</el-tag>\r\n                      </el-descriptions-item>\r\n                      <el-descriptions-item v-if=\"item.candidate\" label-class-name=\"my-label\">\r\n                        <template slot=\"label\"><i class=\"el-icon-user\"></i>候选办理</template>\r\n                        {{item.candidate}}\r\n                      </el-descriptions-item>\r\n                      <el-descriptions-item label-class-name=\"my-label\">\r\n                        <template slot=\"label\"><i class=\"el-icon-date\"></i>接收时间</template>\r\n                        {{item.createTime}}\r\n                      </el-descriptions-item>\r\n                      <el-descriptions-item v-if=\"item.finishTime\" label-class-name=\"my-label\">\r\n                        <template slot=\"label\"><i class=\"el-icon-date\"></i>处理时间</template>\r\n                        {{item.finishTime}}\r\n                      </el-descriptions-item>\r\n                      <el-descriptions-item v-if=\"item.duration\"  label-class-name=\"my-label\">\r\n                        <template slot=\"label\"><i class=\"el-icon-time\"></i>耗时</template>\r\n                        {{item.duration}}\r\n                      </el-descriptions-item>\r\n                      <el-descriptions-item v-if=\"item.comment\" label-class-name=\"my-label\">\r\n                        <template slot=\"label\"><i class=\"el-icon-tickets\"></i>处理意见</template>\r\n                        {{item.comment.comment}}\r\n                      </el-descriptions-item>\r\n                    </el-descriptions>\r\n\r\n<!--                    <p  v-if=\"item.comment\">-->\r\n<!--                      <el-tag type=\"success\" v-if=\"item.comment.type === '1'\">  {{item.comment.comment}}</el-tag>-->\r\n<!--                      <el-tag type=\"warning\" v-if=\"item.comment.type === '2'\">  {{item.comment.comment}}</el-tag>-->\r\n<!--                      <el-tag type=\"danger\" v-if=\"item.comment.type === '3'\">  {{item.comment.comment}}</el-tag>-->\r\n<!--                    </p>-->\r\n                  </el-card>\r\n                </el-timeline-item>\r\n              </el-timeline>\r\n            </div>\r\n          </el-col>\r\n      </el-card>\r\n    <el-card class=\"box-card\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span class=\"el-icon-picture-outline\">流程图</span>\r\n        </div>\r\n        <flow :xmlData=\"xmlData\" :taskData=\"taskList\"></flow>\r\n    </el-card>\r\n\r\n    <!--审批正常流程-->\r\n    <el-dialog :title=\"completeTitle\" :visible.sync=\"completeOpen\" :width=\"checkSendUser? '60%':'40%'\" append-to-body>\r\n      <el-form ref=\"taskForm\" :model=\"taskForm\" label-width=\"80px\" >\r\n        <el-form-item  v-if=\"checkSendUser\" prop=\"targetKey\">\r\n          <el-row :gutter=\"20\">\r\n            <!--部门数据-->\r\n            <el-col :span=\"6\" :xs=\"24\">\r\n              <h6>部门列表</h6>\r\n              <div class=\"head-container\">\r\n                <el-input\r\n                  v-model=\"deptName\"\r\n                  placeholder=\"请输入部门名称\"\r\n                  clearable\r\n                  size=\"small\"\r\n                  prefix-icon=\"el-icon-search\"\r\n                  style=\"margin-bottom: 20px\"\r\n                />\r\n              </div>\r\n              <div class=\"head-container\">\r\n                <el-tree\r\n                  :data=\"deptOptions\"\r\n                  :props=\"defaultProps\"\r\n                  :expand-on-click-node=\"false\"\r\n                  :filter-node-method=\"filterNode\"\r\n                  ref=\"tree\"\r\n                  default-expand-all\r\n                  @node-click=\"handleNodeClick\"\r\n                />\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"10\" :xs=\"24\">\r\n              <h6>待选人员</h6>\r\n              <el-table\r\n                ref=\"singleTable\"\r\n                :data=\"userList\"\r\n                border\r\n                style=\"width: 100%\"\r\n                @selection-change=\"handleSelectionChange\">\r\n                <el-table-column type=\"selection\" width=\"50\" align=\"center\" />\r\n                <el-table-column label=\"用户名\" align=\"center\" prop=\"nickName\" />\r\n                <el-table-column label=\"部门\" align=\"center\" prop=\"dept.deptName\" />\r\n              </el-table>\r\n            </el-col>\r\n            <el-col :span=\"8\" :xs=\"24\">\r\n              <h6>已选人员</h6>\r\n              <el-tag\r\n                v-for=\"(user,index) in userData\"\r\n                :key=\"index\"\r\n                closable\r\n                @close=\"handleClose(user)\">\r\n                {{user.nickName}} {{user.dept.deptName}}\r\n              </el-tag>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form-item>\r\n        <el-form-item label=\"处理意见\" prop=\"comment\" :rules=\"[{ required: true, message: '请输入处理意见', trigger: 'blur' }]\">\r\n          <el-input type=\"textarea\" v-model=\"taskForm.comment\" placeholder=\"请输入处理意见\"/>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"completeOpen = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"taskComplete\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!--退回流程-->\r\n    <el-dialog :title=\"returnTitle\" :visible.sync=\"returnOpen\" width=\"40%\" append-to-body>\r\n        <el-form ref=\"taskForm\" :model=\"taskForm\" label-width=\"80px\" >\r\n            <el-form-item label=\"退回节点\" prop=\"targetKey\">\r\n              <el-radio-group v-model=\"taskForm.targetKey\">\r\n                <el-radio-button\r\n                  v-for=\"item in returnTaskList\"\r\n                  :key=\"item.id\"\r\n                  :label=\"item.id\"\r\n                >{{item.name}}</el-radio-button>\r\n              </el-radio-group>\r\n            </el-form-item>\r\n          <el-form-item label=\"退回意见\" prop=\"comment\" :rules=\"[{ required: true, message: '请输入意见', trigger: 'blur' }]\">\r\n            <el-input style=\"width: 50%\" type=\"textarea\" v-model=\"taskForm.comment\" placeholder=\"请输入意见\"/>\r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"returnOpen = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"taskReturn\">确 定</el-button>\r\n        </span>\r\n    </el-dialog>\r\n\r\n    <!--驳回流程-->\r\n    <el-dialog :title=\"rejectTitle\" :visible.sync=\"rejectOpen\" width=\"40%\" append-to-body>\r\n      <el-form ref=\"taskForm\" :model=\"taskForm\" label-width=\"80px\" >\r\n        <el-form-item label=\"驳回意见\" prop=\"comment\" :rules=\"[{ required: true, message: '请输入意见', trigger: 'blur' }]\">\r\n          <el-input style=\"width: 50%\" type=\"textarea\" v-model=\"taskForm.comment\" placeholder=\"请输入意见\"/>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"rejectOpen = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"taskReject\">确 定</el-button>\r\n        </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {flowRecord} from \"@/api/flowable/finished\";\r\nimport Parser from '@/components/parser/Parser'\r\nimport {definitionStart, getProcessVariables, readXml, getFlowViewer} from \"@/api/flowable/definition\";\r\nimport {complete, rejectTask, returnList, returnTask, getNextFlowNode, delegate} from \"@/api/flowable/todo\";\r\nimport flow from '@/views/flowable/task/record/flow'\r\nimport {treeselect} from \"@/api/system/dept\";\r\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\r\nimport Treeselect from \"@riophae/vue-treeselect\";\r\nimport {listUser} from \"@/api/system/user\";\r\n\r\nexport default {\r\n  name: \"Record\",\r\n  components: {\r\n    Parser,\r\n    flow,\r\n    Treeselect\r\n  },\r\n  props: {},\r\n  data() {\r\n    return {\r\n      // 模型xml数据\r\n      xmlData: \"\",\r\n      taskList: [],\r\n      // 部门名称\r\n      deptName: undefined,\r\n      // 部门树选项\r\n      deptOptions: undefined,\r\n      // 用户表格数据\r\n      userList: null,\r\n      defaultProps: {\r\n        children: \"children\",\r\n        label: \"label\"\r\n      },\r\n      // 查询参数\r\n      queryParams: {\r\n        deptId: undefined\r\n      },\r\n      // 遮罩层\r\n      loading: true,\r\n      flowRecordList: [], // 流程流转数据\r\n      formConfCopy: {},\r\n      src: null,\r\n      rules: {}, // 表单校验\r\n      variablesForm: {}, // 流程变量数据\r\n      taskForm:{\r\n        returnTaskShow: false, // 是否展示回退表单\r\n        delegateTaskShow: false, // 是否展示回退表单\r\n        defaultTaskShow: true, // 默认处理\r\n        sendUserShow: false, // 审批用户\r\n        multiple: false,\r\n        comment:\"\", // 意见内容\r\n        procInsId: \"\", // 流程实例编号\r\n        instanceId: \"\", // 流程实例编号\r\n        deployId: \"\",  // 流程定义编号\r\n        taskId: \"\" ,// 流程任务编号\r\n        procDefId: \"\",  // 流程编号\r\n        vars: \"\",\r\n        targetKey:\"\"\r\n      },\r\n      userDataList:[], // 流程候选人\r\n      assignee: null,\r\n      formConf: {}, // 默认表单数据\r\n      formConfOpen: false, // 是否加载默认表单数据\r\n      variables: [], // 流程变量数据\r\n      variablesData: {}, // 流程变量数据\r\n      variableOpen: false, // 是否加载流程变量数据\r\n      returnTaskList: [],  // 回退列表数据\r\n      finished: 'false',\r\n      completeTitle: null,\r\n      completeOpen: false,\r\n      returnTitle: null,\r\n      returnOpen: false,\r\n      rejectOpen: false,\r\n      rejectTitle: null,\r\n      userData:[],\r\n      checkSendUser: false // 是否展示选择人员模块\r\n    };\r\n  },\r\n  created() {\r\n    this.taskForm.deployId = this.$route.query && this.$route.query.deployId;\r\n    this.taskForm.taskId  = this.$route.query && this.$route.query.taskId;\r\n    this.taskForm.procInsId = this.$route.query && this.$route.query.procInsId;\r\n    this.taskForm.executionId = this.$route.query && this.$route.query.executionId;\r\n    this.taskForm.instanceId = this.$route.query && this.$route.query.procInsId;\r\n    // 初始化表单\r\n    this.taskForm.procDefId  = this.$route.query && this.$route.query.procDefId;\r\n    // 回显流程记录\r\n    this.getFlowViewer(this.taskForm.procInsId,this.taskForm.executionId);\r\n    this.getModelDetail(this.taskForm.deployId);\r\n    // 流程任务重获取变量表单\r\n    if (this.taskForm.taskId){\r\n      this.processVariables( this.taskForm.taskId)\r\n      this.getNextFlowNode(this.taskForm.taskId)\r\n      this.taskForm.deployId = null\r\n    }\r\n    this.getFlowRecordList( this.taskForm.procInsId, this.taskForm.deployId);\r\n    this.finished =  this.$route.query && this.$route.query.finished\r\n  },\r\n  methods: {\r\n    /** 查询部门下拉树结构 */\r\n    getTreeselect() {\r\n      treeselect().then(response => {\r\n        this.deptOptions = response.data;\r\n      });\r\n    },\r\n    /** 查询用户列表 */\r\n    getList() {\r\n      listUser(this.addDateRange(this.queryParams, this.dateRange)).then(response => {\r\n          this.userList = response.rows;\r\n          this.total = response.total;\r\n        }\r\n      );\r\n    },\r\n    // 筛选节点\r\n    filterNode(value, data) {\r\n      if (!value) return true;\r\n      return data.label.indexOf(value) !== -1;\r\n    },\r\n    // 节点单击事件\r\n    handleNodeClick(data) {\r\n      this.queryParams.deptId = data.id;\r\n      this.getList();\r\n    },\r\n    /** xml 文件 */\r\n    getModelDetail(deployId) {\r\n      // 发送请求，获取xml\r\n      readXml(deployId).then(res => {\r\n        this.xmlData = res.data\r\n      })\r\n    },\r\n    getFlowViewer(procInsId,executionId) {\r\n      getFlowViewer(procInsId,executionId).then(res => {\r\n        this.taskList = res.data\r\n      })\r\n    },\r\n    setIcon(val) {\r\n      if (val) {\r\n        return \"el-icon-check\";\r\n      } else {\r\n        return \"el-icon-time\";\r\n      }\r\n    },\r\n    setColor(val) {\r\n      if (val) {\r\n        return \"#2bc418\";\r\n      } else {\r\n        return \"#b3bdbb\";\r\n      }\r\n    },\r\n    // 多选框选中数据\r\n    handleSelectionChange(selection) {\r\n      if (selection) {\r\n        this.userData = selection\r\n        const selectVal = selection.map(item => item.userId);\r\n        if (selectVal instanceof Array) {\r\n          this.taskForm.values = {\r\n            \"approval\": selectVal.join(',')\r\n          }\r\n        } else {\r\n          this.taskForm.values = {\r\n            \"approval\": selectVal\r\n          }\r\n        }\r\n      }\r\n    },\r\n    // 关闭标签\r\n    handleClose(tag) {\r\n      this.userData.splice(this.userData.indexOf(tag), 1);\r\n      this.$refs.singleTable.toggleRowSelection(tag, false)\r\n    },\r\n    /** 流程变量赋值 */\r\n    handleCheckChange(val) {\r\n      if (val instanceof Array) {\r\n        this.taskForm.values = {\r\n          \"approval\": val.join(',')\r\n        }\r\n      } else {\r\n        this.taskForm.values = {\r\n          \"approval\": val\r\n        }\r\n      }\r\n    },\r\n    /** 流程流转记录 */\r\n    getFlowRecordList(procInsId, deployId) {\r\n      const that = this\r\n      const params = {procInsId: procInsId, deployId: deployId}\r\n      flowRecord(params).then(res => {\r\n        that.flowRecordList = res.data.flowList;\r\n        // 流程过程中不存在初始化表单 直接读取的流程变量中存储的表单值\r\n        if (res.data.formData) {\r\n          that.formConf = res.data.formData;\r\n          that.formConfOpen = true\r\n        }\r\n      }).catch(res => {\r\n        this.goBack();\r\n      })\r\n    },\r\n    fillFormData(form, data) {\r\n      form.fields.forEach(item => {\r\n        const val = data[item.__vModel__]\r\n        if (val) {\r\n          item.__config__.defaultValue = val\r\n        }\r\n      })\r\n    },\r\n    /** 获取流程变量内容 */\r\n    processVariables(taskId) {\r\n      if (taskId) {\r\n        // 提交流程申请时填写的表单存入了流程变量中后续任务处理时需要展示\r\n        getProcessVariables(taskId).then(res => {\r\n          this.variablesData = res.data.variables;\r\n          this.variableOpen = true\r\n        });\r\n      }\r\n    },\r\n    /** 根据当前任务或者流程设计配置的下一步节点 */\r\n    getNextFlowNode(taskId) {\r\n      // 根据当前任务或者流程设计配置的下一步节点 todo 暂时未涉及到考虑网关、表达式和多节点情况\r\n      const params = {taskId: taskId}\r\n      getNextFlowNode(params).then(res => {\r\n        const data = res.data;\r\n        if (data) {\r\n          this.checkSendUser = true\r\n          if (data.type === 'assignee') { // 指定人员\r\n            this.userDataList = res.data.userList;\r\n          } else if (data.type === 'candidateUsers') {  // 指定人员(多个)\r\n            this.userDataList = res.data.userList;\r\n            this.taskForm.multiple = true;\r\n          } else if (data.type === 'candidateGroups') { // 指定组(所属角色接收任务)\r\n            res.data.roleList.forEach(role => {\r\n              role.userId = role.roleId;\r\n              role.nickName = role.roleName;\r\n            })\r\n            this.userDataList = res.data.roleList;\r\n            this.taskForm.multiple = false;\r\n          } else if (data.type === 'multiInstance') { // 会签?\r\n            this.userDataList = res.data.userList;\r\n            this.taskForm.multiple = true;\r\n          }else if (data.type === 'fixed') { // 已经固定人员接收下一任务\r\n            this.checkSendUser = false;\r\n          }\r\n        }\r\n      })\r\n    },\r\n    /** 审批任务选择 */\r\n    handleComplete() {\r\n      this.completeOpen = true;\r\n      this.completeTitle = \"审批流程\";\r\n      this.getTreeselect();\r\n    },\r\n    /** 审批任务 */\r\n    taskComplete() {\r\n      if (!this.taskForm.values && this.checkSendUser){\r\n        this.msgError(\"请选择流程接收人员\");\r\n        return;\r\n      }\r\n      if (!this.taskForm.comment){\r\n        this.msgError(\"请输入审批意见\");\r\n        return;\r\n      }\r\n      complete(this.taskForm).then(response => {\r\n       this.$modal.msgSuccess(response.msg);\r\n        this.goBack();\r\n      });\r\n    },\r\n    /** 委派任务 */\r\n    handleDelegate() {\r\n      this.taskForm.delegateTaskShow = true;\r\n      this.taskForm.defaultTaskShow = false;\r\n    },\r\n    handleAssign(){\r\n\r\n    },\r\n    /** 返回页面 */\r\n    goBack() {\r\n      // 关闭当前标签页并返回上个页面\r\n      this.$store.dispatch(\"tagsView/delView\", this.$route);\r\n      this.$router.go(-1)\r\n    },\r\n    /** 接收子组件传的值 */\r\n    getData(data) {\r\n      if (data) {\r\n        const variables = [];\r\n        data.fields.forEach(item => {\r\n          let variableData = {};\r\n          variableData.label = item.__config__.label\r\n          // 表单值为多个选项时\r\n          if (item.__config__.defaultValue instanceof Array) {\r\n            const array = [];\r\n            item.__config__.defaultValue.forEach(val => {\r\n              array.push(val)\r\n            })\r\n            variableData.val = array;\r\n          } else {\r\n            variableData.val = item.__config__.defaultValue\r\n          }\r\n          variables.push(variableData)\r\n        })\r\n        this.variables = variables;\r\n      }\r\n    },\r\n    /** 申请流程表单数据提交 */\r\n    submitForm(data) {\r\n      if (data) {\r\n        const variables = data.valData;\r\n        const formData = data.formData;\r\n        formData.disabled = true;\r\n        formData.formBtns = false;\r\n        if (this.taskForm.procDefId) {\r\n          variables.variables = formData;\r\n           // 启动流程并将表单数据加入流程变量\r\n          definitionStart(this.taskForm.procDefId, JSON.stringify(variables)).then(res => {\r\n           this.$modal.msgSuccess(res.msg);\r\n            this.goBack();\r\n          })\r\n        }\r\n      }\r\n    },\r\n    /** 驳回任务 */\r\n    handleReject() {\r\n      this.rejectOpen = true;\r\n      this.rejectTitle = \"驳回流程\";\r\n    },\r\n    /** 驳回任务 */\r\n    taskReject() {\r\n      this.$refs[\"taskForm\"].validate(valid => {\r\n        if (valid) {\r\n          rejectTask(this.taskForm).then(res => {\r\n           this.$modal.msgSuccess(res.msg);\r\n            this.goBack();\r\n          });\r\n        }\r\n      });\r\n    },\r\n    /** 可退回任务列表 */\r\n    handleReturn() {\r\n      this.returnOpen = true;\r\n      this.returnTitle = \"退回流程\";\r\n      returnList(this.taskForm).then(res => {\r\n        this.returnTaskList = res.data;\r\n        this.taskForm.values = null;\r\n      })\r\n    },\r\n    /** 提交退回任务 */\r\n   taskReturn() {\r\n      this.$refs[\"taskForm\"].validate(valid => {\r\n        if (valid) {\r\n          returnTask(this.taskForm).then(res => {\r\n           this.$modal.msgSuccess(res.msg);\r\n            this.goBack()\r\n          });\r\n        }\r\n      });\r\n    },\r\n    /** 取消回退任务按钮 */\r\n    cancelTask() {\r\n      this.taskForm.returnTaskShow = false;\r\n      this.taskForm.defaultTaskShow = true;\r\n      this.taskForm.sendUserShow = true;\r\n      this.returnTaskList = [];\r\n    },\r\n    /** 委派任务 */\r\n    submitDeleteTask() {\r\n      this.$refs[\"taskForm\"].validate(valid => {\r\n        if (valid) {\r\n          delegate(this.taskForm).then(response => {\r\n           this.$modal.msgSuccess(response.msg);\r\n            this.goBack();\r\n          });\r\n        }\r\n      });\r\n    },\r\n    /** 取消回退任务按钮 */\r\n    cancelDelegateTask() {\r\n      this.taskForm.delegateTaskShow = false;\r\n      this.taskForm.defaultTaskShow = true;\r\n      this.taskForm.sendUserShow = true;\r\n      this.returnTaskList = [];\r\n    },\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.test-form {\r\n  margin: 15px auto;\r\n  width: 800px;\r\n  padding: 15px;\r\n}\r\n\r\n.clearfix:before,\r\n.clearfix:after {\r\n  display: table;\r\n  content: \"\";\r\n}\r\n.clearfix:after {\r\n  clear: both\r\n}\r\n\r\n.box-card {\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-tag + .el-tag {\r\n  margin-left: 10px;\r\n}\r\n\r\n.my-label {\r\n  background: #E1F3D8;\r\n}\r\n</style>\r\n"]}]}