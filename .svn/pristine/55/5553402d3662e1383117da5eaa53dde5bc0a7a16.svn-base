{"remainingRequest":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\visual_code_work_space\\ruoyi-ui\\src\\components\\Process\\components\\nodePanel\\task.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\visual_code_work_space\\ruoyi-ui\\src\\components\\Process\\components\\nodePanel\\task.vue","mtime":1693557459616},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\babel.config.js","mtime":1693557459543},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_mixinPanel","_interopRequireDefault","require","_executionListener","_taskListener","_multiInstance","_parseElement","_StrUtil","_User","_Role","_Expression","_form","components","executionListenerDialog","taskListenerDialog","multiInstanceDialog","FlowUser","FlowRole","FlowExp","mixins","mixinPanel","props","users","type","Array","required","groups","exps","data","userTypeOption","label","value","dialogName","executionListenerLength","taskListenerLength","hasMultiInstance","userVisible","roleVisible","expVisible","formData","assignee","candidateUsers","candidateGroups","checkType","checkValues","selectValues","userList","groupList","expList","expType","formList","computed","formConfig","_this","inline","item","xType","name","rules","message","show","showConfig","taskListener","dic","userType","activeText","inactiveText","async","priority","clearable","formKey","skipExpression","isForCompensation","triggerable","autoStoreVariables","ruleVariablesInput","resultVariable","exclude","class","valueFormat","dueDate","watch","formDataUserType","val","oldVal","StrUtil","isNotBlank","element","businessObject","$attrs","concat","updateProperties","formDataAsync","formDataDueDate","formDataFormKey","formDataPriority","formDataSkipExpression","formDataIsForCompensation","formDataTriggerable","formDataClass","formDataAutoStoreVariables","formDataExclude","formDataRuleVariablesInput","formDataRules","formDataResultVariable","created","cache","commonParse","userTaskParse","computedExecutionListenerLength","computedTaskListenerLength","computedHasMultiInstance","checkValuesEcho","getListForm","methods","_this$element$busines","_this$element$busines2","extensionElements","values","filter","$type","length","_this$element$busines3","_this$element$busines4","loopCharacteristics","_this2","listAllForm","then","res","forEach","formId","toString","that","attrs","console","log","hasOwnProperty","find","expression","id","userId","nickName","newArr","i","split","includes","map","join","roleId","roleName","finishExecutionListener","finishTaskListener","finishMultiInstance","singleUserCheck","multipleUserCheck","singleRoleCheck","multipleRoleCheck","singleExpCheck","handleSingleExpSelect","selection","deleteFlowAttar","handleUserSelect","userIds","handleRoleSelect","checkUserComplete","checkRoleComplete","checkExpComplete","exports","default","_default"],"sources":["src/components/Process/components/nodePanel/task.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <x-form ref=\"xForm\" v-model=\"formData\" :config=\"formConfig\">\r\n      <template #executionListener>\r\n        <el-badge :value=\"executionListenerLength\">\r\n          <el-button size=\"small\" @click=\"dialogName = 'executionListenerDialog'\">编辑</el-button>\r\n        </el-badge>\r\n      </template>\r\n      <template #taskListener>\r\n        <el-badge :value=\"taskListenerLength\">\r\n          <el-button size=\"small\" @click=\"dialogName = 'taskListenerDialog'\">编辑</el-button>\r\n        </el-badge>\r\n      </template>\r\n      <template #multiInstance>\r\n        <el-badge :is-dot=\"hasMultiInstance\">\r\n          <el-button size=\"small\" @click=\"dialogName = 'multiInstanceDialog'\">编辑</el-button>\r\n        </el-badge>\r\n      </template>\r\n      <template #checkSingleUser>\r\n          <el-input placeholder=\"请选择人员\" class=\"input-with-select\" v-model=\"checkValues\">\r\n              <template slot=\"append\">\r\n                <!--指定用户-->\r\n                <el-button style=\"padding-left: 7px\" icon=\"el-icon-user\" @click=\"singleUserCheck\"/>\r\n                <el-divider direction=\"vertical\"></el-divider>\r\n                <!--选择表达式-->\r\n                <el-button style=\"padding-right: 7px\" icon=\"el-icon-postcard\" @click=\"singleExpCheck('assignee')\"/>\r\n              </template>\r\n          </el-input>\r\n      </template>\r\n      <template #checkMultipleUser>\r\n          <el-input placeholder=\"请选择候选用户\" class=\"input-with-select\" v-model=\"checkValues\">\r\n            <template slot=\"append\">\r\n              <!--候选用户-->\r\n              <el-button style=\"padding-left: 7px\" icon=\"el-icon-user\" @click=\"multipleUserCheck\"/>\r\n              <el-divider direction=\"vertical\"></el-divider>\r\n              <!--选择表达式-->\r\n              <el-button style=\"padding-right: 7px\" icon=\"el-icon-postcard\" @click=\"singleExpCheck('candidateUsers')\"/>\r\n            </template>\r\n          </el-input>\r\n      </template>\r\n      <template #checkRole>\r\n        <el-input placeholder=\"请选择候选角色\" class=\"input-with-select\" v-model=\"checkValues\">\r\n          <template slot=\"append\">\r\n          <!--候选角色-->\r\n            <el-button style=\"padding-left: 7px\" icon=\"el-icon-user\" @click=\"multipleRoleCheck\"/>\r\n            <el-divider direction=\"vertical\"></el-divider>\r\n              <!--选择表达式-->\r\n            <el-button style=\"padding-right: 7px\" icon=\"el-icon-postcard\" @click=\"singleExpCheck('candidateGroups')\"/>\r\n          </template>\r\n        </el-input>\r\n      </template>\r\n    </x-form>\r\n    <executionListenerDialog\r\n      v-if=\"dialogName === 'executionListenerDialog'\"\r\n      :element=\"element\"\r\n      :modeler=\"modeler\"\r\n      @close=\"finishExecutionListener\"\r\n    />\r\n    <taskListenerDialog\r\n      v-if=\"dialogName === 'taskListenerDialog'\"\r\n      :element=\"element\"\r\n      :modeler=\"modeler\"\r\n      @close=\"finishTaskListener\"\r\n    />\r\n    <multiInstanceDialog\r\n      v-if=\"dialogName === 'multiInstanceDialog'\"\r\n      :element=\"element\"\r\n      :modeler=\"modeler\"\r\n      @close=\"finishMultiInstance\"\r\n    />\r\n    <!--选择人员-->\r\n    <el-dialog\r\n      title=\"选择人员\"\r\n      :visible.sync=\"userVisible\"\r\n      width=\"60%\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n    >\r\n    <flow-user :checkType=\"checkType\" :selectValues=\"selectValues\" @handleUserSelect=\"handleUserSelect\"></flow-user>\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"userVisible = false\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"checkUserComplete\">确 定</el-button>\r\n    </span>\r\n    </el-dialog>\r\n    <!--选择表达式-->\r\n    <el-dialog\r\n      title=\"选择表达式\"\r\n      :visible.sync=\"expVisible\"\r\n      width=\"60%\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n    >\r\n      <flow-exp :selectValues=\"selectValues\" @handleSingleExpSelect=\"handleSingleExpSelect\"></flow-exp>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"expVisible = false\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"checkExpComplete\">确 定</el-button>\r\n    </span>\r\n    </el-dialog>\r\n    <!--选择角色-->\r\n    <el-dialog\r\n      title=\"选择候选角色\"\r\n      :visible.sync=\"roleVisible\"\r\n      width=\"60%\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n    >\r\n      <flow-role :checkType=\"checkType\" :selectValues=\"selectValues\" @handleRoleSelect=\"handleRoleSelect\"></flow-role>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"roleVisible = false\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"checkRoleComplete\">确 定</el-button>\r\n    </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mixinPanel from '../../common/mixinPanel'\r\nimport executionListenerDialog from './property/executionListener'\r\nimport taskListenerDialog from './property/taskListener'\r\nimport multiInstanceDialog from './property/multiInstance'\r\nimport { commonParse, userTaskParse } from '../../common/parseElement'\r\nimport {StrUtil} from '@/utils/StrUtil'\r\nimport FlowUser from '@/components/flow/User'\r\nimport FlowRole from '@/components/flow/Role'\r\nimport FlowExp from '@/components/flow/Expression'\r\nimport { listAllForm } from '@/api/flowable/form'\r\n\r\nexport default {\r\n  components: {\r\n    executionListenerDialog,\r\n    taskListenerDialog,\r\n    multiInstanceDialog,\r\n    FlowUser,\r\n    FlowRole,\r\n    FlowExp,\r\n  },\r\n  mixins: [mixinPanel],\r\n  props: {\r\n    users: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    groups: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    exps: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      userTypeOption: [\r\n        { label: '指定人员', value: 'assignee' },\r\n        { label: '候选人员', value: 'candidateUsers' },\r\n        { label: '候选角色', value: 'candidateGroups' }\r\n      ],\r\n      dialogName: '',\r\n      executionListenerLength: 0,\r\n      taskListenerLength: 0,\r\n      hasMultiInstance: false,\r\n      userVisible: false,\r\n      roleVisible: false,\r\n      expVisible: false,\r\n      formData: {},\r\n      assignee: null,\r\n      candidateUsers: null,\r\n      candidateGroups: null,\r\n      // 选类型\r\n      checkType: 'single',\r\n      // 选中的值\r\n      checkValues: null,\r\n      // 数据回显\r\n      selectValues: null,\r\n      // 用户列表\r\n      userList: this.users,\r\n      // 角色列表\r\n      groupList: this.groups,\r\n      // 表达式列表\r\n      expList: this.exps,\r\n      // 表达式类型\r\n      expType: null,\r\n      // 表单列表\r\n      formList: [],\r\n    }\r\n  },\r\n  computed: {\r\n    formConfig() {\r\n      const _this = this\r\n      return {\r\n        inline: false,\r\n        item: [\r\n          {\r\n            xType: 'input',\r\n            name: 'id',\r\n            label: '节点 id',\r\n            rules: [{ required: true, message: 'Id 不能为空' }]\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'name',\r\n            label: '节点名称',\r\n            rules: [{ required: true, message: '节点名称不能为空' }]\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'documentation',\r\n            label: '节点描述'\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'executionListener',\r\n            label: '执行监听器'\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'taskListener',\r\n            label: '任务监听器',\r\n            show: !!_this.showConfig.taskListener\r\n          },\r\n          {\r\n            xType: 'select',\r\n            name: 'userType',\r\n            label: '用户类型',\r\n            // clearable: true,\r\n            dic: _this.userTypeOption,\r\n            // rules: [{ required: true, message: '用户类型不能为空' }],\r\n            show: !!_this.showConfig.userType\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'checkSingleUser',\r\n            label: '指定人员',\r\n            // rules: [{ required: true, message: '指定人员不能为空' }],\r\n            show: !!_this.showConfig.assignee && _this.formData.userType === 'assignee'\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'checkMultipleUser',\r\n            label: '候选人员',\r\n            // rules: [{ required: true, message: '候选人员不能为空' }],\r\n            show: !!_this.showConfig.candidateUsers && _this.formData.userType === 'candidateUsers'\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'checkRole',\r\n            label: '候选角色',\r\n            // rules: [{ required: true, message: '候选角色不能为空' }],\r\n            show: !!_this.showConfig.candidateGroups && _this.formData.userType === 'candidateGroups'\r\n          },\r\n          {\r\n            xType: 'slot',\r\n            name: 'multiInstance',\r\n            label: '多实例'\r\n          },\r\n          {\r\n            xType: 'switch',\r\n            name: 'async',\r\n            label: '异步',\r\n            activeText: '是',\r\n            inactiveText: '否',\r\n            show: !!_this.showConfig.async\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'priority',\r\n            label: '优先级',\r\n            show: !!_this.showConfig.priority\r\n          },\r\n          // {\r\n          //   xType: 'input',\r\n          //   name: 'formKey',\r\n          //   label: '表单标识key',\r\n          //   show: !!_this.showConfig.formKey\r\n          // },\r\n          {\r\n            xType: 'select',\r\n            name: 'formKey',\r\n            label: '表单标识key',\r\n            clearable: true,\r\n            dic: { data: _this.formList, label: 'formName', value: 'formId' },\r\n            show: !!_this.showConfig.formKey\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'skipExpression',\r\n            label: '跳过表达式',\r\n            show: !!_this.showConfig.skipExpression\r\n          },\r\n          {\r\n            xType: 'switch',\r\n            name: 'isForCompensation',\r\n            label: '是否为补偿',\r\n            activeText: '是',\r\n            inactiveText: '否',\r\n            show: !!_this.showConfig.isForCompensation\r\n          },\r\n          {\r\n            xType: 'switch',\r\n            name: 'triggerable',\r\n            label: '服务任务可触发',\r\n            activeText: '是',\r\n            inactiveText: '否',\r\n            show: !!_this.showConfig.triggerable\r\n          },\r\n          {\r\n            xType: 'switch',\r\n            name: 'autoStoreVariables',\r\n            label: '自动存储变量',\r\n            activeText: '是',\r\n            inactiveText: '否',\r\n            show: !!_this.showConfig.autoStoreVariables\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'ruleVariablesInput',\r\n            label: '输入变量',\r\n            show: !!_this.showConfig.ruleVariablesInput\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'rules',\r\n            label: '规则',\r\n            show: !!_this.showConfig.rules\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'resultVariable',\r\n            label: '结果变量',\r\n            show: !!_this.showConfig.resultVariable\r\n          },\r\n          {\r\n            xType: 'switch',\r\n            name: 'exclude',\r\n            label: '排除',\r\n            activeText: '是',\r\n            inactiveText: '否',\r\n            show: !!_this.showConfig.exclude\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'class',\r\n            label: '类',\r\n            show: !!_this.showConfig.class\r\n          },\r\n          {\r\n            xType: 'datePicker',\r\n            type: 'datetime',\r\n            valueFormat: 'yyyy-MM-ddTHH:mm:ss',\r\n            name: 'dueDate',\r\n            label: '到期时间',\r\n            show: !!_this.showConfig.dueDate\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    'formData.userType': function(val, oldVal) {\r\n      if (StrUtil.isNotBlank(oldVal)) {\r\n          delete this.element.businessObject.$attrs[`flowable:${oldVal}`]\r\n          delete this.formData[oldVal]\r\n          // 清除已选人员数据\r\n          this.checkValues = '';\r\n          this.selectValues = null;\r\n          // 删除xml中已选择数据类型节点\r\n          delete this.element.businessObject.$attrs[`flowable:dataType`]\r\n      }\r\n      // 写入userType节点信息到xml\r\n      this.updateProperties({'flowable:userType': val})\r\n    },\r\n    'formData.async': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:async': val})\r\n      }\r\n    },\r\n    'formData.dueDate': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:dueDate': val})\r\n      }\r\n    },\r\n    'formData.formKey': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:formKey': val})\r\n      } else {\r\n        // 删除xml中已选择表单信息\r\n        delete this.element.businessObject[`formKey`]\r\n      }\r\n    },\r\n    'formData.priority': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:priority': val})\r\n      }\r\n    },\r\n    'formData.skipExpression': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:skipExpression': val})\r\n      } else {\r\n        delete this.element.businessObject.$attrs[`flowable:skipExpression`]\r\n      }\r\n    },\r\n    'formData.isForCompensation': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'isForCompensation': val})\r\n      }\r\n    },\r\n    'formData.triggerable': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:triggerable': val})\r\n      }\r\n    },\r\n    'formData.class': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:class': val})\r\n      }\r\n    },\r\n    'formData.autoStoreVariables': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:autoStoreVariables': val})\r\n      }\r\n    },\r\n    'formData.exclude': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:exclude': val})\r\n      }\r\n    },\r\n    'formData.ruleVariablesInput': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:ruleVariablesInput': val})\r\n      }\r\n    },\r\n    'formData.rules': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:rules': val})\r\n      }\r\n    },\r\n    'formData.resultVariable': function(val) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.updateProperties({'flowable:resultVariable': val})\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    let cache = commonParse(this.element)\r\n    cache = userTaskParse(cache)\r\n    this.formData = cache\r\n    this.computedExecutionListenerLength()\r\n    this.computedTaskListenerLength()\r\n    this.computedHasMultiInstance()\r\n    // 人员信息回显\r\n    this.checkValuesEcho();\r\n    // 加载表单列表\r\n    this.getListForm();\r\n  },\r\n  methods: {\r\n    computedExecutionListenerLength() {\r\n      this.executionListenerLength = this.element.businessObject.extensionElements?.values\r\n        ?.filter(item => item.$type === 'flowable:ExecutionListener').length ?? 0\r\n    },\r\n    computedTaskListenerLength() {\r\n      this.taskListenerLength = this.element.businessObject.extensionElements?.values\r\n        ?.filter(item => item.$type === 'flowable:TaskListener').length ?? 0\r\n    },\r\n    computedHasMultiInstance() {\r\n      if (this.element.businessObject.loopCharacteristics) {\r\n        this.hasMultiInstance = true\r\n      } else {\r\n        this.hasMultiInstance = false\r\n      }\r\n    },\r\n    // 获取表单信息\r\n    getListForm(){\r\n      listAllForm().then(res =>{\r\n        res.data.forEach(item =>{\r\n          item.formId = item.formId.toString();\r\n        })\r\n        this.formList = res.data;\r\n      })\r\n    },\r\n    // 设计器右侧表单数据回显\r\n    checkValuesEcho(){\r\n      const that = this;\r\n      const attrs = that.element.businessObject.$attrs;\r\n      const businessObject = that.element.businessObject;\r\n      console.log(that.element.businessObject,\"this.element.businessObject\")\r\n      // 指定用户\r\n      if (attrs.hasOwnProperty(\"flowable:assignee\")) {\r\n        const val = attrs[\"flowable:assignee\"];\r\n        // 查找是否动态指定人员(选中流程表达式)\r\n        if (attrs[\"flowable:dataType\"] === \"dynamic\") {\r\n          this.checkValues = that.expList.find(item => item.expression == val).name;\r\n          this.selectValues = that.expList.find(item => item.expression == val).id;\r\n        } else {\r\n          this.checkValues = that.userList.find(item => item.userId == val).nickName;\r\n          this.selectValues = that.userList.find(item => item.userId == val).userId;\r\n        }\r\n        // 候选用户\r\n      } else if (attrs.hasOwnProperty(\"flowable:candidateUsers\")) {\r\n        const val = attrs[\"flowable:candidateUsers\"];\r\n        if (attrs[\"flowable:dataType\"] === \"dynamic\") {\r\n          this.checkValues = that.expList.find(item => item.expression == val).name;\r\n          this.selectValues = that.expList.find(item => item.expression == val).id;\r\n        } else {\r\n          const newArr = that.userList.filter(i => val.split(',').includes(i.userId))\r\n          this.checkValues =  newArr.map(item => item.nickName).join(',');\r\n          this.selectValues = newArr.map(item => item.userId).join(',');\r\n        }\r\n      } else if (businessObject.hasOwnProperty(\"candidateGroups\") || attrs.hasOwnProperty(\"flowable:candidateGroups\") ) {\r\n        // 候选角色信息\r\n        const val = businessObject[\"candidateGroups\"] || attrs[\"flowable:candidateGroups\"];\r\n        if (attrs[\"flowable:dataType\"] === \"dynamic\") {\r\n          this.checkValues = that.expList.find(item => item.expression == val).name;\r\n          this.selectValues = that.expList.find(item => item.expression == val).id;\r\n        } else {\r\n          const newArr = that.groupList.filter(i => val.split(',').includes(i.roleId))\r\n          this.checkValues =  newArr.map(item => item.roleName).join(',');\r\n          this.selectValues = newArr.map(item => item.roleId).join(',');\r\n        }\r\n      }\r\n    },\r\n    finishExecutionListener() {\r\n      if (this.dialogName === 'executionListenerDialog') {\r\n        this.computedExecutionListenerLength()\r\n      }\r\n      this.dialogName = ''\r\n    },\r\n    finishTaskListener() {\r\n      if (this.dialogName === 'taskListenerDialog') {\r\n        this.computedTaskListenerLength()\r\n      }\r\n      this.dialogName = ''\r\n    },\r\n    finishMultiInstance() {\r\n      if (this.dialogName === 'multiInstanceDialog') {\r\n        this.computedHasMultiInstance()\r\n      }\r\n      this.dialogName = ''\r\n    },\r\n    /*单选人员*/\r\n    singleUserCheck(){\r\n      this.userVisible = true;\r\n      this.checkType = \"single\";\r\n    },\r\n    /*多选人员*/\r\n    multipleUserCheck(){\r\n      this.userVisible = true;\r\n      this.checkType = \"multiple\";\r\n    },\r\n    /*单选角色*/\r\n    singleRoleCheck(){\r\n      this.roleVisible = true;\r\n      this.checkType = \"single\";\r\n    },\r\n    /*多选角色*/\r\n    multipleRoleCheck(){\r\n      this.roleVisible = true;\r\n      this.checkType = \"multiple\";\r\n    },\r\n    /*单选表达式*/\r\n    singleExpCheck(expType){\r\n      this.expVisible = true;\r\n      this.expType = expType;\r\n    },\r\n    // 选中表达式\r\n    handleSingleExpSelect(selection) {\r\n      this.deleteFlowAttar();\r\n      this.updateProperties({'flowable:dataType': 'dynamic'})\r\n      if (\"assignee\" === this.expType) {\r\n        this.updateProperties({'flowable:assignee': selection.expression});\r\n      } else if (\"candidateUsers\" === this.expType) {\r\n        this.updateProperties({'flowable:candidateUsers': selection.expression});\r\n      } else if (\"candidateGroups\" === this.expType) {\r\n        this.updateProperties({'flowable:candidateGroups': selection.expression});\r\n      }\r\n      this.checkValues = selection.name;\r\n      this.expType = null;\r\n    },\r\n    // 用户选中数据\r\n    handleUserSelect(selection) {\r\n      const that = this;\r\n      if (selection) {\r\n        that.deleteFlowAttar();\r\n        that.updateProperties({'flowable:dataType': 'fixed'})\r\n        if (selection instanceof Array) {\r\n          const userIds = selection.map(item => item.userId);\r\n          const nickName = selection.map(item => item.nickName);\r\n          that.updateProperties({'flowable:candidateUsers': userIds.join(',')})\r\n          that.checkValues = nickName.join(',');\r\n        } else {\r\n          that.updateProperties({'flowable:assignee': selection.userId})\r\n          that.checkValues = selection.nickName;\r\n        }\r\n      }\r\n    },\r\n    // 角色选中数据\r\n    handleRoleSelect(selection, name) {\r\n      const that = this;\r\n      if (selection && name) {\r\n        that.deleteFlowAttar();\r\n        that.updateProperties({'flowable:dataType': 'fixed'})\r\n        that.updateProperties({'flowable:candidateGroups': selection});\r\n        that.checkValues = name;\r\n      }\r\n    },\r\n    /*用户选中赋值*/\r\n    checkUserComplete(){\r\n      this.userVisible = false;\r\n      this.checkType = \"\";\r\n    },\r\n    /*候选角色选中赋值*/\r\n    checkRoleComplete(){\r\n      this.roleVisible = false;\r\n      this.checkType = \"\";\r\n      },\r\n    /*表达式选中赋值*/\r\n    checkExpComplete(){\r\n      this.expVisible = false;\r\n    },\r\n    // 删除节点\r\n    deleteFlowAttar(){\r\n      delete this.element.businessObject.$attrs[`flowable:dataType`]\r\n      delete this.element.businessObject.$attrs[`flowable:assignee`]\r\n      delete this.element.businessObject.$attrs[`flowable:candidateUsers`]\r\n      delete this.element.businessObject.$attrs[`flowable:candidateGroups`]\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"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"}]}