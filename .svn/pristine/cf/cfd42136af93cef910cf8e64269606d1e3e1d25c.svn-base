{"remainingRequest":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\visual_code_work_space\\ruoyi-ui\\src\\views\\flowable\\task\\record\\flowview.vue?vue&type=style&index=0&id=f484ac78&lang=scss&","dependencies":[{"path":"E:\\visual_code_work_space\\ruoyi-ui\\src\\views\\flowable\\task\\record\\flowview.vue","mtime":1693557459676},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJqcy1wb3dlcmVkLWJ5IHsKICBkaXNwbGF5OiBub25lOwp9Ci52aWV3LW1vZGUgewogIC5lbC1oZWFkZXIsIC5lbC1hc2lkZSwgLmRqcy1wYWxldHRlLCAuYmpzLXBvd2VyZWQtYnkgewogICAgZGlzcGxheTogbm9uZTsKICB9CiAgLmVsLWxvYWRpbmctbWFzayB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBpbml0aWFsOwogIH0KICAuZWwtbG9hZGluZy1zcGlubmVyIHsKICAgIGRpc3BsYXk6IG5vbmU7CiAgfQp9Ci5jb250YWluZXJzIHsKICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMTAwJTsKICAuY2FudmFzIHsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAxMDAlOwogIH0KICAucGFuZWwgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgcmlnaHQ6IDA7CiAgICB0b3A6IDUwcHg7CiAgICB3aWR0aDogMzAwcHg7CiAgfQogIC5sb2FkIHsKICAgIG1hcmdpbi1yaWdodDogMTBweDsKICB9CiAgLmVsLWZvcm0taXRlbV9fbGFiZWx7CiAgICBmb250LXNpemU6IDEzcHg7CiAgfQoKICAuZGpzLXBhbGV0dGV7CiAgICBsZWZ0OiAwcHghaW1wb3J0YW50OwogICAgdG9wOiAwcHg7CiAgICBib3JkZXItdG9wOiBub25lOwogIH0KCiAgLmRqcy1jb250YWluZXIgc3ZnIHsKICAgIG1pbi1oZWlnaHQ6IDY1MHB4OwogIH0KCiAgLmhpZ2hsaWdodC5kanMtc2hhcGUgLmRqcy12aXN1YWwgPiA6bnRoLWNoaWxkKDEpIHsKICAgIGZpbGw6IGdyZWVuICFpbXBvcnRhbnQ7CiAgICBzdHJva2U6IGdyZWVuICFpbXBvcnRhbnQ7CiAgICBmaWxsLW9wYWNpdHk6IDAuMiAhaW1wb3J0YW50OwogIH0KICAuaGlnaGxpZ2h0LmRqcy1zaGFwZSAuZGpzLXZpc3VhbCA+IDpudGgtY2hpbGQoMikgewogICAgZmlsbDogZ3JlZW4gIWltcG9ydGFudDsKICB9CiAgLmhpZ2hsaWdodC5kanMtc2hhcGUgLmRqcy12aXN1YWwgPiBwYXRoIHsKICAgIGZpbGw6IGdyZWVuICFpbXBvcnRhbnQ7CiAgICBmaWxsLW9wYWNpdHk6IDAuMiAhaW1wb3J0YW50OwogICAgc3Ryb2tlOiBncmVlbiAhaW1wb3J0YW50OwogIH0KICAuaGlnaGxpZ2h0LmRqcy1jb25uZWN0aW9uID4gLmRqcy12aXN1YWwgPiBwYXRoIHsKICAgIHN0cm9rZTogZ3JlZW4gIWltcG9ydGFudDsKICB9CiAgLmhpZ2hsaWdodC10b2RvLmRqcy1jb25uZWN0aW9uID4gLmRqcy12aXN1YWwgPiBwYXRoIHsKICAgIHN0cm9rZTogb3JhbmdlICFpbXBvcnRhbnQ7CiAgICBzdHJva2UtZGFzaGFycmF5OiA0cHggIWltcG9ydGFudDsKICAgIGZpbGwtb3BhY2l0eTogMC4yICFpbXBvcnRhbnQ7CiAgfQogIC5oaWdobGlnaHQtdG9kby5kanMtc2hhcGUgLmRqcy12aXN1YWwgPiA6bnRoLWNoaWxkKDEpIHsKICAgIGZpbGw6IG9yYW5nZSAhaW1wb3J0YW50OwogICAgc3Ryb2tlOiBvcmFuZ2UgIWltcG9ydGFudDsKICAgIHN0cm9rZS1kYXNoYXJyYXk6IDRweCAhaW1wb3J0YW50OwogICAgZmlsbC1vcGFjaXR5OiAwLjIgIWltcG9ydGFudDsKICB9CiAgLm92ZXJsYXlzLWRpdiB7CiAgICBmb250LXNpemU6IDEwcHg7CiAgICBjb2xvcjogcmVkOwogICAgd2lkdGg6IDEwMHB4OwogICAgdG9wOiAtMjBweCAhaW1wb3J0YW50OwogIH0KfQo="},{"version":3,"sources":["flowview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"flowview.vue","sourceRoot":"src/views/flowable/task/record","sourcesContent":["<template>\r\n  <div class=\"containers main-box\">\r\n    <el-button type=\"success\"\r\n               size=\"small\"\r\n               icon=\"el-icon-zoom-in\"\r\n               @click=\"zoomViewport(true)\">放大</el-button>\r\n    <el-button type=\"warning\"\r\n               size=\"small\"\r\n               icon=\"el-icon-zoom-out\"\r\n               @click=\"zoomViewport(false)\">缩小</el-button>\r\n    <el-button type=\"info\"\r\n               size=\"small\"\r\n               icon=\"el-icon-rank\"\r\n               @click=\"fitViewport\">适中</el-button>\r\n    <div class=\"canvas\" ref=\"flowCanvas\"></div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { CustomViewer as BpmnViewer } from \"@/components/customBpmn\";\r\n\r\nexport default {\r\n  name: \"FlowView\",\r\n  props: {\r\n    xmlData: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    taskList: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      bpmnViewer: null\r\n    };\r\n  },\r\n  watch: {\r\n    xmlData: function(val) {\r\n      if (val) {\r\n        this.getImg(val)\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // 生成实例\r\n    this.bpmnViewer && this.bpmnViewer.destroy();\r\n    this.bpmnViewer = new BpmnViewer({\r\n      container: this.$refs.flowCanvas,\r\n      height: 'calc(100vh - 200px)',\r\n    });\r\n    // this.getImg(this.xmlData)\r\n  },\r\n  methods: {\r\n    // 获取流程图片\r\n    async getImg(xmlUrl) {\r\n      const self = this\r\n      try {\r\n        await self.bpmnViewer.importXML(xmlUrl);\r\n        self.fitViewport()\r\n        if (self.taskList !==undefined && self.taskList.length > 0 ) {\r\n          self.fillColor()\r\n        }\r\n      } catch (err) {\r\n        console.error(err.message, err.warnings)\r\n      }\r\n    },\r\n    // 设置高亮颜色的class\r\n    setNodeColor(nodeCodes, colorClass, canvas) {\r\n      for (let i = 0; i < nodeCodes.length; i++) {\r\n        canvas.addMarker(nodeCodes[i], colorClass);\r\n      }\r\n    },\r\n    // 让图能自适应屏幕\r\n    fitViewport() {\r\n      this.zoom = this.bpmnViewer.get('canvas').zoom(\"fit-viewport\", \"auto\")\r\n    },\r\n    // 放大缩小\r\n    zoomViewport(zoomIn = true) {\r\n      this.zoom = this.bpmnViewer.get('canvas').zoom()\r\n      this.zoom += (zoomIn ? 0.1 : -0.1)\r\n      if(this.zoom >= 0.2) this.bpmnViewer.get('canvas').zoom(this.zoom)\r\n    },\r\n\r\n    // 设置高亮颜色的\r\n    fillColor() {\r\n      const canvas = this.bpmnViewer.get('canvas')\r\n      this.bpmnViewer.getDefinitions().rootElements[0].flowElements.forEach(n => {\r\n        const completeTask = this.taskList.find(m => m.key === n.id)\r\n        const todoTask = this.taskList.find(m => !m.completed)\r\n        const endTask = this.taskList[this.taskList.length - 1]\r\n        if (n.$type === 'bpmn:UserTask') {\r\n          if (completeTask) {\r\n            canvas.addMarker(n.id, completeTask.completed ? 'highlight' : 'highlight-todo')\r\n            n.outgoing?.forEach(nn => {\r\n              const targetTask = this.taskList.find(m => m.key === nn.targetRef.id)\r\n              if (targetTask) {\r\n                if (todoTask && completeTask.key === todoTask.key && !todoTask.completed){\r\n                  canvas.addMarker(nn.id, todoTask.completed ? 'highlight' : 'highlight-todo')\r\n                  canvas.addMarker(nn.targetRef.id, todoTask.completed ? 'highlight' : 'highlight-todo')\r\n                }else {\r\n                  canvas.addMarker(nn.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n                  canvas.addMarker(nn.targetRef.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n                }\r\n              }\r\n            })\r\n          }\r\n        }\r\n        // 排他网关\r\n        else if (n.$type === 'bpmn:ExclusiveGateway') {\r\n          if (completeTask) {\r\n            canvas.addMarker(n.id, completeTask.completed ? 'highlight' : 'highlight-todo')\r\n            n.outgoing?.forEach(nn => {\r\n              const targetTask = this.taskList.find(m => m.key === nn.targetRef.id)\r\n              if (targetTask) {\r\n\r\n                canvas.addMarker(nn.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n                canvas.addMarker(nn.targetRef.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n              }\r\n\r\n            })\r\n          }\r\n\r\n        }\r\n        // 并行网关\r\n        else if (n.$type === 'bpmn:ParallelGateway') {\r\n          if (completeTask) {\r\n            canvas.addMarker(n.id, completeTask.completed ? 'highlight' : 'highlight-todo')\r\n            n.outgoing?.forEach(nn => {\r\n              const targetTask = this.taskList.find(m => m.key === nn.targetRef.id)\r\n              if (targetTask) {\r\n                canvas.addMarker(nn.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n                canvas.addMarker(nn.targetRef.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n              }\r\n            })\r\n          }\r\n        }\r\n        else if (n.$type === 'bpmn:StartEvent') {\r\n          n.outgoing.forEach(nn => {\r\n            const completeTask = this.taskList.find(m => m.key === nn.targetRef.id)\r\n            if (completeTask) {\r\n              canvas.addMarker(nn.id, 'highlight')\r\n              canvas.addMarker(n.id, 'highlight')\r\n              return\r\n            }\r\n          })\r\n        }\r\n        else if (n.$type === 'bpmn:EndEvent') {\r\n          if (endTask.key === n.id && endTask.completed) {\r\n            canvas.addMarker(n.id, 'highlight')\r\n            return\r\n          }\r\n        }\r\n      })\r\n    },\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n  .bjs-powered-by {\r\n    display: none;\r\n  }\r\n  .view-mode {\r\n    .el-header, .el-aside, .djs-palette, .bjs-powered-by {\r\n      display: none;\r\n    }\r\n    .el-loading-mask {\r\n      background-color: initial;\r\n    }\r\n    .el-loading-spinner {\r\n      display: none;\r\n    }\r\n  }\r\n  .containers {\r\n    // background-color: #ffffff;\r\n    width: 100%;\r\n    height: 100%;\r\n    .canvas {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n    .panel {\r\n      position: absolute;\r\n      right: 0;\r\n      top: 50px;\r\n      width: 300px;\r\n    }\r\n    .load {\r\n      margin-right: 10px;\r\n    }\r\n    .el-form-item__label{\r\n      font-size: 13px;\r\n    }\r\n\r\n    .djs-palette{\r\n      left: 0px!important;\r\n      top: 0px;\r\n      border-top: none;\r\n    }\r\n\r\n    .djs-container svg {\r\n      min-height: 650px;\r\n    }\r\n\r\n    .highlight.djs-shape .djs-visual > :nth-child(1) {\r\n      fill: green !important;\r\n      stroke: green !important;\r\n      fill-opacity: 0.2 !important;\r\n    }\r\n    .highlight.djs-shape .djs-visual > :nth-child(2) {\r\n      fill: green !important;\r\n    }\r\n    .highlight.djs-shape .djs-visual > path {\r\n      fill: green !important;\r\n      fill-opacity: 0.2 !important;\r\n      stroke: green !important;\r\n    }\r\n    .highlight.djs-connection > .djs-visual > path {\r\n      stroke: green !important;\r\n    }\r\n    .highlight-todo.djs-connection > .djs-visual > path {\r\n      stroke: orange !important;\r\n      stroke-dasharray: 4px !important;\r\n      fill-opacity: 0.2 !important;\r\n    }\r\n    .highlight-todo.djs-shape .djs-visual > :nth-child(1) {\r\n      fill: orange !important;\r\n      stroke: orange !important;\r\n      stroke-dasharray: 4px !important;\r\n      fill-opacity: 0.2 !important;\r\n    }\r\n    .overlays-div {\r\n      font-size: 10px;\r\n      color: red;\r\n      width: 100px;\r\n      top: -20px !important;\r\n    }\r\n  }\r\n</style>\r\n"]}]}