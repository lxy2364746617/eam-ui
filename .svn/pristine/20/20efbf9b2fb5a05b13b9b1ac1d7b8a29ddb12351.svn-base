{"remainingRequest":"E:\\qrhpro\\cms-eam-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\qrhpro\\cms-eam-ui\\src\\views\\flowable\\task\\record\\flowview.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\qrhpro\\cms-eam-ui\\src\\views\\flowable\\task\\record\\flowview.vue","mtime":1693791860340},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693791616229},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1693791596985},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693791616229},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1693791844037}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBDdXN0b21WaWV3ZXIgYXMgQnBtblZpZXdlciB9IGZyb20gIkAvY29tcG9uZW50cy9jdXN0b21CcG1uIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiRmxvd1ZpZXciLA0KICBwcm9wczogew0KICAgIHhtbERhdGE6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIGRlZmF1bHQ6ICcnDQogICAgfSwNCiAgICB0YXNrTGlzdDogew0KICAgICAgdHlwZTogQXJyYXksDQogICAgICBkZWZhdWx0OiAoKSA9PiBbXQ0KICAgIH0NCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgYnBtblZpZXdlcjogbnVsbA0KICAgIH07DQogIH0sDQogIHdhdGNoOiB7DQogICAgeG1sRGF0YTogZnVuY3Rpb24odmFsKSB7DQogICAgICBpZiAodmFsKSB7DQogICAgICAgIHRoaXMuZ2V0SW1nKHZhbCkNCiAgICAgIH0NCiAgICB9DQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgLy8g55Sf5oiQ5a6e5L6LDQogICAgdGhpcy5icG1uVmlld2VyICYmIHRoaXMuYnBtblZpZXdlci5kZXN0cm95KCk7DQogICAgdGhpcy5icG1uVmlld2VyID0gbmV3IEJwbW5WaWV3ZXIoew0KICAgICAgY29udGFpbmVyOiB0aGlzLiRyZWZzLmZsb3dDYW52YXMsDQogICAgICBoZWlnaHQ6ICdjYWxjKDEwMHZoIC0gMjAwcHgpJywNCiAgICB9KTsNCiAgICAvLyB0aGlzLmdldEltZyh0aGlzLnhtbERhdGEpDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICAvLyDojrflj5bmtYHnqIvlm77niYcNCiAgICBhc3luYyBnZXRJbWcoeG1sVXJsKSB7DQogICAgICBjb25zdCBzZWxmID0gdGhpcw0KICAgICAgdHJ5IHsNCiAgICAgICAgYXdhaXQgc2VsZi5icG1uVmlld2VyLmltcG9ydFhNTCh4bWxVcmwpOw0KICAgICAgICBzZWxmLmZpdFZpZXdwb3J0KCkNCiAgICAgICAgaWYgKHNlbGYudGFza0xpc3QgIT09dW5kZWZpbmVkICYmIHNlbGYudGFza0xpc3QubGVuZ3RoID4gMCApIHsNCiAgICAgICAgICBzZWxmLmZpbGxDb2xvcigpDQogICAgICAgIH0NCiAgICAgIH0gY2F0Y2ggKGVycikgew0KICAgICAgICBjb25zb2xlLmVycm9yKGVyci5tZXNzYWdlLCBlcnIud2FybmluZ3MpDQogICAgICB9DQogICAgfSwNCiAgICAvLyDorr7nva7pq5jkuq7popzoibLnmoRjbGFzcw0KICAgIHNldE5vZGVDb2xvcihub2RlQ29kZXMsIGNvbG9yQ2xhc3MsIGNhbnZhcykgew0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBub2RlQ29kZXMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgY2FudmFzLmFkZE1hcmtlcihub2RlQ29kZXNbaV0sIGNvbG9yQ2xhc3MpOw0KICAgICAgfQ0KICAgIH0sDQogICAgLy8g6K6p5Zu+6IO96Ieq6YCC5bqU5bGP5bmVDQogICAgZml0Vmlld3BvcnQoKSB7DQogICAgICB0aGlzLnpvb20gPSB0aGlzLmJwbW5WaWV3ZXIuZ2V0KCdjYW52YXMnKS56b29tKCJmaXQtdmlld3BvcnQiLCAiYXV0byIpDQogICAgfSwNCiAgICAvLyDmlL7lpKfnvKnlsI8NCiAgICB6b29tVmlld3BvcnQoem9vbUluID0gdHJ1ZSkgew0KICAgICAgdGhpcy56b29tID0gdGhpcy5icG1uVmlld2VyLmdldCgnY2FudmFzJykuem9vbSgpDQogICAgICB0aGlzLnpvb20gKz0gKHpvb21JbiA/IDAuMSA6IC0wLjEpDQogICAgICBpZih0aGlzLnpvb20gPj0gMC4yKSB0aGlzLmJwbW5WaWV3ZXIuZ2V0KCdjYW52YXMnKS56b29tKHRoaXMuem9vbSkNCiAgICB9LA0KDQogICAgLy8g6K6+572u6auY5Lqu6aKc6Imy55qEDQogICAgZmlsbENvbG9yKCkgew0KICAgICAgY29uc3QgY2FudmFzID0gdGhpcy5icG1uVmlld2VyLmdldCgnY2FudmFzJykNCiAgICAgIHRoaXMuYnBtblZpZXdlci5nZXREZWZpbml0aW9ucygpLnJvb3RFbGVtZW50c1swXS5mbG93RWxlbWVudHMuZm9yRWFjaChuID0+IHsNCiAgICAgICAgY29uc3QgY29tcGxldGVUYXNrID0gdGhpcy50YXNrTGlzdC5maW5kKG0gPT4gbS5rZXkgPT09IG4uaWQpDQogICAgICAgIGNvbnN0IHRvZG9UYXNrID0gdGhpcy50YXNrTGlzdC5maW5kKG0gPT4gIW0uY29tcGxldGVkKQ0KICAgICAgICBjb25zdCBlbmRUYXNrID0gdGhpcy50YXNrTGlzdFt0aGlzLnRhc2tMaXN0Lmxlbmd0aCAtIDFdDQogICAgICAgIGlmIChuLiR0eXBlID09PSAnYnBtbjpVc2VyVGFzaycpIHsNCiAgICAgICAgICBpZiAoY29tcGxldGVUYXNrKSB7DQogICAgICAgICAgICBjYW52YXMuYWRkTWFya2VyKG4uaWQsIGNvbXBsZXRlVGFzay5jb21wbGV0ZWQgPyAnaGlnaGxpZ2h0JyA6ICdoaWdobGlnaHQtdG9kbycpDQogICAgICAgICAgICBuLm91dGdvaW5nPy5mb3JFYWNoKG5uID0+IHsNCiAgICAgICAgICAgICAgY29uc3QgdGFyZ2V0VGFzayA9IHRoaXMudGFza0xpc3QuZmluZChtID0+IG0ua2V5ID09PSBubi50YXJnZXRSZWYuaWQpDQogICAgICAgICAgICAgIGlmICh0YXJnZXRUYXNrKSB7DQogICAgICAgICAgICAgICAgaWYgKHRvZG9UYXNrICYmIGNvbXBsZXRlVGFzay5rZXkgPT09IHRvZG9UYXNrLmtleSAmJiAhdG9kb1Rhc2suY29tcGxldGVkKXsNCiAgICAgICAgICAgICAgICAgIGNhbnZhcy5hZGRNYXJrZXIobm4uaWQsIHRvZG9UYXNrLmNvbXBsZXRlZCA/ICdoaWdobGlnaHQnIDogJ2hpZ2hsaWdodC10b2RvJykNCiAgICAgICAgICAgICAgICAgIGNhbnZhcy5hZGRNYXJrZXIobm4udGFyZ2V0UmVmLmlkLCB0b2RvVGFzay5jb21wbGV0ZWQgPyAnaGlnaGxpZ2h0JyA6ICdoaWdobGlnaHQtdG9kbycpDQogICAgICAgICAgICAgICAgfWVsc2Ugew0KICAgICAgICAgICAgICAgICAgY2FudmFzLmFkZE1hcmtlcihubi5pZCwgdGFyZ2V0VGFzay5jb21wbGV0ZWQgPyAnaGlnaGxpZ2h0JyA6ICdoaWdobGlnaHQtdG9kbycpDQogICAgICAgICAgICAgICAgICBjYW52YXMuYWRkTWFya2VyKG5uLnRhcmdldFJlZi5pZCwgdGFyZ2V0VGFzay5jb21wbGV0ZWQgPyAnaGlnaGxpZ2h0JyA6ICdoaWdobGlnaHQtdG9kbycpDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICAvLyDmjpLku5bnvZHlhbMNCiAgICAgICAgZWxzZSBpZiAobi4kdHlwZSA9PT0gJ2JwbW46RXhjbHVzaXZlR2F0ZXdheScpIHsNCiAgICAgICAgICBpZiAoY29tcGxldGVUYXNrKSB7DQogICAgICAgICAgICBjYW52YXMuYWRkTWFya2VyKG4uaWQsIGNvbXBsZXRlVGFzay5jb21wbGV0ZWQgPyAnaGlnaGxpZ2h0JyA6ICdoaWdobGlnaHQtdG9kbycpDQogICAgICAgICAgICBuLm91dGdvaW5nPy5mb3JFYWNoKG5uID0+IHsNCiAgICAgICAgICAgICAgY29uc3QgdGFyZ2V0VGFzayA9IHRoaXMudGFza0xpc3QuZmluZChtID0+IG0ua2V5ID09PSBubi50YXJnZXRSZWYuaWQpDQogICAgICAgICAgICAgIGlmICh0YXJnZXRUYXNrKSB7DQoNCiAgICAgICAgICAgICAgICBjYW52YXMuYWRkTWFya2VyKG5uLmlkLCB0YXJnZXRUYXNrLmNvbXBsZXRlZCA/ICdoaWdobGlnaHQnIDogJ2hpZ2hsaWdodC10b2RvJykNCiAgICAgICAgICAgICAgICBjYW52YXMuYWRkTWFya2VyKG5uLnRhcmdldFJlZi5pZCwgdGFyZ2V0VGFzay5jb21wbGV0ZWQgPyAnaGlnaGxpZ2h0JyA6ICdoaWdobGlnaHQtdG9kbycpDQogICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgfSkNCiAgICAgICAgICB9DQoNCiAgICAgICAgfQ0KICAgICAgICAvLyDlubbooYznvZHlhbMNCiAgICAgICAgZWxzZSBpZiAobi4kdHlwZSA9PT0gJ2JwbW46UGFyYWxsZWxHYXRld2F5Jykgew0KICAgICAgICAgIGlmIChjb21wbGV0ZVRhc2spIHsNCiAgICAgICAgICAgIGNhbnZhcy5hZGRNYXJrZXIobi5pZCwgY29tcGxldGVUYXNrLmNvbXBsZXRlZCA/ICdoaWdobGlnaHQnIDogJ2hpZ2hsaWdodC10b2RvJykNCiAgICAgICAgICAgIG4ub3V0Z29pbmc/LmZvckVhY2gobm4gPT4gew0KICAgICAgICAgICAgICBjb25zdCB0YXJnZXRUYXNrID0gdGhpcy50YXNrTGlzdC5maW5kKG0gPT4gbS5rZXkgPT09IG5uLnRhcmdldFJlZi5pZCkNCiAgICAgICAgICAgICAgaWYgKHRhcmdldFRhc2spIHsNCiAgICAgICAgICAgICAgICBjYW52YXMuYWRkTWFya2VyKG5uLmlkLCB0YXJnZXRUYXNrLmNvbXBsZXRlZCA/ICdoaWdobGlnaHQnIDogJ2hpZ2hsaWdodC10b2RvJykNCiAgICAgICAgICAgICAgICBjYW52YXMuYWRkTWFya2VyKG5uLnRhcmdldFJlZi5pZCwgdGFyZ2V0VGFzay5jb21wbGV0ZWQgPyAnaGlnaGxpZ2h0JyA6ICdoaWdobGlnaHQtdG9kbycpDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGVsc2UgaWYgKG4uJHR5cGUgPT09ICdicG1uOlN0YXJ0RXZlbnQnKSB7DQogICAgICAgICAgbi5vdXRnb2luZy5mb3JFYWNoKG5uID0+IHsNCiAgICAgICAgICAgIGNvbnN0IGNvbXBsZXRlVGFzayA9IHRoaXMudGFza0xpc3QuZmluZChtID0+IG0ua2V5ID09PSBubi50YXJnZXRSZWYuaWQpDQogICAgICAgICAgICBpZiAoY29tcGxldGVUYXNrKSB7DQogICAgICAgICAgICAgIGNhbnZhcy5hZGRNYXJrZXIobm4uaWQsICdoaWdobGlnaHQnKQ0KICAgICAgICAgICAgICBjYW52YXMuYWRkTWFya2VyKG4uaWQsICdoaWdobGlnaHQnKQ0KICAgICAgICAgICAgICByZXR1cm4NCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9KQ0KICAgICAgICB9DQogICAgICAgIGVsc2UgaWYgKG4uJHR5cGUgPT09ICdicG1uOkVuZEV2ZW50Jykgew0KICAgICAgICAgIGlmIChlbmRUYXNrLmtleSA9PT0gbi5pZCAmJiBlbmRUYXNrLmNvbXBsZXRlZCkgew0KICAgICAgICAgICAgY2FudmFzLmFkZE1hcmtlcihuLmlkLCAnaGlnaGxpZ2h0JykNCiAgICAgICAgICAgIHJldHVybg0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICB9LA0KICB9DQp9Ow0K"},{"version":3,"sources":["flowview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkfile":"flowview.vue","sourceRoot":"src/views/flowable/task/record","sourcesContent":["<template>\r\n  <div class=\"containers main-box\">\r\n    <el-button type=\"success\"\r\n               size=\"small\"\r\n               icon=\"el-icon-zoom-in\"\r\n               @click=\"zoomViewport(true)\">放大</el-button>\r\n    <el-button type=\"warning\"\r\n               size=\"small\"\r\n               icon=\"el-icon-zoom-out\"\r\n               @click=\"zoomViewport(false)\">缩小</el-button>\r\n    <el-button type=\"info\"\r\n               size=\"small\"\r\n               icon=\"el-icon-rank\"\r\n               @click=\"fitViewport\">适中</el-button>\r\n    <div class=\"canvas\" ref=\"flowCanvas\"></div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { CustomViewer as BpmnViewer } from \"@/components/customBpmn\";\r\n\r\nexport default {\r\n  name: \"FlowView\",\r\n  props: {\r\n    xmlData: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    taskList: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      bpmnViewer: null\r\n    };\r\n  },\r\n  watch: {\r\n    xmlData: function(val) {\r\n      if (val) {\r\n        this.getImg(val)\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // 生成实例\r\n    this.bpmnViewer && this.bpmnViewer.destroy();\r\n    this.bpmnViewer = new BpmnViewer({\r\n      container: this.$refs.flowCanvas,\r\n      height: 'calc(100vh - 200px)',\r\n    });\r\n    // this.getImg(this.xmlData)\r\n  },\r\n  methods: {\r\n    // 获取流程图片\r\n    async getImg(xmlUrl) {\r\n      const self = this\r\n      try {\r\n        await self.bpmnViewer.importXML(xmlUrl);\r\n        self.fitViewport()\r\n        if (self.taskList !==undefined && self.taskList.length > 0 ) {\r\n          self.fillColor()\r\n        }\r\n      } catch (err) {\r\n        console.error(err.message, err.warnings)\r\n      }\r\n    },\r\n    // 设置高亮颜色的class\r\n    setNodeColor(nodeCodes, colorClass, canvas) {\r\n      for (let i = 0; i < nodeCodes.length; i++) {\r\n        canvas.addMarker(nodeCodes[i], colorClass);\r\n      }\r\n    },\r\n    // 让图能自适应屏幕\r\n    fitViewport() {\r\n      this.zoom = this.bpmnViewer.get('canvas').zoom(\"fit-viewport\", \"auto\")\r\n    },\r\n    // 放大缩小\r\n    zoomViewport(zoomIn = true) {\r\n      this.zoom = this.bpmnViewer.get('canvas').zoom()\r\n      this.zoom += (zoomIn ? 0.1 : -0.1)\r\n      if(this.zoom >= 0.2) this.bpmnViewer.get('canvas').zoom(this.zoom)\r\n    },\r\n\r\n    // 设置高亮颜色的\r\n    fillColor() {\r\n      const canvas = this.bpmnViewer.get('canvas')\r\n      this.bpmnViewer.getDefinitions().rootElements[0].flowElements.forEach(n => {\r\n        const completeTask = this.taskList.find(m => m.key === n.id)\r\n        const todoTask = this.taskList.find(m => !m.completed)\r\n        const endTask = this.taskList[this.taskList.length - 1]\r\n        if (n.$type === 'bpmn:UserTask') {\r\n          if (completeTask) {\r\n            canvas.addMarker(n.id, completeTask.completed ? 'highlight' : 'highlight-todo')\r\n            n.outgoing?.forEach(nn => {\r\n              const targetTask = this.taskList.find(m => m.key === nn.targetRef.id)\r\n              if (targetTask) {\r\n                if (todoTask && completeTask.key === todoTask.key && !todoTask.completed){\r\n                  canvas.addMarker(nn.id, todoTask.completed ? 'highlight' : 'highlight-todo')\r\n                  canvas.addMarker(nn.targetRef.id, todoTask.completed ? 'highlight' : 'highlight-todo')\r\n                }else {\r\n                  canvas.addMarker(nn.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n                  canvas.addMarker(nn.targetRef.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n                }\r\n              }\r\n            })\r\n          }\r\n        }\r\n        // 排他网关\r\n        else if (n.$type === 'bpmn:ExclusiveGateway') {\r\n          if (completeTask) {\r\n            canvas.addMarker(n.id, completeTask.completed ? 'highlight' : 'highlight-todo')\r\n            n.outgoing?.forEach(nn => {\r\n              const targetTask = this.taskList.find(m => m.key === nn.targetRef.id)\r\n              if (targetTask) {\r\n\r\n                canvas.addMarker(nn.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n                canvas.addMarker(nn.targetRef.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n              }\r\n\r\n            })\r\n          }\r\n\r\n        }\r\n        // 并行网关\r\n        else if (n.$type === 'bpmn:ParallelGateway') {\r\n          if (completeTask) {\r\n            canvas.addMarker(n.id, completeTask.completed ? 'highlight' : 'highlight-todo')\r\n            n.outgoing?.forEach(nn => {\r\n              const targetTask = this.taskList.find(m => m.key === nn.targetRef.id)\r\n              if (targetTask) {\r\n                canvas.addMarker(nn.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n                canvas.addMarker(nn.targetRef.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n              }\r\n            })\r\n          }\r\n        }\r\n        else if (n.$type === 'bpmn:StartEvent') {\r\n          n.outgoing.forEach(nn => {\r\n            const completeTask = this.taskList.find(m => m.key === nn.targetRef.id)\r\n            if (completeTask) {\r\n              canvas.addMarker(nn.id, 'highlight')\r\n              canvas.addMarker(n.id, 'highlight')\r\n              return\r\n            }\r\n          })\r\n        }\r\n        else if (n.$type === 'bpmn:EndEvent') {\r\n          if (endTask.key === n.id && endTask.completed) {\r\n            canvas.addMarker(n.id, 'highlight')\r\n            return\r\n          }\r\n        }\r\n      })\r\n    },\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n  .bjs-powered-by {\r\n    display: none;\r\n  }\r\n  .view-mode {\r\n    .el-header, .el-aside, .djs-palette, .bjs-powered-by {\r\n      display: none;\r\n    }\r\n    .el-loading-mask {\r\n      background-color: initial;\r\n    }\r\n    .el-loading-spinner {\r\n      display: none;\r\n    }\r\n  }\r\n  .containers {\r\n    // background-color: #ffffff;\r\n    width: 100%;\r\n    height: 100%;\r\n    .canvas {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n    .panel {\r\n      position: absolute;\r\n      right: 0;\r\n      top: 50px;\r\n      width: 300px;\r\n    }\r\n    .load {\r\n      margin-right: 10px;\r\n    }\r\n    .el-form-item__label{\r\n      font-size: 13px;\r\n    }\r\n\r\n    .djs-palette{\r\n      left: 0px!important;\r\n      top: 0px;\r\n      border-top: none;\r\n    }\r\n\r\n    .djs-container svg {\r\n      min-height: 650px;\r\n    }\r\n\r\n    .highlight.djs-shape .djs-visual > :nth-child(1) {\r\n      fill: green !important;\r\n      stroke: green !important;\r\n      fill-opacity: 0.2 !important;\r\n    }\r\n    .highlight.djs-shape .djs-visual > :nth-child(2) {\r\n      fill: green !important;\r\n    }\r\n    .highlight.djs-shape .djs-visual > path {\r\n      fill: green !important;\r\n      fill-opacity: 0.2 !important;\r\n      stroke: green !important;\r\n    }\r\n    .highlight.djs-connection > .djs-visual > path {\r\n      stroke: green !important;\r\n    }\r\n    .highlight-todo.djs-connection > .djs-visual > path {\r\n      stroke: orange !important;\r\n      stroke-dasharray: 4px !important;\r\n      fill-opacity: 0.2 !important;\r\n    }\r\n    .highlight-todo.djs-shape .djs-visual > :nth-child(1) {\r\n      fill: orange !important;\r\n      stroke: orange !important;\r\n      stroke-dasharray: 4px !important;\r\n      fill-opacity: 0.2 !important;\r\n    }\r\n    .overlays-div {\r\n      font-size: 10px;\r\n      color: red;\r\n      width: 100px;\r\n      top: -20px !important;\r\n    }\r\n  }\r\n</style>\r\n"]}]}