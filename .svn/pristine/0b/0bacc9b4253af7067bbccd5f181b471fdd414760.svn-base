{"remainingRequest":"E:\\qrhpro\\cms-eam-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\qrhpro\\cms-eam-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\qrhpro\\cms-eam-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\qrhpro\\cms-eam-ui\\src\\components\\Process\\components\\nodePanel\\property\\taskListener.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\qrhpro\\cms-eam-ui\\src\\components\\Process\\components\\nodePanel\\property\\taskListener.vue","mtime":1693791859058},{"path":"E:\\qrhpro\\cms-eam-ui\\babel.config.js","mtime":1693791556521},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693791616229},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1693791596985},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693791616229},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1693791844037}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_mixinPanel","_interopRequireDefault","require","_listenerParam","_listenerList","components","listenerParam","ListenerList","mixins","mixinPanel","data","dialogVisible","listenerDialogVisible","showParamDialog","nowIndex","formData","taskListener","computed","formConfig","inline","item","xType","tabs","label","name","column","width","rules","required","message","trigger","dic","value","tooltip","mounted","_this","_this$element$busines","_this$element$busines2","$nextTick","addButton","element","businessObject","extensionElements","values","filter","$type","map","_item$fields$map","_item$fields","type","event","className","params","fields","field","fieldType","methods","_this2","button","document","createElement","innerText","setAttribute","addEventListener","div","getElementById","table","getElementsByClassName","insertBefore","configParam","index","nowObj","finishConfigParam","param","cache","$set","updateElement","_this$formData$taskLi","_this3","length","_extensionElements$va","_extensionElements$va2","get","modeler","create","forEach","fieldElement","push","updateProperties","_extensionElements$va3","_extensionElements$va4","closeDialog","_this4","$refs","xForm","validate","then","catch","e","console","error","addListener","concat","exports","default","_default"],"sources":["src/components/Process/components/nodePanel/property/taskListener.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog\r\n      title=\"任务监听器\"\r\n      :visible.sync=\"dialogVisible\"\r\n      width=\"900px\"\r\n      :close-on-click-modal=\"false\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n      @closed=\"$emit('close')\"\r\n    >\r\n      <x-form ref=\"xForm\" v-model=\"formData\" :config=\"formConfig\">\r\n        <template #params=\"scope\">\r\n          <el-badge :value=\"scope.row.params ? scope.row.params.length : 0\" type=\"primary\">\r\n            <el-button size=\"small\" @click=\"configParam(scope.$index)\">配置</el-button>\r\n          </el-badge>\r\n        </template>\r\n      </x-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" size=\"medium\" @click=\"closeDialog\">确 定</el-button>\r\n      </span>\r\n      <listener-list\r\n        :visible=\"listenerDialogVisible\"\r\n        @close=\"() => this.listenerDialogVisible = false\"\r\n        @submit=\"addListener\"\r\n      />\r\n    </el-dialog>\r\n    <listenerParam v-if=\"showParamDialog\" :value=\"formData.taskListener[nowIndex].params\" @close=\"finishConfigParam\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mixinPanel from '../../../common/mixinPanel'\r\nimport listenerParam from './listenerParam'\r\nimport ListenerList from '@/components/Process/components/nodePanel/property/listenerList'\r\nexport default {\r\n  components: { listenerParam, ListenerList },\r\n  mixins: [mixinPanel],\r\n  data() {\r\n    return {\r\n      dialogVisible: true,\r\n      listenerDialogVisible: false,\r\n      showParamDialog: false,\r\n      nowIndex: null,\r\n      formData: {\r\n        taskListener: []\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    formConfig() {\r\n      //   const _this = this\r\n      return {\r\n        inline: false,\r\n        item: [\r\n          {\r\n            xType: 'tabs',\r\n            tabs: [\r\n              {\r\n                label: '任务监听器',\r\n                name: 'taskListener',\r\n                column: [\r\n                  {\r\n                    label: '事件',\r\n                    name: 'event',\r\n                    width: 180,\r\n                    rules: [{ required: true, message: '请选择', trigger: ['blur', 'change'] }],\r\n                    xType: 'select',\r\n                    dic: [\r\n                      { label: 'create', value: 'create' },\r\n                      { label: 'assignment', value: 'assignment' },\r\n                      { label: 'complete', value: 'complete' },\r\n                      { label: 'delete', value: 'delete' }\r\n                    ],\r\n                    tooltip: `create（创建）：当任务已经创建，并且所有任务参数都已经设置时触发。<br />\r\n                              assignment（指派）：当任务已经指派给某人时触发。请注意：当流程执行到达用户任务时，在触发create事件之前，会首先触发assignment事件。<br />\r\n                              complete（完成）：当任务已经完成，从运行时数据中删除前触发。<br />\r\n                              delete（删除）：在任务即将被删除前触发。请注意任务由completeTask正常完成时也会触发。\r\n                    `\r\n                  },\r\n                  {\r\n                    label: '类型',\r\n                    name: 'type',\r\n                    width: 180,\r\n                    rules: [{ required: true, message: '请选择', trigger: ['blur', 'change'] }],\r\n                    xType: 'select',\r\n                    dic: [\r\n                      { label: '类', value: 'class' },\r\n                      { label: '表达式', value: 'expression' },\r\n                      { label: '委托表达式', value: 'delegateExpression' }\r\n                    ],\r\n                    tooltip: `类：示例 com.company.MyCustomListener，自定义类必须实现 org.flowable.engine.delegate.TaskListener 接口 <br />\r\n                              表达式：示例 \\${myObject.callMethod(task, task.eventName)} <br />\r\n                              委托表达式：示例 \\${myListenerSpringBean} ，该 springBean 需要实现 org.flowable.engine.delegate.TaskListener 接口\r\n                    `\r\n                  },\r\n                  {\r\n                    label: '值',\r\n                    name: 'className',\r\n                    xType: 'input',\r\n                    rules: [{ required: true, message: '请输入', trigger: ['blur', 'change'] }]\r\n                  },\r\n                  // {\r\n                  //   xType: 'slot',\r\n                  //   label: '参数',\r\n                  //   width: 120,\r\n                  //   slot: true,\r\n                  //   name: 'params'\r\n                  // }\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => this.addButton())\r\n    this.formData.taskListener = this.element.businessObject.extensionElements?.values\r\n      .filter(item => item.$type === 'flowable:TaskListener')\r\n      .map(item => {\r\n        let type\r\n        if ('class' in item) type = 'class'\r\n        if ('expression' in item) type = 'expression'\r\n        if ('delegateExpression' in item) type = 'delegateExpression'\r\n        return {\r\n          event: item.event,\r\n          type: type,\r\n          className: item[type],\r\n          params: item.fields?.map(field => {\r\n            let fieldType\r\n            if ('stringValue' in field) fieldType = 'stringValue'\r\n            if ('expression' in field) fieldType = 'expression'\r\n            return {\r\n              name: field.name,\r\n              type: fieldType,\r\n              value: field[fieldType]\r\n            }\r\n          }) ?? []\r\n        }\r\n      }) ?? []\r\n  },\r\n  methods: {\r\n    addButton() {\r\n      const button = document.createElement('button')\r\n      button.innerText = '内置监听器'\r\n      button.setAttribute('type', 'button')\r\n      button.setAttribute('class', 'el-button el-button--primary el-button--mini')\r\n      button.addEventListener('click', () => this.listenerDialogVisible = true)\r\n      const div = document.getElementById('pane-taskListener')\r\n      const table = div.getElementsByClassName('el-table')[0]\r\n      div.insertBefore(button, table)\r\n    },\r\n    configParam(index) {\r\n      this.nowIndex = index\r\n      const nowObj = this.formData.taskListener[index]\r\n      if (!nowObj.params) {\r\n        nowObj.params = []\r\n      }\r\n      this.showParamDialog = true\r\n    },\r\n    finishConfigParam(param) {\r\n      this.showParamDialog = false\r\n      // hack 数量不更新问题\r\n      const cache = this.formData.taskListener[this.nowIndex]\r\n      cache.params = param\r\n      this.$set(this.formData.taskListener[this.nowIndex], this.nowIndex, cache)\r\n      this.nowIndex = null\r\n    },\r\n    updateElement() {\r\n      if (this.formData.taskListener?.length) {\r\n        let extensionElements = this.element.businessObject.get('extensionElements')\r\n        if (!extensionElements) {\r\n          extensionElements = this.modeler.get('moddle').create('bpmn:ExtensionElements')\r\n        }\r\n        // 清除旧值\r\n        extensionElements.values = extensionElements.values?.filter(item => item.$type !== 'flowable:TaskListener') ?? []\r\n        this.formData.taskListener.forEach(item => {\r\n          const taskListener = this.modeler.get('moddle').create('flowable:TaskListener')\r\n          taskListener['event'] = item.event\r\n          taskListener[item.type] = item.className\r\n          if (item.params && item.params.length) {\r\n            item.params.forEach(field => {\r\n              const fieldElement = this.modeler.get('moddle').create('flowable:Field')\r\n              fieldElement['name'] = field.name\r\n              fieldElement[field.type] = field.value\r\n              // 注意：flowable.json 中定义的string和expression类为小写，不然会和原生的String类冲突，此处为hack\r\n              // const valueElement = this.modeler.get('moddle').create(`flowable:${field.type}`, { body: field.value })\r\n              // fieldElement[field.type] = valueElement\r\n              taskListener.get('fields').push(fieldElement)\r\n            })\r\n          }\r\n          extensionElements.get('values').push(taskListener)\r\n        })\r\n        this.updateProperties({ extensionElements: extensionElements })\r\n      } else {\r\n        const extensionElements = this.element.businessObject[`extensionElements`]\r\n        if (extensionElements) {\r\n          extensionElements.values = extensionElements.values?.filter(item => item.$type !== 'flowable:TaskListener') ?? []\r\n        }\r\n      }\r\n    },\r\n    closeDialog() {\r\n      this.$refs.xForm.validate().then(() => {\r\n        this.updateElement()\r\n        this.dialogVisible = false\r\n      }).catch(e => console.error(e))\r\n    },\r\n    addListener(data) {\r\n      this.formData.taskListener = this.formData.taskListener.concat(data)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.flow-containers  .el-badge__content.is-fixed {\r\n  top: 18px;\r\n}\r\n</style>\r\n"],"mappings":"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"}]}