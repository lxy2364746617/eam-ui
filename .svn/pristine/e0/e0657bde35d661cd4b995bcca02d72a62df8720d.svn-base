{"remainingRequest":"E:\\qrhpro\\cms-eam-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\qrhpro\\cms-eam-ui\\src\\views\\flowable\\task\\todo\\detail\\flowview.vue?vue&type=style&index=0&id=63fccda5&lang=scss&","dependencies":[{"path":"E:\\qrhpro\\cms-eam-ui\\src\\views\\flowable\\task\\todo\\detail\\flowview.vue","mtime":1693791860360},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693791655299},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693791844037},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1693791775035},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693791815534},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693791616229},{"path":"E:\\qrhpro\\cms-eam-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1693791844037}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYmpzLXBvd2VyZWQtYnkgewogIGRpc3BsYXk6IG5vbmU7Cn0KLnZpZXctbW9kZSB7CiAgLmVsLWhlYWRlciwgLmVsLWFzaWRlLCAuZGpzLXBhbGV0dGUsIC5ianMtcG93ZXJlZC1ieSB7CiAgICBkaXNwbGF5OiBub25lOwogIH0KICAuZWwtbG9hZGluZy1tYXNrIHsKICAgIGJhY2tncm91bmQtY29sb3I6IGluaXRpYWw7CiAgfQogIC5lbC1sb2FkaW5nLXNwaW5uZXIgewogICAgZGlzcGxheTogbm9uZTsKICB9Cn0KLmNvbnRhaW5lcnMgewogIC8vIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIC5jYW52YXMgewogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDEwMCU7CiAgfQogIC5wYW5lbCB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICByaWdodDogMDsKICAgIHRvcDogNTBweDsKICAgIHdpZHRoOiAzMDBweDsKICB9CiAgLmxvYWQgewogICAgbWFyZ2luLXJpZ2h0OiAxMHB4OwogIH0KICAuZWwtZm9ybS1pdGVtX19sYWJlbHsKICAgIGZvbnQtc2l6ZTogMTNweDsKICB9CgogIC5kanMtcGFsZXR0ZXsKICAgIGxlZnQ6IDBweCFpbXBvcnRhbnQ7CiAgICB0b3A6IDBweDsKICAgIGJvcmRlci10b3A6IG5vbmU7CiAgfQoKICAuZGpzLWNvbnRhaW5lciBzdmcgewogICAgbWluLWhlaWdodDogNjUwcHg7CiAgfQoKICAuaGlnaGxpZ2h0LmRqcy1zaGFwZSAuZGpzLXZpc3VhbCA+IDpudGgtY2hpbGQoMSkgewogICAgZmlsbDogZ3JlZW4gIWltcG9ydGFudDsKICAgIHN0cm9rZTogZ3JlZW4gIWltcG9ydGFudDsKICAgIGZpbGwtb3BhY2l0eTogMC4yICFpbXBvcnRhbnQ7CiAgfQogIC5oaWdobGlnaHQuZGpzLXNoYXBlIC5kanMtdmlzdWFsID4gOm50aC1jaGlsZCgyKSB7CiAgICBmaWxsOiBncmVlbiAhaW1wb3J0YW50OwogIH0KICAuaGlnaGxpZ2h0LmRqcy1zaGFwZSAuZGpzLXZpc3VhbCA+IHBhdGggewogICAgZmlsbDogZ3JlZW4gIWltcG9ydGFudDsKICAgIGZpbGwtb3BhY2l0eTogMC4yICFpbXBvcnRhbnQ7CiAgICBzdHJva2U6IGdyZWVuICFpbXBvcnRhbnQ7CiAgfQogIC5oaWdobGlnaHQuZGpzLWNvbm5lY3Rpb24gPiAuZGpzLXZpc3VhbCA+IHBhdGggewogICAgc3Ryb2tlOiBncmVlbiAhaW1wb3J0YW50OwogIH0KICAuaGlnaGxpZ2h0LXRvZG8uZGpzLWNvbm5lY3Rpb24gPiAuZGpzLXZpc3VhbCA+IHBhdGggewogICAgc3Ryb2tlOiBvcmFuZ2UgIWltcG9ydGFudDsKICAgIHN0cm9rZS1kYXNoYXJyYXk6IDRweCAhaW1wb3J0YW50OwogICAgZmlsbC1vcGFjaXR5OiAwLjIgIWltcG9ydGFudDsKICB9CiAgLmhpZ2hsaWdodC10b2RvLmRqcy1zaGFwZSAuZGpzLXZpc3VhbCA+IDpudGgtY2hpbGQoMSkgewogICAgZmlsbDogb3JhbmdlICFpbXBvcnRhbnQ7CiAgICBzdHJva2U6IG9yYW5nZSAhaW1wb3J0YW50OwogICAgc3Ryb2tlLWRhc2hhcnJheTogNHB4ICFpbXBvcnRhbnQ7CiAgICBmaWxsLW9wYWNpdHk6IDAuMiAhaW1wb3J0YW50OwogIH0KICAub3ZlcmxheXMtZGl2IHsKICAgIGZvbnQtc2l6ZTogMTBweDsKICAgIGNvbG9yOiByZWQ7CiAgICB3aWR0aDogMTAwcHg7CiAgICB0b3A6IC0yMHB4ICFpbXBvcnRhbnQ7CiAgfQp9Cg=="},{"version":3,"sources":["flowview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"flowview.vue","sourceRoot":"src/views/flowable/task/myProcess/detail","sourcesContent":["<template>\r\n  <div class=\"containers main-box\">\r\n    <el-button type=\"success\"\r\n               size=\"small\"\r\n               icon=\"el-icon-zoom-in\"\r\n               @click=\"zoomViewport(true)\">放大</el-button>\r\n    <el-button type=\"warning\"\r\n               size=\"small\"\r\n               icon=\"el-icon-zoom-out\"\r\n               @click=\"zoomViewport(false)\">缩小</el-button>\r\n    <el-button type=\"info\"\r\n               size=\"small\"\r\n               icon=\"el-icon-rank\"\r\n               @click=\"fitViewport\">适中</el-button>\r\n    <div class=\"canvas\" ref=\"flowCanvas\"></div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { CustomViewer as BpmnViewer } from \"@/components/customBpmn\";\r\n\r\nexport default {\r\n  name: \"FlowView\",\r\n  props: {\r\n    flowData: {\r\n      type: Object,\r\n      default: () => {}\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      bpmnViewer: null\r\n    };\r\n  },\r\n  watch: {\r\n    flowData: {\r\n      handler(newVal) {\r\n        if (Object.keys(newVal).length > 0) {\r\n          // 生成实例\r\n          this.bpmnViewer && this.bpmnViewer.destroy();\r\n          this.bpmnViewer = new BpmnViewer({\r\n            container: this.$refs.flowCanvas,\r\n            height: 'calc(100vh - 200px)',\r\n          });\r\n          this.loadFlowCanvas(newVal);\r\n        }\r\n      },\r\n      immediate: true, // 立即生效\r\n      deep: true  //监听对象或数组的时候，要用到深度监听\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n    // 加载流程\r\n    async loadFlowCanvas(flowData) {\r\n      const self = this\r\n      try {\r\n        await self.bpmnViewer.importXML(flowData.xmlData);\r\n        self.fitViewport()\r\n        if (flowData.nodeData !==undefined && flowData.nodeData.length > 0 ) {\r\n          self.fillColor(flowData.nodeData)\r\n        }\r\n      } catch (err) {\r\n        console.error(err.message, err.warnings)\r\n      }\r\n    },\r\n    // 设置高亮颜色的class\r\n    setNodeColor(nodeCodes, colorClass, canvas) {\r\n      for (let i = 0; i < nodeCodes.length; i++) {\r\n        canvas.addMarker(nodeCodes[i], colorClass);\r\n      }\r\n    },\r\n    // 让图能自适应屏幕\r\n    fitViewport() {\r\n      this.zoom = this.bpmnViewer.get('canvas').zoom(\"fit-viewport\", \"auto\")\r\n    },\r\n    // 放大缩小\r\n    zoomViewport(zoomIn = true) {\r\n      this.zoom = this.bpmnViewer.get('canvas').zoom()\r\n      this.zoom += (zoomIn ? 0.1 : -0.1)\r\n      if(this.zoom >= 0.2) this.bpmnViewer.get('canvas').zoom(this.zoom)\r\n    },\r\n\r\n    // 设置高亮颜色的\r\n    fillColor(nodeData) {\r\n      const canvas = this.bpmnViewer.get('canvas')\r\n      this.bpmnViewer.getDefinitions().rootElements[0].flowElements.forEach(n => {\r\n        const completeTask = nodeData.find(m => m.key === n.id)\r\n        const todoTask = nodeData.find(m => !m.completed)\r\n        const endTask = nodeData[nodeData.length - 1]\r\n        if (n.$type === 'bpmn:UserTask') {\r\n          if (completeTask) {\r\n            canvas.addMarker(n.id, completeTask.completed ? 'highlight' : 'highlight-todo')\r\n            n.outgoing?.forEach(nn => {\r\n              const targetTask = nodeData.find(m => m.key === nn.targetRef.id)\r\n              if (targetTask) {\r\n                if (todoTask && completeTask.key === todoTask.key && !todoTask.completed){\r\n                  canvas.addMarker(nn.id, todoTask.completed ? 'highlight' : 'highlight-todo')\r\n                  canvas.addMarker(nn.targetRef.id, todoTask.completed ? 'highlight' : 'highlight-todo')\r\n                }else {\r\n                  canvas.addMarker(nn.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n                  canvas.addMarker(nn.targetRef.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n                }\r\n              }\r\n            })\r\n          }\r\n        }\r\n        // 排他网关\r\n        else if (n.$type === 'bpmn:ExclusiveGateway') {\r\n          if (completeTask) {\r\n            canvas.addMarker(n.id, completeTask.completed ? 'highlight' : 'highlight-todo')\r\n            n.outgoing?.forEach(nn => {\r\n              const targetTask = nodeData.find(m => m.key === nn.targetRef.id)\r\n              if (targetTask) {\r\n\r\n                canvas.addMarker(nn.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n                canvas.addMarker(nn.targetRef.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n              }\r\n\r\n            })\r\n          }\r\n\r\n        }\r\n        // 并行网关\r\n        else if (n.$type === 'bpmn:ParallelGateway') {\r\n          if (completeTask) {\r\n            canvas.addMarker(n.id, completeTask.completed ? 'highlight' : 'highlight-todo')\r\n            n.outgoing?.forEach(nn => {\r\n              const targetTask = nodeData.find(m => m.key === nn.targetRef.id)\r\n              if (targetTask) {\r\n                canvas.addMarker(nn.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n                canvas.addMarker(nn.targetRef.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n              }\r\n            })\r\n          }\r\n        }\r\n        else if (n.$type === 'bpmn:StartEvent') {\r\n          n.outgoing.forEach(nn => {\r\n            const completeTask = nodeData.find(m => m.key === nn.targetRef.id)\r\n            if (completeTask) {\r\n              canvas.addMarker(nn.id, 'highlight')\r\n              canvas.addMarker(n.id, 'highlight')\r\n              return\r\n            }\r\n          })\r\n        }\r\n        else if (n.$type === 'bpmn:EndEvent') {\r\n          if (endTask.key === n.id && endTask.completed) {\r\n            canvas.addMarker(n.id, 'highlight')\r\n            return\r\n          }\r\n        }\r\n      })\r\n    },\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n  .bjs-powered-by {\r\n    display: none;\r\n  }\r\n  .view-mode {\r\n    .el-header, .el-aside, .djs-palette, .bjs-powered-by {\r\n      display: none;\r\n    }\r\n    .el-loading-mask {\r\n      background-color: initial;\r\n    }\r\n    .el-loading-spinner {\r\n      display: none;\r\n    }\r\n  }\r\n  .containers {\r\n    // background-color: #ffffff;\r\n    width: 100%;\r\n    height: 100%;\r\n    .canvas {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n    .panel {\r\n      position: absolute;\r\n      right: 0;\r\n      top: 50px;\r\n      width: 300px;\r\n    }\r\n    .load {\r\n      margin-right: 10px;\r\n    }\r\n    .el-form-item__label{\r\n      font-size: 13px;\r\n    }\r\n\r\n    .djs-palette{\r\n      left: 0px!important;\r\n      top: 0px;\r\n      border-top: none;\r\n    }\r\n\r\n    .djs-container svg {\r\n      min-height: 650px;\r\n    }\r\n\r\n    .highlight.djs-shape .djs-visual > :nth-child(1) {\r\n      fill: green !important;\r\n      stroke: green !important;\r\n      fill-opacity: 0.2 !important;\r\n    }\r\n    .highlight.djs-shape .djs-visual > :nth-child(2) {\r\n      fill: green !important;\r\n    }\r\n    .highlight.djs-shape .djs-visual > path {\r\n      fill: green !important;\r\n      fill-opacity: 0.2 !important;\r\n      stroke: green !important;\r\n    }\r\n    .highlight.djs-connection > .djs-visual > path {\r\n      stroke: green !important;\r\n    }\r\n    .highlight-todo.djs-connection > .djs-visual > path {\r\n      stroke: orange !important;\r\n      stroke-dasharray: 4px !important;\r\n      fill-opacity: 0.2 !important;\r\n    }\r\n    .highlight-todo.djs-shape .djs-visual > :nth-child(1) {\r\n      fill: orange !important;\r\n      stroke: orange !important;\r\n      stroke-dasharray: 4px !important;\r\n      fill-opacity: 0.2 !important;\r\n    }\r\n    .overlays-div {\r\n      font-size: 10px;\r\n      color: red;\r\n      width: 100px;\r\n      top: -20px !important;\r\n    }\r\n  }\r\n</style>\r\n"]}]}