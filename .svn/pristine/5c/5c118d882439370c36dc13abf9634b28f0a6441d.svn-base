{"remainingRequest":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\visual_code_work_space\\ruoyi-ui\\src\\views\\flowable\\definition\\model.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\visual_code_work_space\\ruoyi-ui\\src\\views\\flowable\\definition\\model.vue","mtime":1693557459671},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQge3JlYWRYbWwsIHJvbGVMaXN0LCBzYXZlWG1sLCB1c2VyTGlzdCxleHBMaXN0fSBmcm9tICJAL2FwaS9mbG93YWJsZS9kZWZpbml0aW9uIjsNCmltcG9ydCBicG1uTW9kZWxlciBmcm9tICdAL2NvbXBvbmVudHMvUHJvY2Vzcy9pbmRleCcNCmltcG9ydCB2a0JlYXV0aWZ5IGZyb20gJ3ZrYmVhdXRpZnknDQppbXBvcnQgaGxqcyBmcm9tICdoaWdobGlnaHQuanMnDQppbXBvcnQgJ2hpZ2hsaWdodC5qcy9zdHlsZXMvYXRlbGllci1zYXZhbm5hLWRhcmsuY3NzJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJNb2RlbCIsDQogIGNvbXBvbmVudHM6IHsNCiAgICBicG1uTW9kZWxlciwNCiAgICB2a0JlYXV0aWZ5DQogIH0sDQogIC8vIOiHquWumuS5ieaMh+S7pA0KICBkaXJlY3RpdmVzOiB7DQogICAgZGVlcDogdHJ1ZSwNCiAgICBoaWdobGlnaHQ6ew0KICAgICAgZGVlcDogdHJ1ZSwNCiAgICAgIGJpbmQ6IGZ1bmN0aW9uIGJpbmQoZWwsIGJpbmRpbmcpIHsNCiAgICAgICAgY29uc3QgdGFyZ2V0cyA9IGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJ2NvZGUnKTsNCiAgICAgICAgbGV0IHRhcmdldDsNCiAgICAgICAgbGV0IGk7DQogICAgICAgIGZvciAoaSA9IDA7IGkgPCB0YXJnZXRzLmxlbmd0aDsgaSArPSAxKSB7DQogICAgICAgICAgdGFyZ2V0ID0gdGFyZ2V0c1tpXTsNCiAgICAgICAgICBpZiAodHlwZW9mIGJpbmRpbmcudmFsdWUgPT09ICdzdHJpbmcnKSB7DQogICAgICAgICAgICB0YXJnZXQudGV4dENvbnRlbnQgPSBiaW5kaW5nLnZhbHVlOw0KICAgICAgICAgIH0NCiAgICAgICAgICBobGpzLmhpZ2hsaWdodEJsb2NrKHRhcmdldCk7DQogICAgICAgIH0NCiAgICAgIH0sDQogICAgICBjb21wb25lbnRVcGRhdGVkOiBmdW5jdGlvbiBjb21wb25lbnRVcGRhdGVkKGVsLCBiaW5kaW5nKSB7DQogICAgICAgIGNvbnN0IHRhcmdldHMgPSBlbC5xdWVyeVNlbGVjdG9yQWxsKCdjb2RlJyk7DQogICAgICAgIGxldCB0YXJnZXQ7DQogICAgICAgIGxldCBpOw0KICAgICAgICBmb3IgKGkgPSAwOyBpIDwgdGFyZ2V0cy5sZW5ndGg7IGkgKz0gMSkgew0KICAgICAgICAgIHRhcmdldCA9IHRhcmdldHNbaV07DQogICAgICAgICAgaWYgKHR5cGVvZiBiaW5kaW5nLnZhbHVlID09PSAnc3RyaW5nJykgew0KICAgICAgICAgICAgdGFyZ2V0LnRleHRDb250ZW50ID0gYmluZGluZy52YWx1ZTsNCiAgICAgICAgICAgIGhsanMuaGlnaGxpZ2h0QmxvY2sodGFyZ2V0KTsNCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0sDQogICAgfQ0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICB4bWw6ICIiLCAvLyDlkI7nq6/mn6Xor6LliLDnmoR4bWwNCiAgICAgIG1vZGVsZXI6IiIsDQogICAgICB4bWxPcGVuOiBmYWxzZSwNCiAgICAgIHhtbFRpdGxlOiAnJywNCiAgICAgIHhtbERhdGE6ICcnLA0KICAgICAgdXNlcnM6IFtdLA0KICAgICAgZ3JvdXBzOiBbXSwNCiAgICAgIGNhdGVnb3J5czogW10sDQogICAgICBleHBzOiBbXSwNCg0KICAgIH07DQogIH0sDQogIGNyZWF0ZWQgKCkgew0KICAgIGNvbnN0IGRlcGxveUlkID0gdGhpcy4kcm91dGUucXVlcnkgJiYgdGhpcy4kcm91dGUucXVlcnkuZGVwbG95SWQ7DQogICAgLy8gIOafpeivoua1geeoi3htbA0KICAgIGlmIChkZXBsb3lJZCkgew0KICAgICAgdGhpcy5nZXRYbWxEYXRhKGRlcGxveUlkKTsNCiAgICB9DQogICAgdGhpcy5nZXREaWN0cygic3lzX3Byb2Nlc3NfY2F0ZWdvcnkiKS50aGVuKHJlcyA9PiB7DQogICAgICB0aGlzLmNhdGVnb3J5cyA9IHJlcy5kYXRhOw0KICAgIH0pOw0KICAgIHRoaXMuZ2V0RGF0YUxpc3QoKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgLyoqIHhtbCDmlofku7YgKi8NCiAgICBnZXRYbWxEYXRhKGRlcGxveUlkKSB7DQogICAgICAvLyDlj5HpgIHor7fmsYLvvIzojrflj5Z4bWwNCiAgICAgIHJlYWRYbWwoZGVwbG95SWQpLnRoZW4ocmVzID0+ew0KICAgICAgICB0aGlzLnhtbCA9IHJlcy5kYXRhOw0KICAgICAgICB0aGlzLm1vZGVsZXIgPSByZXMuZGF0YQ0KICAgICAgfSkNCiAgICB9LA0KICAgIC8qKiDkv53lrZh4bWwgKi8NCiAgICBzYXZlKGRhdGEpIHsNCiAgICAgIGNvbnN0IHBhcmFtcyA9IHsNCiAgICAgICAgbmFtZTogZGF0YS5wcm9jZXNzLm5hbWUsDQogICAgICAgIGNhdGVnb3J5OiBkYXRhLnByb2Nlc3MuY2F0ZWdvcnksDQogICAgICAgIHhtbDogZGF0YS54bWwNCiAgICAgIH0NCiAgICAgIHNhdmVYbWwocGFyYW1zKS50aGVuKHJlcyA9PiB7DQogICAgICAgIHRoaXMuJG1vZGFsLm1zZ1N1Y2Nlc3MocmVzLm1zZykNCiAgICAgICAgLy8g5YWz6Zet5b2T5YmN5qCH562+6aG15bm26L+U5Zue5LiK5Liq6aG16Z2iDQogICAgICAgIGNvbnN0IG9iaiA9IHsgcGF0aDogIi9mbG93YWJsZS9kZWZpbml0aW9uIiwgcXVlcnk6IHsgdDogRGF0ZS5ub3coKX0gfTsNCiAgICAgICAgdGhpcy4kdGFiLmNsb3NlT3BlblBhZ2Uob2JqKTsNCiAgICAgIH0pDQogICAgfSwNCiAgICAvKiog5oyH5a6a5rWB56iL5Yqe55CG5Lq65ZGY5YiX6KGoICovDQogICAgZ2V0RGF0YUxpc3QoKSB7DQogICAgICB1c2VyTGlzdCgpLnRoZW4ocmVzID0+ew0KICAgICAgICByZXMuZGF0YS5mb3JFYWNoKHZhbCA9PnsNCiAgICAgICAgICB2YWwudXNlcklkID0gdmFsLnVzZXJJZC50b1N0cmluZygpOw0KICAgICAgICB9KQ0KICAgICAgICB0aGlzLnVzZXJzID0gcmVzLmRhdGE7DQogICAgICAgIC8vIGxldCBhcnIgPSB7bmlja05hbWU6ICLmtYHnqIvlj5HotbfkuroiLCB1c2VySWQ6ICIke0lOSVRJQVRPUn0ifQ0KICAgICAgICAvLyB0aGlzLnVzZXJzLnB1c2goYXJyKQ0KICAgICAgfSk7DQogICAgICByb2xlTGlzdCgpLnRoZW4ocmVzID0+ew0KICAgICAgICByZXMuZGF0YS5mb3JFYWNoKHZhbCA9PnsNCiAgICAgICAgICB2YWwucm9sZUlkID0gdmFsLnJvbGVJZC50b1N0cmluZygpOw0KICAgICAgICB9KQ0KICAgICAgICB0aGlzLmdyb3VwcyA9IHJlcy5kYXRhOw0KICAgICAgfSk7DQogICAgICBleHBMaXN0KCkudGhlbihyZXMgPT57DQogICAgICAgIHRoaXMuZXhwcyA9IHJlcy5kYXRhOw0KICAgICAgfSk7DQogICAgfSwNCiAgICAvKiog5bGV56S6eG1sICovDQogICAgc2hvd1hNTCh4bWxEYXRhKXsNCiAgICAgIHRoaXMueG1sVGl0bGUgPSAneG1s5p+l55yLJzsNCiAgICAgIHRoaXMueG1sT3BlbiA9IHRydWU7DQogICAgICB0aGlzLnhtbERhdGEgPSB2a0JlYXV0aWZ5LnhtbCh4bWxEYXRhKTsNCiAgICB9LA0KICB9LA0KfTsNCg=="},{"version":3,"sources":["model.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"model.vue","sourceRoot":"src/views/flowable/definition","sourcesContent":["<template>\r\n  <div>\r\n    <bpmn-modeler\r\n      ref=\"refNode\"\r\n      :xml=\"xml\"\r\n      :users=\"users\"\r\n      :groups=\"groups\"\r\n      :categorys=\"categorys\"\r\n      :exps=\"exps\"\r\n      :is-view=\"false\"\r\n      @save=\"save\"\r\n      @showXML=\"showXML\"\r\n    />\r\n    <!--在线查看xml-->\r\n    <el-drawer :title=\"xmlTitle\" :modal=\"false\" direction=\"rtl\" :visible.sync=\"xmlOpen\" size=\"60%\">\r\n      <!-- 设置对话框内容高度 -->\r\n        <el-scrollbar>\r\n            <pre v-highlight=\"xmlData\"><code class=\"xml\"></code></pre>\r\n        </el-scrollbar>\r\n    </el-drawer>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {readXml, roleList, saveXml, userList,expList} from \"@/api/flowable/definition\";\r\nimport bpmnModeler from '@/components/Process/index'\r\nimport vkBeautify from 'vkbeautify'\r\nimport hljs from 'highlight.js'\r\nimport 'highlight.js/styles/atelier-savanna-dark.css'\r\n\r\nexport default {\r\n  name: \"Model\",\r\n  components: {\r\n    bpmnModeler,\r\n    vkBeautify\r\n  },\r\n  // 自定义指令\r\n  directives: {\r\n    deep: true,\r\n    highlight:{\r\n      deep: true,\r\n      bind: function bind(el, binding) {\r\n        const targets = el.querySelectorAll('code');\r\n        let target;\r\n        let i;\r\n        for (i = 0; i < targets.length; i += 1) {\r\n          target = targets[i];\r\n          if (typeof binding.value === 'string') {\r\n            target.textContent = binding.value;\r\n          }\r\n          hljs.highlightBlock(target);\r\n        }\r\n      },\r\n      componentUpdated: function componentUpdated(el, binding) {\r\n        const targets = el.querySelectorAll('code');\r\n        let target;\r\n        let i;\r\n        for (i = 0; i < targets.length; i += 1) {\r\n          target = targets[i];\r\n          if (typeof binding.value === 'string') {\r\n            target.textContent = binding.value;\r\n            hljs.highlightBlock(target);\r\n          }\r\n        }\r\n      },\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      xml: \"\", // 后端查询到的xml\r\n      modeler:\"\",\r\n      xmlOpen: false,\r\n      xmlTitle: '',\r\n      xmlData: '',\r\n      users: [],\r\n      groups: [],\r\n      categorys: [],\r\n      exps: [],\r\n\r\n    };\r\n  },\r\n  created () {\r\n    const deployId = this.$route.query && this.$route.query.deployId;\r\n    //  查询流程xml\r\n    if (deployId) {\r\n      this.getXmlData(deployId);\r\n    }\r\n    this.getDicts(\"sys_process_category\").then(res => {\r\n      this.categorys = res.data;\r\n    });\r\n    this.getDataList()\r\n  },\r\n  methods: {\r\n    /** xml 文件 */\r\n    getXmlData(deployId) {\r\n      // 发送请求，获取xml\r\n      readXml(deployId).then(res =>{\r\n        this.xml = res.data;\r\n        this.modeler = res.data\r\n      })\r\n    },\r\n    /** 保存xml */\r\n    save(data) {\r\n      const params = {\r\n        name: data.process.name,\r\n        category: data.process.category,\r\n        xml: data.xml\r\n      }\r\n      saveXml(params).then(res => {\r\n        this.$modal.msgSuccess(res.msg)\r\n        // 关闭当前标签页并返回上个页面\r\n        const obj = { path: \"/flowable/definition\", query: { t: Date.now()} };\r\n        this.$tab.closeOpenPage(obj);\r\n      })\r\n    },\r\n    /** 指定流程办理人员列表 */\r\n    getDataList() {\r\n      userList().then(res =>{\r\n        res.data.forEach(val =>{\r\n          val.userId = val.userId.toString();\r\n        })\r\n        this.users = res.data;\r\n        // let arr = {nickName: \"流程发起人\", userId: \"${INITIATOR}\"}\r\n        // this.users.push(arr)\r\n      });\r\n      roleList().then(res =>{\r\n        res.data.forEach(val =>{\r\n          val.roleId = val.roleId.toString();\r\n        })\r\n        this.groups = res.data;\r\n      });\r\n      expList().then(res =>{\r\n        this.exps = res.data;\r\n      });\r\n    },\r\n    /** 展示xml */\r\n    showXML(xmlData){\r\n      this.xmlTitle = 'xml查看';\r\n      this.xmlOpen = true;\r\n      this.xmlData = vkBeautify.xml(xmlData);\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.content-box{\r\n  line-height: 10px;\r\n}\r\n// 修改对话框高度\r\n.showAll_dialog {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  ::v-deep .el-dialog {\r\n    margin: 0 auto !important;\r\n    height: 80%;\r\n    overflow: hidden;\r\n    background-color: #ffffff;\r\n    .el-dialog__body {\r\n      position: absolute;\r\n      left: 0;\r\n      top: 54px;\r\n      bottom: 0;\r\n      right: 0;\r\n      z-index: 1;\r\n      overflow: hidden;\r\n      overflow-y: auto;\r\n      // 下边设置字体，我的需求是黑底白字\r\n      color: #ffffff;\r\n      padding: 0 15px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}