{"remainingRequest":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\visual_code_work_space\\ruoyi-ui\\src\\components\\Process\\components\\nodePanel\\property\\multiInstance.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\visual_code_work_space\\ruoyi-ui\\src\\components\\Process\\components\\nodePanel\\property\\multiInstance.vue","mtime":1693557459608},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgbWl4aW5QYW5lbCBmcm9tICdAL2NvbXBvbmVudHMvUHJvY2Vzcy9jb21tb24vbWl4aW5QYW5lbCcNCmltcG9ydCB7Zm9ybWF0SnNvbktleVZhbHVlfSBmcm9tICdAL2NvbXBvbmVudHMvUHJvY2Vzcy9jb21tb24vcGFyc2VFbGVtZW50Jw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG1peGluczogW21peGluUGFuZWxdLA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBkaWFsb2dWaXNpYmxlOiB0cnVlLA0KICAgICAgZm9ybURhdGE6IHt9LA0KICAgICAgcHJlZml4OiAnZmxvd2FibGU6JywNCiAgICB9DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgZm9ybUNvbmZpZygpIHsNCiAgICAgIGNvbnN0IF90aGlzID0gdGhpcw0KICAgICAgcmV0dXJuIHsNCiAgICAgICAgaW5saW5lOiBmYWxzZSwNCiAgICAgICAgaXRlbTogWw0KICAgICAgICAgIHsNCiAgICAgICAgICAgIHhUeXBlOiAnaW5wdXQnLA0KICAgICAgICAgICAgbmFtZTogJ2NvbGxlY3Rpb24nLA0KICAgICAgICAgICAgbGFiZWw6ICfpm4blkIgnLA0KICAgICAgICAgICAgdG9vbHRpcDogJ2NvbGxlY3Rpb246IOWxnuaAp+S8muS9nOS4uuihqOi+vuW8j+i/m+ihjOino+aekOOAguWmguaenOihqOi+vuW8j+ino+aekOS4uuWtl+espuS4suiAjOS4jeaYr+S4gOS4qumbhuWQiO+8jDxiciAvPuS4jeiuuuaYr+WboOS4uuacrOi6q+mFjee9rueahOWwseaYr+mdmeaAgeWtl+espuS4suWAvO+8jOi/mOaYr+ihqOi+vuW8j+iuoeeul+e7k+aenOS4uuWtl+espuS4su+8jDxiciAvPui/meS4quWtl+espuS4sumDveS8muiiq+W9k+WBmuWPmOmHj+WQje+8jOW5tuS7jua1geeoi+WPmOmHj+S4reeUqOS6juiOt+WPluWunumZheeahOmbhuWQiOOAgicsDQogICAgICAgICAgICAvLyBydWxlczogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXpm4blkIjlkI3np7AnLCB0cmlnZ2VyOiBbJ2JsdXInLCAnY2hhbmdlJ10gfV0NCiAgICAgICAgICB9LA0KICAgICAgICAgIHsNCiAgICAgICAgICAgIHhUeXBlOiAnaW5wdXQnLA0KICAgICAgICAgICAgbmFtZTogJ2VsZW1lbnRWYXJpYWJsZScsDQogICAgICAgICAgICBsYWJlbDogJ+WFg+e0oOWPmOmHjycsDQogICAgICAgICAgICB0b29sdGlwOiAnZWxlbWVudFZhcmlhYmxlOiDmr4/liJvlu7rkuIDkuKrnlKjmiLfku7vliqHliY3vvIzlhYjku6Xor6XlhYPntKDlj5jph4/kuLpsYWJlbO+8jOmbhuWQiOS4reeahOS4gOmhueS4unZhbHVl77yMPGJyIC8+5Yib5bu677yI5bGA6YOo77yJ5rWB56iL5Y+Y6YeP77yM6K+l5bGA6YOo5rWB56iL5Y+Y6YeP6KKr55So5LqO5oyH5rS+55So5oi35Lu75Yqh44CCPGJyIC8+5LiA6Iis5p2l6K+077yM6K+l5a2X56ym5Liy5bqU5LiO5oyH5a6a5Lq65ZGY5Y+Y6YeP55u45ZCM44CCJywNCiAgICAgICAgICAgIC8vIHJ1bGVzOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeWFg+e0oOWPmOmHjycsIHRyaWdnZXI6IFsnYmx1cicsICdjaGFuZ2UnXSB9XQ0KICAgICAgICAgIH0sDQogICAgICAgICAgew0KICAgICAgICAgICAgeFR5cGU6ICdzZWxlY3QnLA0KICAgICAgICAgICAgbmFtZTogJ2lzU2VxdWVudGlhbCcsDQogICAgICAgICAgICBsYWJlbDogJ+aJp+ihjOaWueW8jycsDQogICAgICAgICAgICB0b29sdGlwOiAn5bm26KGM5Lya562+77yIcGFyYWxsZWzvvInjgIHkuLLooYzkvJrnrb4oc2VxdWVudGlhbCnvvIzlhbbkuK3lubbooYzkvJrnrb7nmoTmhI/mgJ3mmK8g5aSa5Liq5Lq65ZCM5pe25omn6KGM5Lu75Yqh44CC5Liy6KGM5Lya562+5piv5oyJ6aG65bqP5omn6KGM5Lu75Yqh44CCJywNCiAgICAgICAgICAgIGRpYzogW3tsYWJlbDogJ+S4suihjCcsIHZhbHVlOiB0cnVlfSwge2xhYmVsOiAn5bm26KGMJywgdmFsdWU6IGZhbHNlfV0sDQogICAgICAgICAgICAvLyBydWxlczogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fpgInmi6nmiafooYzmlrnlvI8nLCB0cmlnZ2VyOiBbJ2JsdXInLCAnY2hhbmdlJ10gfV0NCiAgICAgICAgICB9LA0KICAgICAgICAgIHsNCiAgICAgICAgICAgIHhUeXBlOiAnaW5wdXQnLA0KICAgICAgICAgICAgbmFtZTogJ2NvbXBsZXRpb25Db25kaXRpb24nLA0KICAgICAgICAgICAgbGFiZWw6ICflrozmiJDmnaHku7YnLA0KICAgICAgICAgICAgdG9vbHRpcDogJ2NvbXBsZXRpb25Db25kaXRpb246IOWkmuWunuS+i+a0u+WKqOWcqOaJgOacieWunuS+i+mDveWujOaIkOaXtue7k+adn++8jOeEtuiAjOS5n+WPr+S7peaMh+WumuS4gOS4quihqOi+vuW8j++8jOWcqOavj+S4quWunuS+izxiciAvPue7k+adn+aXtui/m+ihjOiuoeeul+OAguW9k+ihqOi+vuW8j+iuoeeul+S4unRydWXml7bvvIzlsIbplIDmr4HmiYDmnInliankvZnnmoTlrp7kvovvvIzlubbnu5PmnZ/lpJrlrp7kvos8YnIgLz7mtLvliqjvvIznu6fnu63miafooYzmtYHnqIvjgILkvovlpoIgJHtuck9mQ29tcGxldGVkSW5zdGFuY2VzL25yT2ZJbnN0YW5jZXMgPj0gMC42IH3vvIw8YnIgLz7ooajnpLrlvZPku7vliqHlrozmiJA2MCXml7bvvIzor6XoioLngrnlsLHnrpflrozmiJAnLA0KICAgICAgICAgICAgLy8gcnVsZXM6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl5a6M5oiQ5p2h5Lu2JywgdHJpZ2dlcjogWydibHVyJywgJ2NoYW5nZSddIH1dDQogICAgICAgICAgfQ0KICAgICAgICBdLA0KICAgICAgICBvcGVyYXRlOiBbDQogICAgICAgICAgeyB0ZXh0OiAn56Gu5a6aJywgc2hvdzogdHJ1ZSwgY2xpY2s6IF90aGlzLnNhdmUgfSwNCiAgICAgICAgICB7IHRleHQ6ICfmuIXnqbonLCBzaG93OiB0cnVlLCBjbGljazogKCkgPT4geyBfdGhpcy5mb3JtRGF0YSA9IHt9IH0gfQ0KICAgICAgICBdDQogICAgICB9DQogICAgfQ0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIGNvbnN0IGNhY2hlID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLmVsZW1lbnQuYnVzaW5lc3NPYmplY3QubG9vcENoYXJhY3RlcmlzdGljcyA/PyB7fSkpDQogICAgY2FjaGUuY29tcGxldGlvbkNvbmRpdGlvbiA9IGNhY2hlLmNvbXBsZXRpb25Db25kaXRpb24/LmJvZHkNCiAgICAvLyDmi7zmjqXlpJrlrp7kvovlr7nosaENCiAgICBpZiAodGhpcy5lbGVtZW50LmJ1c2luZXNzT2JqZWN0Lmxvb3BDaGFyYWN0ZXJpc3RpY3MpIHsNCiAgICAgIE9iamVjdC5hc3NpZ24oY2FjaGUsIHRoaXMuZWxlbWVudC5idXNpbmVzc09iamVjdC5sb29wQ2hhcmFjdGVyaXN0aWNzLiRhdHRycykNCiAgICB9DQogICAgdGhpcy5mb3JtRGF0YSA9IGZvcm1hdEpzb25LZXlWYWx1ZShjYWNoZSkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIHVwZGF0ZUVsZW1lbnQoKSB7DQogICAgICBpZiAodGhpcy5mb3JtRGF0YS5pc1NlcXVlbnRpYWwgIT09IG51bGwgJiYgdGhpcy5mb3JtRGF0YS5pc1NlcXVlbnRpYWwgIT09IHVuZGVmaW5lZCkgew0KICAgICAgICAvLyBjb25zdCBtb2RlbCA9IHRoaXMubW9kZWxlci5nZXQoJ21vZGRsZScpOw0KICAgICAgICBsZXQgbG9vcENoYXJhY3RlcmlzdGljcyA9IHRoaXMuZWxlbWVudC5idXNpbmVzc09iamVjdC5nZXQoJ2xvb3BDaGFyYWN0ZXJpc3RpY3MnKQ0KICAgICAgICBpZiAoIWxvb3BDaGFyYWN0ZXJpc3RpY3MpIHsNCiAgICAgICAgICBsb29wQ2hhcmFjdGVyaXN0aWNzID0gdGhpcy5tb2RlbGVyLmdldCgnbW9kZGxlJykuY3JlYXRlKCdicG1uOk11bHRpSW5zdGFuY2VMb29wQ2hhcmFjdGVyaXN0aWNzJykNCiAgICAgICAgfQ0KICAgICAgICBsb29wQ2hhcmFjdGVyaXN0aWNzWydpc1NlcXVlbnRpYWwnXSA9IHRoaXMuZm9ybURhdGEuaXNTZXF1ZW50aWFsDQogICAgICAgIGxvb3BDaGFyYWN0ZXJpc3RpY3NbJ2NvbGxlY3Rpb24nXSA9IHRoaXMuZm9ybURhdGEuY29sbGVjdGlvbg0KICAgICAgICBsb29wQ2hhcmFjdGVyaXN0aWNzWydlbGVtZW50VmFyaWFibGUnXSA9IHRoaXMuZm9ybURhdGEuZWxlbWVudFZhcmlhYmxlDQogICAgICAgIC8vIGxldCBsb29wQ2FyZGluYWxpdHkgPSBtb2RlbC5jcmVhdGUoImJwbW46RXhwcmVzc2lvbiIsew0KICAgICAgICAvLyAgIGJvZHk6ICI0Ig0KICAgICAgICAvLyB9KTsNCiAgICAgICAgLy8gbG9vcENoYXJhY3RlcmlzdGljc1snbG9vcENhcmRpbmFsaXR5J10gPSBsb29wQ2FyZGluYWxpdHkNCg0KICAgICAgICBsb29wQ2hhcmFjdGVyaXN0aWNzLiRhdHRyc1snaXNTZXF1ZW50aWFsJ10gPSB0aGlzLmZvcm1EYXRhLmlzU2VxdWVudGlhbA0KICAgICAgICBsb29wQ2hhcmFjdGVyaXN0aWNzLiRhdHRyc1t0aGlzLnByZWZpeCArICdjb2xsZWN0aW9uJ10gPSB0aGlzLmZvcm1EYXRhLmNvbGxlY3Rpb24NCiAgICAgICAgbG9vcENoYXJhY3RlcmlzdGljcy4kYXR0cnNbdGhpcy5wcmVmaXggKyAnZWxlbWVudFZhcmlhYmxlJ10gPSB0aGlzLmZvcm1EYXRhLmVsZW1lbnRWYXJpYWJsZQ0KDQogICAgICAgIGlmICh0aGlzLmZvcm1EYXRhLmNvbXBsZXRpb25Db25kaXRpb24pIHsNCiAgICAgICAgICBsb29wQ2hhcmFjdGVyaXN0aWNzWydjb21wbGV0aW9uQ29uZGl0aW9uJ10gPSB0aGlzLm1vZGVsZXIuZ2V0KCdtb2RkbGUnKS5jcmVhdGUoJ2JwbW46RXhwcmVzc2lvbicsIHtib2R5OiB0aGlzLmZvcm1EYXRhLmNvbXBsZXRpb25Db25kaXRpb259KQ0KICAgICAgICB9DQogICAgICAgIHRoaXMudXBkYXRlUHJvcGVydGllcyh7bG9vcENoYXJhY3RlcmlzdGljczogbG9vcENoYXJhY3RlcmlzdGljc30pDQogICAgICB9IGVsc2Ugew0KICAgICAgICBkZWxldGUgdGhpcy5lbGVtZW50LmJ1c2luZXNzT2JqZWN0Lmxvb3BDaGFyYWN0ZXJpc3RpY3MNCiAgICAgIH0NCiAgICB9LA0KICAgIHNhdmUoKSB7DQogICAgICB0aGlzLiRyZWZzWyd4Rm9ybSddLnZhbGlkYXRlKCkudGhlbigoKSA9PiB7DQogICAgICAgIHRoaXMudXBkYXRlRWxlbWVudCgpDQogICAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IGZhbHNlDQogICAgICB9KS5jYXRjaChlID0+IGNvbnNvbGUuZXJyb3IoZSkpOw0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["multiInstance.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"multiInstance.vue","sourceRoot":"src/components/Process/components/nodePanel/property","sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog\r\n      title=\"多实例配置\"\r\n      :visible.sync=\"dialogVisible\"\r\n      width=\"600px\"\r\n      :close-on-click-modal=\"false\"\r\n      :close-on-press-escape=\"false\"\r\n      class=\"muti-instance\"\r\n      @closed=\"$emit('close')\"\r\n    >\r\n      <el-descriptions :column=\"1\" size=\"mini\" border>\r\n        <el-descriptions-item label=\"使用说明\">按照BPMN2.0规范的要求，用于为每个实例创建执行的父执行，会提供下列变量:</el-descriptions-item>\r\n        <el-descriptions-item label=\"nrOfInstances\">实例总数。</el-descriptions-item>\r\n        <el-descriptions-item label=\"nrOfActiveInstances\">当前活动的（即未完成的），实例数量。对于顺序多实例，这个值总为1。</el-descriptions-item>\r\n        <el-descriptions-item label=\"nrOfCompletedInstances\">已完成的实例数量。</el-descriptions-item>\r\n        <el-descriptions-item label=\"loopCounter\">给定实例在for-each循环中的index。</el-descriptions-item>\r\n      </el-descriptions>\r\n      <div class=\"app-container\">\r\n       <x-form ref=\"xForm\" v-model=\"formData\" :config=\"formConfig\" />\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mixinPanel from '@/components/Process/common/mixinPanel'\r\nimport {formatJsonKeyValue} from '@/components/Process/common/parseElement'\r\n\r\nexport default {\r\n  mixins: [mixinPanel],\r\n  data() {\r\n    return {\r\n      dialogVisible: true,\r\n      formData: {},\r\n      prefix: 'flowable:',\r\n    }\r\n  },\r\n  computed: {\r\n    formConfig() {\r\n      const _this = this\r\n      return {\r\n        inline: false,\r\n        item: [\r\n          {\r\n            xType: 'input',\r\n            name: 'collection',\r\n            label: '集合',\r\n            tooltip: 'collection: 属性会作为表达式进行解析。如果表达式解析为字符串而不是一个集合，<br />不论是因为本身配置的就是静态字符串值，还是表达式计算结果为字符串，<br />这个字符串都会被当做变量名，并从流程变量中用于获取实际的集合。',\r\n            // rules: [{ required: true, message: '请输入集合名称', trigger: ['blur', 'change'] }]\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'elementVariable',\r\n            label: '元素变量',\r\n            tooltip: 'elementVariable: 每创建一个用户任务前，先以该元素变量为label，集合中的一项为value，<br />创建（局部）流程变量，该局部流程变量被用于指派用户任务。<br />一般来说，该字符串应与指定人员变量相同。',\r\n            // rules: [{ required: true, message: '请输入元素变量', trigger: ['blur', 'change'] }]\r\n          },\r\n          {\r\n            xType: 'select',\r\n            name: 'isSequential',\r\n            label: '执行方式',\r\n            tooltip: '并行会签（parallel）、串行会签(sequential)，其中并行会签的意思是 多个人同时执行任务。串行会签是按顺序执行任务。',\r\n            dic: [{label: '串行', value: true}, {label: '并行', value: false}],\r\n            // rules: [{ required: true, message: '请选择执行方式', trigger: ['blur', 'change'] }]\r\n          },\r\n          {\r\n            xType: 'input',\r\n            name: 'completionCondition',\r\n            label: '完成条件',\r\n            tooltip: 'completionCondition: 多实例活动在所有实例都完成时结束，然而也可以指定一个表达式，在每个实例<br />结束时进行计算。当表达式计算为true时，将销毁所有剩余的实例，并结束多实例<br />活动，继续执行流程。例如 ${nrOfCompletedInstances/nrOfInstances >= 0.6 }，<br />表示当任务完成60%时，该节点就算完成',\r\n            // rules: [{ required: true, message: '请输入完成条件', trigger: ['blur', 'change'] }]\r\n          }\r\n        ],\r\n        operate: [\r\n          { text: '确定', show: true, click: _this.save },\r\n          { text: '清空', show: true, click: () => { _this.formData = {} } }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    const cache = JSON.parse(JSON.stringify(this.element.businessObject.loopCharacteristics ?? {}))\r\n    cache.completionCondition = cache.completionCondition?.body\r\n    // 拼接多实例对象\r\n    if (this.element.businessObject.loopCharacteristics) {\r\n      Object.assign(cache, this.element.businessObject.loopCharacteristics.$attrs)\r\n    }\r\n    this.formData = formatJsonKeyValue(cache)\r\n  },\r\n  methods: {\r\n    updateElement() {\r\n      if (this.formData.isSequential !== null && this.formData.isSequential !== undefined) {\r\n        // const model = this.modeler.get('moddle');\r\n        let loopCharacteristics = this.element.businessObject.get('loopCharacteristics')\r\n        if (!loopCharacteristics) {\r\n          loopCharacteristics = this.modeler.get('moddle').create('bpmn:MultiInstanceLoopCharacteristics')\r\n        }\r\n        loopCharacteristics['isSequential'] = this.formData.isSequential\r\n        loopCharacteristics['collection'] = this.formData.collection\r\n        loopCharacteristics['elementVariable'] = this.formData.elementVariable\r\n        // let loopCardinality = model.create(\"bpmn:Expression\",{\r\n        //   body: \"4\"\r\n        // });\r\n        // loopCharacteristics['loopCardinality'] = loopCardinality\r\n\r\n        loopCharacteristics.$attrs['isSequential'] = this.formData.isSequential\r\n        loopCharacteristics.$attrs[this.prefix + 'collection'] = this.formData.collection\r\n        loopCharacteristics.$attrs[this.prefix + 'elementVariable'] = this.formData.elementVariable\r\n\r\n        if (this.formData.completionCondition) {\r\n          loopCharacteristics['completionCondition'] = this.modeler.get('moddle').create('bpmn:Expression', {body: this.formData.completionCondition})\r\n        }\r\n        this.updateProperties({loopCharacteristics: loopCharacteristics})\r\n      } else {\r\n        delete this.element.businessObject.loopCharacteristics\r\n      }\r\n    },\r\n    save() {\r\n      this.$refs['xForm'].validate().then(() => {\r\n        this.updateElement()\r\n        this.dialogVisible = false\r\n      }).catch(e => console.error(e));\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.muti-instance .el-form-item {\r\n  margin-bottom: 22px;\r\n}\r\n</style>\r\n"]}]}