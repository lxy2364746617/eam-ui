{"remainingRequest":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\visual_code_work_space\\ruoyi-ui\\src\\views\\flowable\\task\\myProcess\\send\\flowview.vue?vue&type=style&index=0&id=3c43bd01&lang=scss&","dependencies":[{"path":"E:\\visual_code_work_space\\ruoyi-ui\\src\\views\\flowable\\task\\myProcess\\send\\flowview.vue","mtime":1693557459675},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5ianMtcG93ZXJlZC1ieSB7CiAgZGlzcGxheTogbm9uZTsKfQoudmlldy1tb2RlIHsKICAuZWwtaGVhZGVyLCAuZWwtYXNpZGUsIC5kanMtcGFsZXR0ZSwgLmJqcy1wb3dlcmVkLWJ5IHsKICAgIGRpc3BsYXk6IG5vbmU7CiAgfQogIC5lbC1sb2FkaW5nLW1hc2sgewogICAgYmFja2dyb3VuZC1jb2xvcjogaW5pdGlhbDsKICB9CiAgLmVsLWxvYWRpbmctc3Bpbm5lciB7CiAgICBkaXNwbGF5OiBub25lOwogIH0KfQouY29udGFpbmVycyB7CiAgLy8gYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgLmNhbnZhcyB7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogMTAwJTsKICB9CiAgLnBhbmVsIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHJpZ2h0OiAwOwogICAgdG9wOiA1MHB4OwogICAgd2lkdGg6IDMwMHB4OwogIH0KICAubG9hZCB7CiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7CiAgfQogIC5lbC1mb3JtLWl0ZW1fX2xhYmVsewogICAgZm9udC1zaXplOiAxM3B4OwogIH0KCiAgLmRqcy1wYWxldHRlewogICAgbGVmdDogMHB4IWltcG9ydGFudDsKICAgIHRvcDogMHB4OwogICAgYm9yZGVyLXRvcDogbm9uZTsKICB9CgogIC5kanMtY29udGFpbmVyIHN2ZyB7CiAgICBtaW4taGVpZ2h0OiA2NTBweDsKICB9CgogIC5vdmVybGF5cy1kaXYgewogICAgZm9udC1zaXplOiAxMHB4OwogICAgY29sb3I6IHJlZDsKICAgIHdpZHRoOiAxMDBweDsKICAgIHRvcDogLTIwcHggIWltcG9ydGFudDsKICB9Cn0K"},{"version":3,"sources":["flowview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"flowview.vue","sourceRoot":"src/views/flowable/task/myProcess/send","sourcesContent":["<template>\r\n  <div class=\"containers main-box\">\r\n    <el-button type=\"success\"\r\n               size=\"small\"\r\n               icon=\"el-icon-zoom-in\"\r\n               @click=\"zoomViewport(true)\">放大</el-button>\r\n    <el-button type=\"warning\"\r\n               size=\"small\"\r\n               icon=\"el-icon-zoom-out\"\r\n               @click=\"zoomViewport(false)\">缩小</el-button>\r\n    <el-button type=\"info\"\r\n               size=\"small\"\r\n               icon=\"el-icon-rank\"\r\n               @click=\"fitViewport\">适中</el-button>\r\n    <div class=\"canvas\" ref=\"flowCanvas\"></div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { CustomViewer as BpmnViewer } from \"@/components/customBpmn\";\r\n\r\nexport default {\r\n  name: \"FlowView\",\r\n  props: {\r\n    flowData: {\r\n      type: Object,\r\n      default: () => {}\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      bpmnViewer: null\r\n    };\r\n  },\r\n  watch: {\r\n    flowData: {\r\n      handler(newVal) {\r\n        if (Object.keys(newVal).length > 0) {\r\n          // 生成实例\r\n          this.bpmnViewer && this.bpmnViewer.destroy();\r\n          this.bpmnViewer = new BpmnViewer({\r\n            container: this.$refs.flowCanvas,\r\n            height: 'calc(100vh - 200px)',\r\n          });\r\n          this.loadFlowCanvas(newVal)\r\n        }\r\n      },\r\n      immediate: true, // 立即生效\r\n      deep: true  //监听对象或数组的时候，要用到深度监听\r\n    }\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    // 加载流程图片\r\n    async loadFlowCanvas(flowData) {\r\n      const self = this\r\n      try {\r\n        await self.bpmnViewer.importXML(flowData.xmlData);\r\n        self.fitViewport()\r\n      } catch (err) {\r\n        console.error(err.message, err.warnings)\r\n      }\r\n    },\r\n    // 让图能自适应屏幕\r\n    fitViewport() {\r\n      this.zoom = this.bpmnViewer.get('canvas').zoom(\"fit-viewport\", \"auto\")\r\n    },\r\n    // 放大缩小\r\n    zoomViewport(zoomIn = true) {\r\n      this.zoom = this.bpmnViewer.get('canvas').zoom()\r\n      this.zoom += (zoomIn ? 0.1 : -0.1)\r\n      if(this.zoom >= 0.2) this.bpmnViewer.get('canvas').zoom(this.zoom)\r\n    },\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n  .bjs-powered-by {\r\n    display: none;\r\n  }\r\n  .view-mode {\r\n    .el-header, .el-aside, .djs-palette, .bjs-powered-by {\r\n      display: none;\r\n    }\r\n    .el-loading-mask {\r\n      background-color: initial;\r\n    }\r\n    .el-loading-spinner {\r\n      display: none;\r\n    }\r\n  }\r\n  .containers {\r\n    // background-color: #ffffff;\r\n    width: 100%;\r\n    height: 100%;\r\n    .canvas {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n    .panel {\r\n      position: absolute;\r\n      right: 0;\r\n      top: 50px;\r\n      width: 300px;\r\n    }\r\n    .load {\r\n      margin-right: 10px;\r\n    }\r\n    .el-form-item__label{\r\n      font-size: 13px;\r\n    }\r\n\r\n    .djs-palette{\r\n      left: 0px!important;\r\n      top: 0px;\r\n      border-top: none;\r\n    }\r\n\r\n    .djs-container svg {\r\n      min-height: 650px;\r\n    }\r\n\r\n    .overlays-div {\r\n      font-size: 10px;\r\n      color: red;\r\n      width: 100px;\r\n      top: -20px !important;\r\n    }\r\n  }\r\n</style>\r\n"]}]}