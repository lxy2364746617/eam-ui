{"remainingRequest":"E:\\visual_code_work_space\\cms-eam-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\visual_code_work_space\\cms-eam-ui\\src\\components\\Process\\PropertyPanel.vue?vue&type=style&index=0&id=89df6c22&lang=scss&","dependencies":[{"path":"E:\\visual_code_work_space\\cms-eam-ui\\src\\components\\Process\\PropertyPanel.vue","mtime":1693557459603},{"path":"E:\\visual_code_work_space\\cms-eam-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\cms-eam-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\cms-eam-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\cms-eam-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\cms-eam-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\visual_code_work_space\\cms-eam-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnByb3BlcnR5LXBhbmVsIHsNCiAgcGFkZGluZzogMjBweCAyMHB4Ow0KICAvLyByZXNldCBlbGVtZW50IGNzcw0KICAuZWwtZm9ybS0tbGFiZWwtdG9wIC5lbC1mb3JtLWl0ZW1fX2xhYmVsIHsNCiAgICBwYWRkaW5nOiAwOw0KICB9DQogIC8vIOiuvue9ruiuvuiuoeWZqOWPs+S+p+ihqOWNlemrmOW6pg0KICAuZWwtZm9ybS1pdGVtIHsNCiAgICBtYXJnaW4tYm90dG9tOiA2cHg7DQogIH0NCiAgLnRhYi10YWJsZSAuZWwtZm9ybS1pdGVtIHsNCiAgICBtYXJnaW4tYm90dG9tOiAxNnB4Ow0KICB9DQogIC5ub2RlLW5hbWV7DQogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7DQogICAgcGFkZGluZzogMCAwIDEwcHggMjBweDsNCiAgICBtYXJnaW4tYm90dG9tOiAxMHB4Ow0KICAgIGZvbnQtc2l6ZTogMTZweDsNCiAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICBjb2xvcjogIzQ0NDsNCiAgfQ0KfQ0K"},{"version":3,"sources":["PropertyPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PropertyPanel.vue","sourceRoot":"src/components/Process","sourcesContent":["<template>\r\n  <div ref=\"propertyPanel\" class=\"property-panel\">\r\n    <div v-if=\"nodeName\" class=\"node-name\">{{ nodeName }}</div>\r\n    <component\r\n      :is=\"getComponent\"\r\n      v-if=\"element\"\r\n      :element=\"element\"\r\n      :modeler=\"modeler\"\r\n      :users=\"users\"\r\n      :groups=\"groups\"\r\n      :exps=\"exps\"\r\n      :categorys=\"categorys\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport taskPanel from './components/nodePanel/task'\r\nimport startEndPanel from './components/nodePanel/startEnd'\r\nimport processPanel from './components/nodePanel/process'\r\nimport sequenceFlowPanel from './components/nodePanel/sequenceFlow'\r\nimport gatewayPanel from './components/nodePanel/gateway'\r\nimport { NodeName } from './lang/zh'\r\n\r\nexport default {\r\n  name: 'PropertyPanel',\r\n  components: { processPanel, taskPanel, startEndPanel, sequenceFlowPanel, gatewayPanel },\r\n  props: {\r\n    users: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    groups: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    categorys: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    exps: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    modeler: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      element: null,\r\n      form: {\r\n        id: '',\r\n        name: '',\r\n        color: null\r\n      },\r\n    }\r\n  },\r\n  computed: {\r\n    getComponent() {\r\n      const type = this.element?.type\r\n      if (['bpmn:IntermediateThrowEvent', 'bpmn:StartEvent', 'bpmn:EndEvent'].includes(type)) {\r\n        return 'startEndPanel'\r\n      }\r\n      if ([\r\n        'bpmn:UserTask',\r\n        'bpmn:Task',\r\n        'bpmn:SendTask',\r\n        'bpmn:ReceiveTask',\r\n        'bpmn:ManualTask',\r\n        'bpmn:BusinessRuleTask',\r\n        'bpmn:ServiceTask',\r\n        'bpmn:ScriptTask'\r\n        // 'bpmn:CallActivity',\r\n        // 'bpmn:SubProcess'\r\n      ].includes(type)) {\r\n        return 'taskPanel'\r\n      }\r\n      if (type === 'bpmn:SequenceFlow') {\r\n        return 'sequenceFlowPanel'\r\n      }\r\n      if ([\r\n        'bpmn:InclusiveGateway',\r\n        'bpmn:ExclusiveGateway',\r\n        'bpmn:ParallelGateway',\r\n        'bpmn:EventBasedGateway'\r\n      ].includes(type)) {\r\n        return 'gatewayPanel'\r\n      }\r\n      if (type === 'bpmn:Process') {\r\n        return 'processPanel'\r\n      }\r\n      return null\r\n    },\r\n    nodeName() {\r\n      if (this.element) {\r\n        const bizObj = this.element.businessObject\r\n        const type = bizObj?.eventDefinitions\r\n          ? bizObj.eventDefinitions[0].$type\r\n          : bizObj.$type\r\n        return NodeName[type] || type\r\n      }\r\n      return ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.handleModeler()\r\n  },\r\n  methods: {\r\n    handleModeler() {\r\n      this.modeler.on('root.added', e => {\r\n        if (e.element.type === 'bpmn:Process') {\r\n          this.element = null\r\n          this.$nextTick().then(() => {\r\n            this.element = e.element\r\n          })\r\n        }\r\n      })\r\n      this.modeler.on('element.click', e => {\r\n        const { element } = e\r\n        if (element.type === 'bpmn:Process'\r\n          || element.type === 'bpmn:SequenceFlow'\r\n          || element.type === 'bpmn:EndEvent' ) {\r\n          this.element = element\r\n        }\r\n      })\r\n      this.modeler.on('selection.changed', e => {\r\n        // hack 同类型面板不刷新\r\n        this.element = null\r\n        const element = e.newSelection[0]\r\n        if (element) {\r\n          this.$nextTick().then(() => {\r\n            this.element = element\r\n          })\r\n        }\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.property-panel {\r\n  padding: 20px 20px;\r\n  // reset element css\r\n  .el-form--label-top .el-form-item__label {\r\n    padding: 0;\r\n  }\r\n  // 设置设计器右侧表单高度\r\n  .el-form-item {\r\n    margin-bottom: 6px;\r\n  }\r\n  .tab-table .el-form-item {\r\n    margin-bottom: 16px;\r\n  }\r\n  .node-name{\r\n    border-bottom: 1px solid #ccc;\r\n    padding: 0 0 10px 20px;\r\n    margin-bottom: 10px;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    color: #444;\r\n  }\r\n}\r\n</style>\r\n"]}]}